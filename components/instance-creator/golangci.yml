run:
  # Use Go 1.17 because of https://github.com/golangci/golangci-lint/issues/2649
  go: '1.17'

  # default concurrency is a available CPU number
  concurrency: 4

  # timeout for analysis, e.g. 30s, 5m, default is 1m
  timeout: 30m

  # exit code when at least one issue was found, default is 1
  issues-exit-code: 1

  # include test files or not, default is true
  tests: true

  # which dirs to skip: issues from them won't be reported;
  # can use regexp here: generated.*, regexp is applied on full path;
  # default value is empty list, but default dirs are skipped independently
  # from this option's value (see skip-dirs-use-default).
  # "/" will be replaced by current OS file path separator to properly work
  # on Windows.
  skip-dirs:
    - automock

  # default is true. Enables skipping of directories:
  #   vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  skip-dirs-use-default: true

  # which files to skip: they will be analyzed, but issues from them
  # won't be reported. Default value is empty list, but there is
  # no need to include all autogenerated files, we confidently recognize
  # autogenerated files. If it's not please let us know.
  # "/" will be replaced by current OS file path separator to properly work
  # on Windows.

  #  skip-files:
  #    - ".*\\.my\\.go$"
  #    - lib/bad.go

  # by default isn't set. If set we pass it to "go list -mod={option}". From "go help modules":
  # If invoked with -mod=readonly, the go command is disallowed from the implicit
  # automatic updating of go.mod described above. Instead, it fails when any changes
  # to go.mod are needed. This setting is most useful to check that go.mod does
  # not need updates, such as in a continuous integration and testing system.
  # If invoked with -mod=vendor, the go command assumes that the vendor
  # directory holds the correct copies of dependencies and ignores
  # the dependency descriptions in go.mod.
  modules-download-mode: readonly

  # Allow multiple parallel golangci-lint instances running.
  # If false (default) - golangci-lint acquires file lock on start.
  allow-parallel-runners: false


# output configuration options
output:
  # colored-line-number|line-number|json|tab|checkstyle|code-climate|junit-xml|github-actions
  # default is "colored-line-number"
  format: colored-line-number

  # print lines of code with issue, default is true
  print-issued-lines: true

  # print linter name in the end of issue text, default is true
  print-linter-name: true

  # make issues output unique by line, default is true
  uniq-by-line: true

  # add a prefix to the output file references; default is no prefix
  path-prefix: ""

  # sorts results by: filepath, line and column
  sort-results: false

linters:
  disable-all: true
    #  disable:
    # - ineffassign
    # - bodyclose
    # - cyclop
    # - dupl
    # - errname
    # - errorlint
    # - exhaustive
    # - exhaustivestruct
    # - funlen
    # - gci
    # - gochecknoglobals
    # - gochecknoinits
    # - gocognit
    # - gocyclo
    # - godot
    # - godox
    # - goerr113
    # - gofmt
    # - gofumpt
    # - goheader
    # - goimports
    # - golint
    # - gomnd
    # - gomoddirectives
    # - gomodguard
    # - gosec
    # - interfacer
    # - lll
    # - maligned
    # - nestif
    # - nlreturn
    # - noctx
    # - paralleltest
    # - scopelint
    # - tagliatelle
    # - testpackage TODO: enable
    # - thelper
    # - wrapcheck
  # - wsl
  enable:
    - deadcode
    - errcheck
    - gosimple
    - govet
    - staticcheck
    - structcheck
    - typecheck
    - unused
    - varcheck
    - asciicheck
    - depguard
    - dogsled
    - durationcheck
    - exportloopref
    - forbidigo
    - forcetypeassert
    - goconst
    - gocritic
    - goprintffuncname
    - ifshort
    - importas
    - makezero
    - misspell
    - nakedret
    - nilerr
    - nolintlint
    - prealloc
    - predeclared
    - promlinter
    - rowserrcheck
    - sqlclosecheck
    - tparallel
    - unconvert
    - wastedassign
    - revive
    - stylecheck
    - unparam
    - whitespace
  # enable-all: true
  fast: false # Run only fast linters from enabled linters set (first run won't be fast)

linters-settings:
  revive:
    severity: warning
    # see https://github.com/mgechev/revive#available-rules for details.
    rules:
      - name: exported
        severity: warning

issues:
  #  # List of regexps of issue texts to exclude, empty list by default.
  #  # But independently from this option we use default exclude patterns,
  #  # it can be disabled by `exclude-use-default: false`. To list all
  #  # excluded by default patterns execute `golangci-lint run --help`
  #  exclude:
  #    - abcdef
  #
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: _test\.go
      linters:
        - deadcode
        - unused
        - goconst
        - gocritic
        - gosec
        - unparam

    - path: _test\.go
      text: "SA1029"
      linters:
        - staticcheck

    - path: _test\.go
      text: "error-strings|context-keys-type|context-as-argument"
      linters:
        - revive

    - linters:
        - gocritic
      text: "ifElseChain|appendAssign"

    - linters:
        - revive
      text: "unexported-return|error-naming|((type|func) name will be used as)"

    - linters:
        - stylecheck
      text: "ST1012"

    - linters:
        - forcetypeassert
      text: "type assertion must be checked"

    - linters:
        - ifshort
      text: "variable 'errs' is only used in the if-statement"

  #    # Exclude known linters from partially hard-vendored code,
  #    # which is impossible to exclude via "nolint" comments.
  #    - path: internal/hmac/
  #      text: "weak cryptographic primitive"
  #      linters:
  #        - gosec
  #
  #    # Exclude some staticcheck messages
  #    - linters:
  #        - staticcheck
  #      text: "SA9003:"
  #
  #    # Exclude lll issues for long lines with go:generate
  #    - linters:
  #        - lll
  #      source: "^//go:generate "
  #
  #  # Independently from option `exclude` we use default exclude patterns,
  #  # it can be disabled by this option. To list all
  #  # excluded by default patterns execute `golangci-lint run --help`.
  #  # Default value for this option is true.
  #  exclude-use-default: false
  #
  #  # The default value is false. If set to true exclude and exclude-rules
  #  # regular expressions become case sensitive.
  #  exclude-case-sensitive: false
  #
  # The list of ids of default excludes to include or disable. By default it's empty.
  include:
    - EXC0012 # disable excluding of issues about comments from revive
    - EXC0014

  # Maximum issues count per one linter. Set to 0 to disable. Default is 50.
  max-issues-per-linter: 0

  # Maximum count of issues with the same text. Set to 0 to disable. Default is 3.
  max-same-issues: 0