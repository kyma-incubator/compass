// Code generated by mockery. DO NOT EDIT.

package automock

import (
	persistence "github.com/kyma-incubator/compass/components/instance-creator/internal/persistence"
	mock "github.com/stretchr/testify/mock"
)

// Connection is an autogenerated mock type for the Connection type
type Connection struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *Connection) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAdvisoryLocker provides a mock function with given fields:
func (_m *Connection) GetAdvisoryLocker() persistence.AdvisoryLocker {
	ret := _m.Called()

	var r0 persistence.AdvisoryLocker
	if rf, ok := ret.Get(0).(func() persistence.AdvisoryLocker); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(persistence.AdvisoryLocker)
		}
	}

	return r0
}

type mockConstructorTestingTNewConnection interface {
	mock.TestingT
	Cleanup(func())
}

// NewConnection creates a new instance of Connection. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewConnection(t mockConstructorTestingTNewConnection) *Connection {
	mock := &Connection{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
