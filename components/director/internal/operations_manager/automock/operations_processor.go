// Code generated by mockery. DO NOT EDIT.

package automock

import (
	context "context"

	model "github.com/kyma-incubator/compass/components/director/internal/model"
	mock "github.com/stretchr/testify/mock"
)

// OperationsProcessor is an autogenerated mock type for the OperationsProcessor type
type OperationsProcessor struct {
	mock.Mock
}

// Process provides a mock function with given fields: ctx, operation
func (_m *OperationsProcessor) Process(ctx context.Context, operation *model.Operation) error {
	ret := _m.Called(ctx, operation)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *model.Operation) error); ok {
		r0 = rf(ctx, operation)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewOperationsProcessor interface {
	mock.TestingT
	Cleanup(func())
}

// NewOperationsProcessor creates a new instance of OperationsProcessor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewOperationsProcessor(t mockConstructorTestingTNewOperationsProcessor) *OperationsProcessor {
	mock := &OperationsProcessor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
