// Code generated by mockery. DO NOT EDIT.

package automock

import (
	context "context"

	model "github.com/kyma-incubator/compass/components/director/internal/model"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// IntSysRepo is an autogenerated mock type for the intSysRepo type
type IntSysRepo struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, item
func (_m *IntSysRepo) Create(ctx context.Context, item model.IntegrationSystem) error {
	ret := _m.Called(ctx, item)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, model.IntegrationSystem) error); ok {
		r0 = rf(ctx, item)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Exists provides a mock function with given fields: ctx, id
func (_m *IntSysRepo) Exists(ctx context.Context, id string) (bool, error) {
	ret := _m.Called(ctx, id)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context, string) bool); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIntSysRepo creates a new instance of IntSysRepo. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewIntSysRepo(t testing.TB) *IntSysRepo {
	mock := &IntSysRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
