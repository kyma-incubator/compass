// Code generated by mockery v1.0.0. DO NOT EDIT.

package automock

import context "context"
import mock "github.com/stretchr/testify/mock"
import model "github.com/kyma-incubator/compass/components/director/internal/model"

// TenantStorageService is an autogenerated mock type for the TenantStorageService type
type TenantStorageService struct {
	mock.Mock
}

// CreateManyIfNotExists provides a mock function with given fields: ctx, tenantInputs
func (_m *TenantStorageService) CreateManyIfNotExists(ctx context.Context, tenantInputs []model.BusinessTenantMappingInput) error {
	ret := _m.Called(ctx, tenantInputs)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, []model.BusinessTenantMappingInput) error); ok {
		r0 = rf(ctx, tenantInputs)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteMany provides a mock function with given fields: ctx, tenantInputs
func (_m *TenantStorageService) DeleteMany(ctx context.Context, tenantInputs []model.BusinessTenantMappingInput) error {
	ret := _m.Called(ctx, tenantInputs)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, []model.BusinessTenantMappingInput) error); ok {
		r0 = rf(ctx, tenantInputs)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
