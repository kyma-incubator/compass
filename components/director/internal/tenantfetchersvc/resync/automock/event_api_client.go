// Code generated by mockery. DO NOT EDIT.

package automock

import (
	testing "testing"

	resync "github.com/kyma-incubator/compass/components/director/internal/tenantfetchersvc/resync"
	mock "github.com/stretchr/testify/mock"
)

// EventAPIClient is an autogenerated mock type for the EventAPIClient type
type EventAPIClient struct {
	mock.Mock
}

// FetchTenantEventsPage provides a mock function with given fields: eventsType, additionalQueryParams
func (_m *EventAPIClient) FetchTenantEventsPage(eventsType resync.EventsType, additionalQueryParams resync.QueryParams) (*resync.EventsPage, error) {
	ret := _m.Called(eventsType, additionalQueryParams)

	var r0 *resync.EventsPage
	if rf, ok := ret.Get(0).(func(resync.EventsType, resync.QueryParams) *resync.EventsPage); ok {
		r0 = rf(eventsType, additionalQueryParams)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*resync.EventsPage)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(resync.EventsType, resync.QueryParams) error); ok {
		r1 = rf(eventsType, additionalQueryParams)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewEventAPIClient creates a new instance of EventAPIClient. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewEventAPIClient(t testing.TB) *EventAPIClient {
	mock := &EventAPIClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
