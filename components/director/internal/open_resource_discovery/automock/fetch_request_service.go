// Code generated by mockery. DO NOT EDIT.

package automock

import (
	context "context"

	model "github.com/kyma-incubator/compass/components/director/internal/model"
	mock "github.com/stretchr/testify/mock"
)

// FetchRequestService is an autogenerated mock type for the FetchRequestService type
type FetchRequestService struct {
	mock.Mock
}

// FetchSpec provides a mock function with given fields: ctx, fr
func (_m *FetchRequestService) FetchSpec(ctx context.Context, fr *model.FetchRequest) (*string, *model.FetchRequestStatus) {
	ret := _m.Called(ctx, fr)

	var r0 *string
	if rf, ok := ret.Get(0).(func(context.Context, *model.FetchRequest) *string); ok {
		r0 = rf(ctx, fr)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*string)
		}
	}

	var r1 *model.FetchRequestStatus
	if rf, ok := ret.Get(1).(func(context.Context, *model.FetchRequest) *model.FetchRequestStatus); ok {
		r1 = rf(ctx, fr)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*model.FetchRequestStatus)
		}
	}

	return r0, r1
}

// Update provides a mock function with given fields: ctx, fr
func (_m *FetchRequestService) Update(ctx context.Context, fr *model.FetchRequest) error {
	ret := _m.Called(ctx, fr)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *model.FetchRequest) error); ok {
		r0 = rf(ctx, fr)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewFetchRequestService interface {
	mock.TestingT
	Cleanup(func())
}

// NewFetchRequestService creates a new instance of FetchRequestService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFetchRequestService(t mockConstructorTestingTNewFetchRequestService) *FetchRequestService {
	mock := &FetchRequestService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
