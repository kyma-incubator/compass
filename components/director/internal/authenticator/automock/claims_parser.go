// Code generated by mockery v1.0.0. DO NOT EDIT.

package automock

import (
	context "context"

	claims "github.com/kyma-incubator/compass/components/director/internal/authenticator/claims"

	jwt "github.com/form3tech-oss/jwt-go"

	mock "github.com/stretchr/testify/mock"
)

// ClaimsParser is an autogenerated mock type for the ClaimsParser type
type ClaimsParser struct {
	mock.Mock
}

// ParseClaims provides a mock function with given fields: ctx, bearerToken, keyfunc
func (_m *ClaimsParser) ParseClaims(ctx context.Context, bearerToken string, keyfunc jwt.Keyfunc) (claims.Claims, error) {
	ret := _m.Called(ctx, bearerToken, keyfunc)

	var r0 claims.Claims
	if rf, ok := ret.Get(0).(func(context.Context, string, jwt.Keyfunc) claims.Claims); ok {
		r0 = rf(ctx, bearerToken, keyfunc)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(claims.Claims)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, jwt.Keyfunc) error); ok {
		r1 = rf(ctx, bearerToken, keyfunc)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
