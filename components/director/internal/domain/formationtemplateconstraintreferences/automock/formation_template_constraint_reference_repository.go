// Code generated by mockery. DO NOT EDIT.

package automock

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	model "github.com/kyma-incubator/compass/components/director/internal/model"
)

// FormationTemplateConstraintReferenceRepository is an autogenerated mock type for the formationTemplateConstraintReferenceRepository type
type FormationTemplateConstraintReferenceRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, item
func (_m *FormationTemplateConstraintReferenceRepository) Create(ctx context.Context, item *model.FormationTemplateConstraintReference) error {
	ret := _m.Called(ctx, item)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *model.FormationTemplateConstraintReference) error); ok {
		r0 = rf(ctx, item)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Delete provides a mock function with given fields: ctx, formationTemplateID, constraintID
func (_m *FormationTemplateConstraintReferenceRepository) Delete(ctx context.Context, formationTemplateID string, constraintID string) error {
	ret := _m.Called(ctx, formationTemplateID, constraintID)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(ctx, formationTemplateID, constraintID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewFormationTemplateConstraintReferenceRepository creates a new instance of FormationTemplateConstraintReferenceRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewFormationTemplateConstraintReferenceRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *FormationTemplateConstraintReferenceRepository {
	mock := &FormationTemplateConstraintReferenceRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
