// Code generated by mockery. DO NOT EDIT.

package automock

import (
	config "github.com/kyma-incubator/compass/components/director/internal/system-field-discovery-engine/config"
	mock "github.com/stretchr/testify/mock"
)

// SystemFieldDiscoveryEngineConfig is an autogenerated mock type for the SystemFieldDiscoveryEngineConfig type
type SystemFieldDiscoveryEngineConfig struct {
	mock.Mock
}

// PrepareConfiguration provides a mock function with given fields:
func (_m *SystemFieldDiscoveryEngineConfig) PrepareConfiguration() (*config.SystemFieldDiscoveryEngineConfig, error) {
	ret := _m.Called()

	var r0 *config.SystemFieldDiscoveryEngineConfig
	var r1 error
	if rf, ok := ret.Get(0).(func() (*config.SystemFieldDiscoveryEngineConfig, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *config.SystemFieldDiscoveryEngineConfig); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*config.SystemFieldDiscoveryEngineConfig)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewSystemFieldDiscoveryEngineConfig creates a new instance of SystemFieldDiscoveryEngineConfig. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSystemFieldDiscoveryEngineConfig(t interface {
	mock.TestingT
	Cleanup(func())
}) *SystemFieldDiscoveryEngineConfig {
	mock := &SystemFieldDiscoveryEngineConfig{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
