// Code generated by mockery. DO NOT EDIT.

package automock

import (
	model "github.com/kyma-incubator/compass/components/director/internal/model"
	mock "github.com/stretchr/testify/mock"
)

// FormationAssignmentConverter is an autogenerated mock type for the formationAssignmentConverter type
type FormationAssignmentConverter struct {
	mock.Mock
}

// ToInput provides a mock function with given fields: assignment
func (_m *FormationAssignmentConverter) ToInput(assignment *model.FormationAssignment) *model.FormationAssignmentInput {
	ret := _m.Called(assignment)

	var r0 *model.FormationAssignmentInput
	if rf, ok := ret.Get(0).(func(*model.FormationAssignment) *model.FormationAssignmentInput); ok {
		r0 = rf(assignment)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.FormationAssignmentInput)
		}
	}

	return r0
}

type mockConstructorTestingTNewFormationAssignmentConverter interface {
	mock.TestingT
	Cleanup(func())
}

// NewFormationAssignmentConverter creates a new instance of FormationAssignmentConverter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFormationAssignmentConverter(t mockConstructorTestingTNewFormationAssignmentConverter) *FormationAssignmentConverter {
	mock := &FormationAssignmentConverter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
