# Code generated by Compass integration tests, DO NOT EDIT.
mutation {
  result: createApplicationTemplate(
    in: {
      name: "SAP app-template-name"
      description: "app-template-desc"
      applicationInput: {
        name: "{{name}}"
        providerName: "compass-tests"
        description: "test {{display-name}}"
        labels: { a: ["b", "c"], d: ["e", "f"] }
        webhooks: [{ type: CONFIGURATION_CHANGED, url: "http://url.com" }]
        healthCheckURL: "http://url.valid"
      }
      placeholders: [
        { name: "name", description: "app" }
        { name: "display-name", description: "new-placeholder-display-name" }
      ]
      accessLevel: GLOBAL
      labels: { subscriptionProviderId: "id-value!t12345", test: ["test"] }
    }
  ) {
    id
    name
    description
    applicationInput
    placeholders {
      name
      description
    }
    webhooks {
      id
      applicationID
      applicationTemplateID
      runtimeID
      type
      mode
      correlationIdKey
      retryInterval
      timeout
      url
      urlTemplate
      inputTemplate
      headerTemplate
      outputTemplate
      statusTemplate
      auth {
        credential {
          ... on BasicCredentialData {
            username
            password
          }
          ... on CertificateOAuthCredentialData {
            clientId
            certificate
            url
          }
          ... on OAuthCredentialData {
            clientId
            clientSecret
            url
          }
        }
        oneTimeToken {
          __typename
          token
          used
          expiresAt
        }
        certCommonName
        accessStrategy
        additionalHeaders
        additionalQueryParams
        requestAuth {
          csrf {
            tokenEndpointURL
            credential {
              ... on BasicCredentialData {
                username
                password
              }
              ... on OAuthCredentialData {
                clientId
                clientSecret
                url
              }
              ... on CertificateOAuthCredentialData {
                clientId
                certificate
                url
              }
            }
            additionalHeaders
            additionalQueryParams
          }
        }
      }
    }
    labels
    accessLevel
  }
}
