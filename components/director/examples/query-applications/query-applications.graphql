# Code generated by Compass integration tests, DO NOT EDIT.
query {
  result: applications {
    data {
      id
      name
      providerName
      description
      baseUrl
      systemNumber
      systemStatus
      integrationSystemID
      applicationTemplateID
      labels
      deletedAt
      updatedAt
      error
      status {
        condition
        timestamp
      }
      webhooks {
        id
        applicationID
        applicationTemplateID
        runtimeID
        formationTemplateID
        type
        mode
        correlationIdKey
        retryInterval
        timeout
        url
        urlTemplate
        inputTemplate
        headerTemplate
        outputTemplate
        statusTemplate
        auth {
          credential {
            ... on BasicCredentialData {
              username
              password
            }
            ... on CertificateOAuthCredentialData {
              clientId
              certificate
              url
            }
            ... on OAuthCredentialData {
              clientId
              clientSecret
              url
            }
          }
          oneTimeToken {
            __typename
            token
            used
            expiresAt
          }
          certCommonName
          accessStrategy
          additionalHeaders
          additionalQueryParams
          requestAuth {
            csrf {
              tokenEndpointURL
              credential {
                ... on BasicCredentialData {
                  username
                  password
                }
                ... on OAuthCredentialData {
                  clientId
                  clientSecret
                  url
                }
                ... on CertificateOAuthCredentialData {
                  clientId
                  certificate
                  url
                }
              }
              additionalHeaders
              additionalQueryParams
            }
          }
        }
        createdAt
      }
      healthCheckURL
      bundles {
        data {
          id
          name
          description
          instanceAuthRequestInputSchema
          instanceAuths {
            id
            context
            inputParams
            auth {
              credential {
                ... on BasicCredentialData {
                  username
                  password
                }
                ... on CertificateOAuthCredentialData {
                  clientId
                  certificate
                  url
                }
                ... on OAuthCredentialData {
                  clientId
                  clientSecret
                  url
                }
              }
              oneTimeToken {
                __typename
                token
                used
                expiresAt
              }
              certCommonName
              accessStrategy
              additionalHeaders
              additionalQueryParams
              requestAuth {
                csrf {
                  tokenEndpointURL
                  credential {
                    ... on BasicCredentialData {
                      username
                      password
                    }
                    ... on OAuthCredentialData {
                      clientId
                      clientSecret
                      url
                    }
                    ... on CertificateOAuthCredentialData {
                      clientId
                      certificate
                      url
                    }
                  }
                  additionalHeaders
                  additionalQueryParams
                }
              }
            }
            status {
              condition
              timestamp
              message
              reason
            }
            runtimeID
            runtimeContextID
          }
          defaultInstanceAuth {
            credential {
              ... on BasicCredentialData {
                username
                password
              }
              ... on CertificateOAuthCredentialData {
                clientId
                certificate
                url
              }
              ... on OAuthCredentialData {
                clientId
                clientSecret
                url
              }
            }
            oneTimeToken {
              __typename
              token
              used
              expiresAt
            }
            certCommonName
            accessStrategy
            additionalHeaders
            additionalQueryParams
            requestAuth {
              csrf {
                tokenEndpointURL
                credential {
                  ... on BasicCredentialData {
                    username
                    password
                  }
                  ... on OAuthCredentialData {
                    clientId
                    clientSecret
                    url
                  }
                  ... on CertificateOAuthCredentialData {
                    clientId
                    certificate
                    url
                  }
                }
                additionalHeaders
                additionalQueryParams
              }
            }
          }
          apiDefinitions {
            data {
              id
              name
              description
              spec {
                id
                data
                format
                type
                fetchRequest {
                  url
                  auth {
                    credential {
                      ... on BasicCredentialData {
                        username
                        password
                      }
                      ... on CertificateOAuthCredentialData {
                        clientId
                        certificate
                        url
                      }
                      ... on OAuthCredentialData {
                        clientId
                        clientSecret
                        url
                      }
                    }
                    oneTimeToken {
                      __typename
                      token
                      used
                      expiresAt
                    }
                    certCommonName
                    accessStrategy
                    additionalHeaders
                    additionalQueryParams
                    requestAuth {
                      csrf {
                        tokenEndpointURL
                        credential {
                          ... on BasicCredentialData {
                            username
                            password
                          }
                          ... on OAuthCredentialData {
                            clientId
                            clientSecret
                            url
                          }
                          ... on CertificateOAuthCredentialData {
                            clientId
                            certificate
                            url
                          }
                        }
                        additionalHeaders
                        additionalQueryParams
                      }
                    }
                  }
                  mode
                  filter
                  status {
                    condition
                    message
                    timestamp
                  }
                }
              }
              targetURL
              group
              version {
                value
                deprecated
                deprecatedSince
                forRemoval
              }
            }
            pageInfo {
              startCursor
              endCursor
              hasNextPage
            }
            totalCount
          }
          eventDefinitions {
            data {
              id
              name
              description
              group
              spec {
                id
                data
                type
                format
                fetchRequest {
                  url
                  auth {
                    credential {
                      ... on BasicCredentialData {
                        username
                        password
                      }
                      ... on CertificateOAuthCredentialData {
                        clientId
                        certificate
                        url
                      }
                      ... on OAuthCredentialData {
                        clientId
                        clientSecret
                        url
                      }
                    }
                    oneTimeToken {
                      __typename
                      token
                      used
                      expiresAt
                    }
                    certCommonName
                    accessStrategy
                    additionalHeaders
                    additionalQueryParams
                    requestAuth {
                      csrf {
                        tokenEndpointURL
                        credential {
                          ... on BasicCredentialData {
                            username
                            password
                          }
                          ... on OAuthCredentialData {
                            clientId
                            clientSecret
                            url
                          }
                          ... on CertificateOAuthCredentialData {
                            clientId
                            certificate
                            url
                          }
                        }
                        additionalHeaders
                        additionalQueryParams
                      }
                    }
                  }
                  mode
                  filter
                  status {
                    condition
                    message
                    timestamp
                  }
                }
              }
              version {
                value
                deprecated
                deprecatedSince
                forRemoval
              }
            }
            pageInfo {
              startCursor
              endCursor
              hasNextPage
            }
            totalCount
          }
          documents {
            data {
              id
              title
              displayName
              description
              format
              kind
              data
              fetchRequest {
                url
                auth {
                  credential {
                    ... on BasicCredentialData {
                      username
                      password
                    }
                    ... on CertificateOAuthCredentialData {
                      clientId
                      certificate
                      url
                    }
                    ... on OAuthCredentialData {
                      clientId
                      clientSecret
                      url
                    }
                  }
                  oneTimeToken {
                    __typename
                    token
                    used
                    expiresAt
                  }
                  certCommonName
                  accessStrategy
                  additionalHeaders
                  additionalQueryParams
                  requestAuth {
                    csrf {
                      tokenEndpointURL
                      credential {
                        ... on BasicCredentialData {
                          username
                          password
                        }
                        ... on OAuthCredentialData {
                          clientId
                          clientSecret
                          url
                        }
                        ... on CertificateOAuthCredentialData {
                          clientId
                          certificate
                          url
                        }
                      }
                      additionalHeaders
                      additionalQueryParams
                    }
                  }
                }
                mode
                filter
                status {
                  condition
                  message
                  timestamp
                }
              }
            }
            pageInfo {
              startCursor
              endCursor
              hasNextPage
            }
            totalCount
          }
        }
        pageInfo {
          startCursor
          endCursor
          hasNextPage
        }
        totalCount
      }
      auths {
        id
        auth {
          credential {
            ... on BasicCredentialData {
              username
              password
            }
            ... on CertificateOAuthCredentialData {
              clientId
              certificate
              url
            }
            ... on OAuthCredentialData {
              clientId
              clientSecret
              url
            }
          }
          oneTimeToken {
            __typename
            token
            used
            expiresAt
          }
          certCommonName
          accessStrategy
          additionalHeaders
          additionalQueryParams
          requestAuth {
            csrf {
              tokenEndpointURL
              credential {
                ... on BasicCredentialData {
                  username
                  password
                }
                ... on OAuthCredentialData {
                  clientId
                  clientSecret
                  url
                }
                ... on CertificateOAuthCredentialData {
                  clientId
                  certificate
                  url
                }
              }
              additionalHeaders
              additionalQueryParams
            }
          }
        }
      }
      eventingConfiguration {
        defaultURL
      }
    }
    pageInfo {
      startCursor
      endCursor
      hasNextPage
    }
    totalCount
  }
}
