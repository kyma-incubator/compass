# Code generated by Compass integration tests, DO NOT EDIT.
mutation {
  result: updateBundleInstanceAuth(
    id: "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"
    bundleID: "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"
    in: {
      context: "{\"ContextData\":\"ContextValue\"}"
      auth: {
        credential: {
          oauth: {
            clientId: "clientid"
            clientSecret: "grazynasecret"
            url: "url.net"
          }
        }
        additionalHeadersSerialized: "{\"header-A\":[\"ha1\",\"ha2\"],\"header-B\":[\"hb1\",\"hb2\"]}"
        additionalQueryParamsSerialized: "{\"qA\":[\"qa1\",\"qa2\"],\"qB\":[\"qb1\",\"qb2\"]}"
      }
      inputParams: "{\"InKey\":\"InValue\"}"
    }
  ) {
    id
    context
    inputParams
    auth {
      credential {
        ... on BasicCredentialData {
          username
          password
        }
        ... on CertificateOAuthCredentialData {
          clientId
          certificate
          url
        }
        ... on OAuthCredentialData {
          clientId
          clientSecret
          url
        }
      }
      oneTimeToken {
        __typename
        token
        used
        expiresAt
      }
      certCommonName
      accessStrategy
      additionalHeaders
      additionalQueryParams
      requestAuth {
        csrf {
          tokenEndpointURL
          credential {
            ... on BasicCredentialData {
              username
              password
            }
            ... on OAuthCredentialData {
              clientId
              clientSecret
              url
            }
            ... on CertificateOAuthCredentialData {
              clientId
              certificate
              url
            }
          }
          additionalHeaders
          additionalQueryParams
        }
      }
    }
    status {
      condition
      timestamp
      message
      reason
    }
    runtimeID
    runtimeContextID
  }
}
