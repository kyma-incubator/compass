# Code generated by Compass integration tests, DO NOT EDIT.
mutation {
  result: addAPIDefinition(
    applicationID: "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"
    in: {
      name: "new-api-name"
      targetURL: "https://target.url"
      spec: {
        type: OPEN_API
        format: JSON
        fetchRequest: { url: "https://foo.bar" }
      }
    }
  ) {
    id
    name
    description
    spec {
      data
      format
      type
      fetchRequest {
        url
        auth {
          credential {
            ... on BasicCredentialData {
              username
              password
            }
            ... on OAuthCredentialData {
              clientId
              clientSecret
              url
            }
          }
          additionalHeaders
          additionalQueryParams
          requestAuth {
            csrf {
              tokenEndpointURL
              credential {
                ... on BasicCredentialData {
                  username
                  password
                }
                ... on OAuthCredentialData {
                  clientId
                  clientSecret
                  url
                }
              }
              additionalHeaders
              additionalQueryParams
            }
          }
        }
        mode
        filter
        status {
          condition
          timestamp
        }
      }
    }
    targetURL
    group
    auths {
      runtimeID
      auth {
        credential {
          ... on BasicCredentialData {
            username
            password
          }
          ... on OAuthCredentialData {
            clientId
            clientSecret
            url
          }
        }
        additionalHeaders
        additionalQueryParams
        requestAuth {
          csrf {
            tokenEndpointURL
            credential {
              ... on BasicCredentialData {
                username
                password
              }
              ... on OAuthCredentialData {
                clientId
                clientSecret
                url
              }
            }
            additionalHeaders
            additionalQueryParams
          }
        }
      }
    }
    defaultAuth {
      credential {
        ... on BasicCredentialData {
          username
          password
        }
        ... on OAuthCredentialData {
          clientId
          clientSecret
          url
        }
      }
      additionalHeaders
      additionalQueryParams
      requestAuth {
        csrf {
          tokenEndpointURL
          credential {
            ... on BasicCredentialData {
              username
              password
            }
            ... on OAuthCredentialData {
              clientId
              clientSecret
              url
            }
          }
          additionalHeaders
          additionalQueryParams
        }
      }
    }
    version {
      value
      deprecated
      deprecatedSince
      forRemoval
    }
  }
}
