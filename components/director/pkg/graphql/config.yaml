schema: schema.graphql

# Let gqlgen know where to put the generated server
exec:
  filename: schema_gen.go
  package: graphql

# Let gqlgen know where to the generated models (if any)
model:
  filename: models_gen.go
  package: graphql

# Optional turns on binding to field names by tag provided
struct_tag: json

# Uncomment to turn on resolver stub generation
#resolver:
#  filename: resolver.go # where to write them
#  type: Resolver  # what's the resolver root implementation type called?

# Tell gqlgen about any existing models you want to reuse for
# graphql. These normally come from the db or a remote api.
models:
  Labels:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.Labels"
  Timestamp:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.Timestamp"
  HttpHeaders:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.HTTPHeaders"
  HttpHeadersSerialized:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.HTTPHeadersSerialized"
  QueryParams:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.QueryParams"
  QueryParamsSerialized:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.QueryParamsSerialized"
  CLOB:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.CLOB"
  JSONSchema:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.JSONSchema"
  JSON:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.JSON"
  PageCursor:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.PageCursor"
  Formation:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.Formation"
  Application:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.Application"
    fields:
      documents:
        resolver: true
      eventDefinitions:
        resolver: true
      apiDefinitions:
        resolver: true
      apiDefinition:
        resolver: true
      eventDefinition:
        resolver: true
      integrationDependencies:
        resolver: true
      webhooks:
        resolver: true
      labels:
        resolver: true
      auths:
        resolver: true
      eventingConfiguration:
        resolver: true
      bundles:
        resolver: true
      bundle:
        resolver: true
      applicationTemplate:
        resolver: true
  Bundle:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.Bundle"
    fields:
      apiDefinitions:
        resolver: true
      apiDefinition:
        resolver: true
      documents:
        resolver: true
      document:
        resolver: true
      eventDefinitions:
        resolver: true
      eventDefinition:
        resolver: true
      instanceAuth:
        resolver: true
      instanceAuths:
        resolver: true

  APISpec:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.APISpec"
    fields:
      fetchRequest:
        resolver: true

  EventSpec:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.EventSpec"
    fields:
      fetchRequest:
        resolver: true

  EventDefinition:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.EventDefinition"
    fields:
      spec:
        resolver: true

  Document:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.Document"
    fields:
      fetchRequest:
        resolver: true

  Runtime:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.Runtime"
    fields:
      labels:
        resolver: true
      auths:
        resolver: true
      eventingConfiguration:
        resolver: true
      runtimeContext:
        resolver: true
      runtimeContexts:
        resolver: true
      webhooks:
        resolver: true

  RuntimeContext:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.RuntimeContext"
    fields:
      labels:
        resolver: true

  IntegrationSystem:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.IntegrationSystem"
    fields:
      auths:
        resolver: true

  APIDefinition:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.APIDefinition"
    fields:
      spec:
        resolver: true
      auth:
        resolver: true
      auths:
        resolver: true

  OneTimeTokenForApplication:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.OneTimeTokenForApplication"
    fields:
      raw:
        resolver: true
      rawEncoded:
        resolver: true

  OneTimeTokenForRuntime:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.OneTimeTokenForRuntime"
    fields:
      raw:
        resolver: true
      rawEncoded:
        resolver: true

  ApplicationTemplate:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.ApplicationTemplate"
    fields:
      webhooks:
        resolver: true
      labels:
        resolver: true

  FormationTemplate:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.FormationTemplate"
    fields:
      webhooks:
        resolver: true
      formationConstraints:
        resolver: true

  FormationAssignment:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.FormationAssignment"
    fields:
      targetEntity:
        resolver: true
      sourceEntity:
        resolver: true

  Tenant:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.Tenant"
    fields:
      labels:
        resolver: true

  IntegrationDependency:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.IntegrationDependency"

  Aspect:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.Aspect"

  AspectAPIDefinition:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.AspectAPIDefinition"

  AspectEventDefinition:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.AspectEventDefinition"

  AspectEventDefinitionSubset:
    model: "github.com/kyma-incubator/compass/components/director/pkg/graphql.AspectEventDefinitionSubset"
