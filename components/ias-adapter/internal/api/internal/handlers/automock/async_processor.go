// Code generated by mockery. DO NOT EDIT.

package automock

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	types "github.com/kyma-incubator/compass/components/ias-adapter/internal/types"
)

// AsyncProcessor is an autogenerated mock type for the AsyncProcessor type
type AsyncProcessor struct {
	mock.Mock
}

// ProcessTMRequest provides a mock function with given fields: ctx, tenantMapping
func (_m *AsyncProcessor) ProcessTMRequest(ctx context.Context, tenantMapping types.TenantMapping) {
	_m.Called(ctx, tenantMapping)
}

type mockConstructorTestingTNewAsyncProcessor interface {
	mock.TestingT
	Cleanup(func())
}

// NewAsyncProcessor creates a new instance of AsyncProcessor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAsyncProcessor(t mockConstructorTestingTNewAsyncProcessor) *AsyncProcessor {
	mock := &AsyncProcessor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
