// Code generated by mockery. DO NOT EDIT.

package automock

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	ucl "github.com/kyma-incubator/compass/components/ias-adapter/internal/service/ucl"
)

// UCLService is an autogenerated mock type for the UCLService type
type UCLService struct {
	mock.Mock
}

// ReportStatus provides a mock function with given fields: ctx, url, statusReport
func (_m *UCLService) ReportStatus(ctx context.Context, url string, statusReport ucl.StatusReport) error {
	ret := _m.Called(ctx, url, statusReport)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, ucl.StatusReport) error); ok {
		r0 = rf(ctx, url, statusReport)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewUCLService interface {
	mock.TestingT
	Cleanup(func())
}

// NewUCLService creates a new instance of UCLService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUCLService(t mockConstructorTestingTNewUCLService) *UCLService {
	mock := &UCLService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
