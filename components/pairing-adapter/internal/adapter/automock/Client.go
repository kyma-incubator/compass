// Code generated by mockery v2.5.1. DO NOT EDIT.

package automock

import (
	context "context"

	adapter "github.com/kyma-incubator/compass/components/pairing-adapter/internal/adapter"

	mock "github.com/stretchr/testify/mock"
)

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// Do provides a mock function with given fields: ctx, req
func (_m *Client) Do(ctx context.Context, req adapter.RequestData) (*adapter.ExternalToken, error) {
	ret := _m.Called(ctx, req)

	var r0 *adapter.ExternalToken
	if rf, ok := ret.Get(0).(func(context.Context, adapter.RequestData) *adapter.ExternalToken); ok {
		r0 = rf(ctx, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*adapter.ExternalToken)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, adapter.RequestData) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
