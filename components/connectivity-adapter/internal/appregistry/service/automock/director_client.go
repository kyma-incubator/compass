// Code generated by mockery v1.0.0. DO NOT EDIT.

package automock

import graphql "github.com/kyma-incubator/compass/components/director/pkg/graphql"
import mock "github.com/stretchr/testify/mock"

// DirectorClient is an autogenerated mock type for the DirectorClient type
type DirectorClient struct {
	mock.Mock
}

// CreateAPIDefinition provides a mock function with given fields: appID, apiDefinitionInput
func (_m *DirectorClient) CreateAPIDefinition(appID string, apiDefinitionInput graphql.APIDefinitionInput) (string, error) {
	ret := _m.Called(appID, apiDefinitionInput)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, graphql.APIDefinitionInput) string); ok {
		r0 = rf(appID, apiDefinitionInput)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, graphql.APIDefinitionInput) error); ok {
		r1 = rf(appID, apiDefinitionInput)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateEventDefinition provides a mock function with given fields: appID, eventDefinitionInput
func (_m *DirectorClient) CreateEventDefinition(appID string, eventDefinitionInput graphql.EventDefinitionInput) (string, error) {
	ret := _m.Called(appID, eventDefinitionInput)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, graphql.EventDefinitionInput) string); ok {
		r0 = rf(appID, eventDefinitionInput)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, graphql.EventDefinitionInput) error); ok {
		r1 = rf(appID, eventDefinitionInput)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteAPIDefinition provides a mock function with given fields: apiID
func (_m *DirectorClient) DeleteAPIDefinition(apiID string) error {
	ret := _m.Called(apiID)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(apiID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteEventDefinition provides a mock function with given fields: eventID
func (_m *DirectorClient) DeleteEventDefinition(eventID string) error {
	ret := _m.Called(eventID)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(eventID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetApplicationLabel provides a mock function with given fields: appID, label
func (_m *DirectorClient) SetApplicationLabel(appID string, label graphql.LabelInput) error {
	ret := _m.Called(appID, label)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, graphql.LabelInput) error); ok {
		r0 = rf(appID, label)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
