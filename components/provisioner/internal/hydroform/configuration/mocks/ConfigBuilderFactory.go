// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import configuration "github.com/kyma-incubator/compass/components/provisioner/internal/hydroform/configuration"
import gqlschema "github.com/kyma-incubator/compass/components/provisioner/pkg/gqlschema"
import mock "github.com/stretchr/testify/mock"
import model "github.com/kyma-incubator/compass/components/provisioner/internal/model"

// ConfigBuilderFactory is an autogenerated mock type for the ConfigBuilderFactory type
type ConfigBuilderFactory struct {
	mock.Mock
}

// NewDeprovisioningBuilder provides a mock function with given fields: runtimeConfig
func (_m *ConfigBuilderFactory) NewDeprovisioningBuilder(runtimeConfig model.RuntimeConfig) configuration.ConfigBuilder {
	ret := _m.Called(runtimeConfig)

	var r0 configuration.ConfigBuilder
	if rf, ok := ret.Get(0).(func(model.RuntimeConfig) configuration.ConfigBuilder); ok {
		r0 = rf(runtimeConfig)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(configuration.ConfigBuilder)
		}
	}

	return r0
}

// NewProvisioningBuilder provides a mock function with given fields: provisionInput
func (_m *ConfigBuilderFactory) NewProvisioningBuilder(provisionInput gqlschema.ProvisionRuntimeInput) configuration.ConfigBuilder {
	ret := _m.Called(provisionInput)

	var r0 configuration.ConfigBuilder
	if rf, ok := ret.Get(0).(func(gqlschema.ProvisionRuntimeInput) configuration.ConfigBuilder); ok {
		r0 = rf(provisionInput)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(configuration.ConfigBuilder)
		}
	}

	return r0
}
