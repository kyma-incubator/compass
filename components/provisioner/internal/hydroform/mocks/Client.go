// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import model "github.com/kyma-incubator/compass/components/provisioner/internal/model"
import types "github.com/kyma-incubator/hydroform/types"

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// DeprovisionCluster provides a mock function with given fields: runtimeConfig, secretName
func (_m Client) DeprovisionCluster(runtimeConfig model.RuntimeConfig, secretName string) error {
	ret := _m.Called(runtimeConfig, secretName)

	var r0 error
	if rf, ok := ret.Get(0).(func(model.RuntimeConfig, string) error); ok {
		r0 = rf(runtimeConfig, secretName)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ProvisionCluster provides a mock function with given fields: runtimeConfig, secretName
func (_m Client) ProvisionCluster(runtimeConfig model.RuntimeConfig, secretName string) (types.ClusterStatus, error) {
	ret := _m.Called(runtimeConfig, secretName)

	var r0 types.ClusterStatus
	if rf, ok := ret.Get(0).(func(model.RuntimeConfig, string) types.ClusterStatus); ok {
		r0 = rf(runtimeConfig, secretName)
	} else {
		r0 = ret.Get(0).(types.ClusterStatus)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(model.RuntimeConfig, string) error); ok {
		r1 = rf(runtimeConfig, secretName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
