// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	hydroform "github.com/kyma-incubator/compass/components/provisioner/internal/hydroform"
	mock "github.com/stretchr/testify/mock"

	model "github.com/kyma-incubator/compass/components/provisioner/internal/model"
)

// Service is an autogenerated mock type for the Service type
type Service struct {
	mock.Mock
}

// DeprovisionCluster provides a mock function with given fields: clusterConfig
func (_m *Service) DeprovisionCluster(clusterConfig model.Cluster) error {
	ret := _m.Called(clusterConfig)

	var r0 error
	if rf, ok := ret.Get(0).(func(model.Cluster) error); ok {
		r0 = rf(clusterConfig)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ProvisionCluster provides a mock function with given fields: clusterConfig
func (_m *Service) ProvisionCluster(clusterConfig model.Cluster) (hydroform.ClusterInfo, error) {
	ret := _m.Called(clusterConfig)

	var r0 hydroform.ClusterInfo
	if rf, ok := ret.Get(0).(func(model.Cluster) hydroform.ClusterInfo); ok {
		r0 = rf(clusterConfig)
	} else {
		r0 = ret.Get(0).(hydroform.ClusterInfo)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(model.Cluster) error); ok {
		r1 = rf(clusterConfig)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
