// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	hydroform "github.com/kyma-incubator/compass/components/provisioner/internal/hydroform"
	configuration "github.com/kyma-incubator/compass/components/provisioner/internal/hydroform/configuration"
	mock "github.com/stretchr/testify/mock"
)

// Service is an autogenerated mock type for the Service type
type Service struct {
	mock.Mock
}

// DeprovisionCluster provides a mock function with given fields: builder, terraformState
func (_m *Service) DeprovisionCluster(builder configuration.Builder, terraformState string) error {
	ret := _m.Called(builder, terraformState)

	var r0 error
	if rf, ok := ret.Get(0).(func(configuration.Builder, string) error); ok {
		r0 = rf(builder, terraformState)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ProvisionCluster provides a mock function with given fields: builder
func (_m *Service) ProvisionCluster(builder configuration.Builder) (hydroform.ClusterInfo, error) {
	ret := _m.Called(builder)

	var r0 hydroform.ClusterInfo
	if rf, ok := ret.Get(0).(func(configuration.Builder) hydroform.ClusterInfo); ok {
		r0 = rf(builder)
	} else {
		r0 = ret.Get(0).(hydroform.ClusterInfo)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(configuration.Builder) error); ok {
		r1 = rf(builder)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
