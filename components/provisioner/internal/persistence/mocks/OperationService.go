// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import model "github.com/kyma-incubator/compass/components/provisioner/internal/model"

// OperationService is an autogenerated mock type for the OperationService type
type OperationService struct {
	mock.Mock
}

// Get provides a mock function with given fields: operationID
func (_m OperationService) Get(operationID string) (model.Operation, error) {
	ret := _m.Called(operationID)

	var r0 model.Operation
	if rf, ok := ret.Get(0).(func(string) model.Operation); ok {
		r0 = rf(operationID)
	} else {
		r0 = ret.Get(0).(model.Operation)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(operationID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetAsFailed provides a mock function with given fields: operationID, message
func (_m OperationService) SetAsFailed(operationID string, message string) error {
	ret := _m.Called(operationID, message)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(operationID, message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetAsSucceeded provides a mock function with given fields: operationID
func (_m OperationService) SetAsSucceeded(operationID string) error {
	ret := _m.Called(operationID)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(operationID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
