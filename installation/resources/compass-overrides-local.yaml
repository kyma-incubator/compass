connector:
  http:
    client:
      skipSSLValidation: true
gateway:
  gateway:
    auditlog:
      authMode: "oauth-mtls"
      enabled: true
global:
  isForTesting: true
  auditlog:
    skipSSLValidation: true
  adminPassword: ""
  gateway:
    mtls:
      manageCerts: true
  connector:
    caCertificate: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUYwakNDQTdxZ0F3SUJBZ0lKQUtudzEwQi9zejJUTUEwR0NTcUdTSWIzRFFFQkN3VUFNRTB4Q3pBSkJnTlYKQkFZVEFrSkhNUTR3REFZRFZRUUlEQVZzYjJOaGJERU9NQXdHQTFVRUJ3d0ZiRzlqWVd3eERqQU1CZ05WQkFvTQpCV3h2WTJGc01RNHdEQVlEVlFRRERBVnNiMk5oYkRBZ0Z3MHlNakF5TWpVeE16VTFNVEJhR0E4eU1USXlNREl3Ck1URXpOVFV4TUZvd1RURUxNQWtHQTFVRUJoTUNRa2N4RGpBTUJnTlZCQWdNQld4dlkyRnNNUTR3REFZRFZRUUgKREFWc2IyTmhiREVPTUF3R0ExVUVDZ3dGYkc5allXd3hEakFNQmdOVkJBTU1CV3h2WTJGc01JSUNJakFOQmdrcQpoa2lHOXcwQkFRRUZBQU9DQWc4QU1JSUNDZ0tDQWdFQW9UOXdxSE9kVUVqNitGbWhnbHJFYXNQY2l3dzBwSzQvCjA3cDc2MVZXN0JjVk5zWXJ3eXQ3UFB4cW1sSTg3RzZPVGEzN0pRSk9IOXIxSnlVdlRJejBta3ZxazBNWmtLQk8KdjZTTER5Q3BwOGc0TUd6Q0tHcldOWUJIRmNyMHdLS2w1b1V0WG45dDBHOFNXOG1NRjFxWk9pOWlMZEVZeE9kbgpHcmFvWno5RTZ0TFRQU0FDdEJHOVBSdENwb0VQOVl5di9XSjA3ZzlMeG1LL3NZVW1wSjB6RWdscDliYVRETjU1CkNyaFA0TnNxS2R1L0tHd3ArOElTNzFwZ3BYS2hhZ2t5M3JYVVZ5bmNkbXBIS1g0bkE0R0h0S0xSMkE1OVByK1oKVlkrbFBXYXB0Tnh3WEZ6RkNBUVJSbTVib1FIRUhTUmhNbXByL3phemdaUzBobm0zSS9taUZOZjg5L3NFSWpaZwpBYjV4WnpUU0MzNUs4WkV3a3dEOS9hdUVGRHdwby9EYktySzNtSTc4cFlqd2xNKzB6d09rZE5sVHVaUVY2VmFTCkJSekw0L2lBd0tnQ1dJTTNkb1RGczZiVHcrVXlWK2xuLzdkcDFBZWxrbm5TNVpkMFhtUkh4NXVlcmhRQUZDY1kKdzlKT25BWTk1by9RUGp4RWhWaS9tS2R2Z1A2VVg5T1orVHZ1UFB6TnlmK05KeDlFTk90UDVMVk5wUHVSZzJrTQp4NlZ4bnZUeUo4LzBSNTFGOW5qZ3ZxdzF0NDRyZ0J5L3E0VWlrK1h2QUw0dVY0aWcycFUrcEVieW1qekoyZTNpCjNBSkpXQ05hZUdGa3c2YUFpTlhOZmk4VGk1RjdteDgwS2J5S0FmVlMwNDJqRUhtMHYvY3pNN2lxNXdRWkVFSUYKUDZxZDk4M0daazhDQXdFQUFhT0JzakNCcnpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUbwprMzBXVzhCRUxnMEZBWEZscjNnYnpkektvVEI5QmdOVkhTTUVkakIwZ0JUb2szMFdXOEJFTGcwRkFYRmxyM2diCnpkektvYUZScEU4d1RURUxNQWtHQTFVRUJoTUNRa2N4RGpBTUJnTlZCQWdNQld4dlkyRnNNUTR3REFZRFZRUUgKREFWc2IyTmhiREVPTUF3R0ExVUVDZ3dGYkc5allXd3hEakFNQmdOVkJBTU1CV3h2WTJGc2dna0FxZkRYUUgregpQWk13RFFZSktvWklodmNOQVFFTEJRQURnZ0lCQUpkbHNtR2k0d1hvSlZ4SnlKVzlDWEZPejhZWkhTWlhicEdsClJXcmI4QkZIMy9SNFhPTTQ5Y3Y4UzErYUZvQ3hJd0taRGFhZVIwNVIxK05jVXNPSnhZL2tGWXNHN3kvMTJFRVIKTi90anVRTGhPNnEzT1piZTUwUFErS2pxbmxURnQrT1ptV1ZQc3NzbUU2WWNhWXBOc09FcmVWZWxNWHNybDBndgpLZ3hLUXFJQ3hJTThNTG1QeUUxSURsS3RSL0RrTkNqNDQybmgvNVlwaUFoOG1BTUE5QjFtcE1uSTZpZFB0RzRhCm5uSGxiVlZaMUE4UWF2bXlCNGRueVZwNlB3QnhSMXJjN0xoV3VBT3V2WkNWWGpxUVZLMkREdEJ0Q3RGcUUrQlQKa1I4MnFjMGtKR2IwYTFkRWRubmJEdU1BQzA0WnRrQnpQTlV6RzNqSkNKVkZhVEsyMVhZQjNkMUR4UTVSUFJyTQptZmVXUlM5cytmdlplOTZmb1BIMmZuREN0aFJkOXI5UXdWSmhZMkRlTzlQOVd0TW9QMWhMempHSnQ1czB2RmpRClE2RDdZaXFHajkvTXhoc1BqZjlucjhCL3ZUVzFWV1hackh2NDBlR01tM1kwRXUvMlA0bFR5YnEyUlp2enhlQTgKTmlXL0lEa3VrbmlMaU95UnZKL1RWVXFsYllhbm9qeUVlbzJaTnp0RTVadTRYUndabnZIeVIzNFVrMldTYjdOSAp4Tk53TUt6ZHdROFpQQnM1OCtZUjByUGlGN2V4WXprVnFOdHNydEYwUjVPRm5kZjN4Yi9GeC8rRTBhd1UyUlZSClNiTzUxM1JIMTFZZ3RneWlMM0kxRjk3NGFDZTRhYkJuWHdmWDA1eUl2a2dEbFAvdXA5T25WRjV6eU8xSkRmUDAKSlFqY20zbGsKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
    caKey: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBb1Q5d3FIT2RVRWo2K0ZtaGdsckVhc1BjaXd3MHBLNC8wN3A3NjFWVzdCY1ZOc1lyCnd5dDdQUHhxbWxJODdHNk9UYTM3SlFKT0g5cjFKeVV2VEl6MG1rdnFrME1aa0tCT3Y2U0xEeUNwcDhnNE1HekMKS0dyV05ZQkhGY3Iwd0tLbDVvVXRYbjl0MEc4U1c4bU1GMXFaT2k5aUxkRVl4T2RuR3Jhb1p6OUU2dExUUFNBQwp0Qkc5UFJ0Q3BvRVA5WXl2L1dKMDdnOUx4bUsvc1lVbXBKMHpFZ2xwOWJhVERONTVDcmhQNE5zcUtkdS9LR3dwCis4SVM3MXBncFhLaGFna3kzclhVVnluY2RtcEhLWDRuQTRHSHRLTFIyQTU5UHIrWlZZK2xQV2FwdE54d1hGekYKQ0FRUlJtNWJvUUhFSFNSaE1tcHIvemF6Z1pTMGhubTNJL21pRk5mODkvc0VJalpnQWI1eFp6VFNDMzVLOFpFdwprd0Q5L2F1RUZEd3BvL0RiS3JLM21JNzhwWWp3bE0rMHp3T2tkTmxUdVpRVjZWYVNCUnpMNC9pQXdLZ0NXSU0zCmRvVEZzNmJUdytVeVYrbG4vN2RwMUFlbGtublM1WmQwWG1SSHg1dWVyaFFBRkNjWXc5Sk9uQVk5NW8vUVBqeEUKaFZpL21LZHZnUDZVWDlPWitUdnVQUHpOeWYrTkp4OUVOT3RQNUxWTnBQdVJnMmtNeDZWeG52VHlKOC8wUjUxRgo5bmpndnF3MXQ0NHJnQnkvcTRVaWsrWHZBTDR1VjRpZzJwVStwRWJ5bWp6SjJlM2kzQUpKV0NOYWVHRmt3NmFBCmlOWE5maThUaTVGN214ODBLYnlLQWZWUzA0MmpFSG0wdi9jek03aXE1d1FaRUVJRlA2cWQ5ODNHWms4Q0F3RUEKQVFLQ0FnRUFqUDBpYlRmQjZrd1ZuUWNKOENlYkxGc2JRRDBvM29FNWI5RFR2ejQ4Sld3OWNVb3ZRNVNHU2huTwp3Q1o5L0tEaUxrdWNsNHgvY04wTGsvR3dmTGVXdkQ3NjJVNUhVU3pLRGtrNkNiMGVlb1RYbElmVDhIRVI0Vy9MCk4rUGd3M3F6b203NTczRnVQRnlSNmMyOWYwSUpUbFhWKzRlanA2OUplSk1UaGt0TTRDSDg3NnBJa3RnYjVnMHEKNXRsY2NmQlVoVElNV1lib1U0dE9YMUswS2lVRlhaVDdvQXZHWWU4NFdNWTFtYjhvQzdlSFdqblJMNzlPdlJnQgovMGZPbVI5MzZrR0VhNzQvZFE2U01GYU1tRVV1dWlQUFphR3RveXIyVUZpc081YkRkazkwczEydUxjY1lyOE9ZCnZKd0Z0UkYxSnhia1hSK2dMd0l1SXBMVUxsRjhoR2ZEb3QvWUZvZGJBM3A0dlM1MEc4c212YWlROVhnVXdGdFoKMFdpWU5iQ2JKdlY1d0w2aXlPcTRqakFGeExqU2lqc20ybFpVcTZiVDY5YVFpR0xmbXJDYnJDRnJFSkNpU1F3WgpGenVrMGlXYnM4ZXRySWFnNjdtY0kvTlF4RkVQbXB2ZEdQTllGZ0RwUDdEMnlhUnA4MzVjeWJVd04vcUE2RnBGCkJHSEQ0ZWl6OWd0WlhwT25NYzBibk9KcG5qMlNpaUUwaS95a0NuTlZvRm1SeXladVY0YVlQd29laWpOZ1NjZWIKQTY1TThHaWtUdmdiemFaL3YvOVdlWElURGJVWjcvQTBwYlRDTjZZZ0xscjBpQlJPMUFmeGhNNkVmems4QlFUSQpidWJ5U3ZwQWhiRk83aTZLVVAvZW03eVV0ckxBekdOR2dnTFJMVEpRWGdYUWNSeUdVWkVDZ2dFQkFNOUVhZW5nCm9peE1QaE5jTlN0dENEekhER2RDSFRWcDN2U0s0bkNHRFhGY3N2aytqMGRRM2pQYWx2V3dDMjBYOTZWQlR1bzAKTFhhcGgwZ0xHYloyS3JWQ0tPOWZrZXpQVWMwOWMzNmp1OExFZ3NBZ0dGOUpXeDVlMUVleUIzS0w0RnIreXVVVwpLbDc0azltYmZVK1dRcG1vc3hKdW41ZjBqbzhoclRucGtqR2FqUHhTL05GaE1YVHpGdjl6dEhVblZhTzJVYzI3ClB1WUJNSkxGdTQ2Y2xxWG53RTQxUTVwVHFLZGwxaUw0dFRrVER5ekFNUHZucW9HSld4Q1ZidjR3b2Z1WXBrY0gKSG50SlVEMVhhSnI1N0xoSU4zeDRCN2pFU3JYTUwrOVVIcWgzTDRna2FwV0VTTDlsY1d3aWxlcHhYdG5RdDI3NgprK0NXVVpuY09TUklVM2NDZ2dFQkFNY3BGRGdBWHVYS040b0Z3TC9lRkkvUWVSeXBDakQ2LytidVdCV2F0SXdQCnprQ1h6ODNaY256NmQ4YUlHc2I1bi9tbFYwaHBCdkdtZzBkN0ZHbHZoWDVhZDRzeXFLZWZJajZtWG1PMDRrQ3gKa29kZkErUVh5Q1EwWlFSRi9TenRyNWxWQi9yYnhhYzdCVlplQUxvVUtSSzdUMFhCOHczVXN1SnNyNGR0QVkwZQpDUDlmQlRybFowYjBFSnROWXlVbGFSNWRkaFVuYnJFeHFkUzg5Yk8ybUxBUjVDTVJJRXZScTRseGlQYzRTTXhYCmhUY2FSTmpBU2M3WE5NUUI1WVpXeUxaYzN1RndQaXRHK0sxTGMwNWs1VFpWeEtNdmVhOXBiZkRHLysyQm9IcHIKOEFHVXVKVlk2bCtGTzNleXlmenRPVGtpMUkwNmlxU2dURzVrbzJ0bXlla0NnZ0VBUjVYZWFzdU4xM1RodjdnSwpHUnlJU3MySXFDVTZoMWN3alE5bTAreEl1azJFOXZhM2I2OHJmNGRRdWp4NlJjeVFXTUFzckZFbkhxUEF1STQwCjdFTDF6ekt4aHJOZ2FBVFd3T2NuZTZhN1U3S2hZZy96dXYxUC9qWk1aUkxFNWJnUDNmM0FQODBmQnp3ZGZIdnEKbE5GVjRWSlZ2dGo4UC9SVVJIVWlLaTFVczlNb1BJSEJGZVBXdkFpMWViY1JyYURQUUVMWkVCQkswZys1SWdndgpGanRaQUtZQlVrR3RQcUVFVUFTcEo5ejBZbWtGeGJQL2R4RjFYMVg4WU1icjFka2dLUkI0NVhFOUF1RzRWK2RYCmxxY1pMakNyRVU4M2c0WXdNNGY1U2xTb1hoRUVGcVpWTlp6QnIzRXU4bVVqbUJ4ZDRTYm9JK2xocDZEalFCdkMKbEpoeVV3S0NBUUI4QUpyREo0L3VtVkt0VUZtcjNQV0dlYkgrNDAwaUpCWFRUbEZ2Mml4U0RNRkp2SHc1V2d1TAp2MU4yUEdZWHYzTVl1QmE1VWhOdHdGUjYzQ3BnWDN5SnFJQklIaG1lakZtQkVvc3duMzVEODR3ZFYwNlA1VExMClFBZ3BlZjVoeS9nS2kwUDFzSUxIVmR0RDVER2xxa25Nak8yVnJHWE9GY0h2Y3VaemRxNkJrOUxjVmVobXZGRHEKZjZvYldEckQ5U0FYTlBBQnlkU0U1VHd0NWgxQmNRNXVpaVUycEVJc2t2YXdGQTNJaDdYajdSWlhzYlp1RW9PaQpFcUthNitkaUZvVFA3dEVqSW9UQzQyU1FXYXNJZzQrbm5nMVo0WVJ0Y0VKd3FTYk9WV2g2OE51MTBFaUJUS1JaCkp4Wll0K3hGMjlwR05lYUxySWlJYWZwTXZjSjJhOENKQW9JQkFRRE5Nbk43M1k4UWNwSld4eTk4SmNLSklrTTQKY3BIeUM1U2dva2QvRWdBZzdMdW96a0grQWtWREZTUmcxdmRDSjdSMU9yTXNxeUVyYy9xV0pDYWpqVWJ6UlVyOApJQlN5b2Y1Zko3UHZ1VFc2WkV6RUR2WEw5WW90VExLM1VnUWpGc0N6c3dIUVhOaEE1QVBHWWZZa2hsTnlubVdpCnpyYlFYU1Q2RkxDeSt3UW9UQ3NzVHF4NW8yOEZiZ21RSTZvQzdmQ0ViTzZNL2dCTUxtbjhFNW03dWJVWE9wZmYKaEhsVGcwaVpKU0lDTDNRK25aZ0J4dVNSZ1hsMjJkUjZNYndiRDR6TTltNFhjTjNLTkNGMFY2bkJuQ0dnQ2hNaQp3aWpnS0w5RU1LemZFN0N4K05ZR0x5em9icVBXWDdMak81UjlPUWlpa3FBNmxxTldlN1g0b2NacFZ6c28KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
  pairingAdapter:
    configMap:
      manage: true
  domainName: "local.kyma.dev"
  director:
    subscription:
      subscriptionProviderLabelKey: "subscriptionProviderId"
    ordWebhookMappings: '[{ "OrdUrlPath": "/.well-known/open-resource-discovery", "Type": "SAP temp1", "PpmsProductVersions": ["12345"], "SubdomainSuffix": "" }, { "ProxyURL": "http://compass-external-services-mock.compass-system.svc.cluster.local:8090", "ProxyHeaderTemplate": "{\"target_host\": [\"{{.Application.BaseURL}}\"] }", "OrdUrlPath": "/proxy", "SubdomainSuffix": "-api", "Type": "SAP Proxy Template" }]'
  externalCertConfiguration:
    secrets:
      externalCertSvcSecret:
        manage: true
  extSvcCertConfiguration:
    secrets:
      extSvcCertSvcSecret:
        manage: true
  externalServicesMock:
    auditlog:
      applyMockConfiguration: true
    tenantDependenciesConfig:
      manage: true
    enabled: true
    oauthSecret:
      manage: true
    saasAppNamesSecret:
      manage: true
    regionInstancesCredentials:
      manage: true
  http:
    client:
      skipSSLValidation: true
  istio:
    discoveryMtlsGateway:
      localCA:
        certificate: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUdWRENDQkR5Z0F3SUJBZ0lKQUp2VWF1RTloZjZuTUEwR0NTcUdTSWIzRFFFQkN3VUFNSGt4Q3pBSkJnTlYKQkFZVEFrSkhNUTR3REFZRFZRUUlEQVZUYjJacFlURU9NQXdHQTFVRUJ3d0ZVMjltYVdFeEZqQVVCZ05WQkFvTQpEVVJwYzJOdmRtVnllU0JQY21jeEZUQVRCZ05WQkFzTURFUnBjMk52ZG1WeWVTQlBWVEViTUJrR0ExVUVBd3dTClRHOWpZV3dnUkdselkyOTJaWEo1SUVOQk1CNFhEVEl5TVRFeU5EQTVNek15TUZvWERUTXlNVEV5TVRBNU16TXkKTVZvd2VURUxNQWtHQTFVRUJoTUNRa2N4RGpBTUJnTlZCQWdNQlZOdlptbGhNUTR3REFZRFZRUUhEQVZUYjJacApZVEVXTUJRR0ExVUVDZ3dOUkdselkyOTJaWEo1SUU5eVp6RVZNQk1HQTFVRUN3d01SR2x6WTI5MlpYSjVJRTlWCk1Sc3dHUVlEVlFRRERCSk1iMk5oYkNCRWFYTmpiM1psY25rZ1EwRXdnZ0lpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQ0R3QXdnZ0lLQW9JQ0FRQ255UXNCNENWaCtFMDUwRjF4M0NlaTd5V1NJZmdvcVRDMzdFaEZ4Vno4UHJMMgpkcHBJSGl1MzdPWHgrNlFWMnQ3OXhNdE9mVTVtdWpCOGhSZnNpOHJpVlA3VjRSZ0FPMURWWUJXbFAwZjRNUTV3Cnc3WGFkUEFOcVZGWDJIUE8vd1Ywa2xqTE5oazNEV3NkTzlOSHlwZTlWOG16R2xRTXgxMzFmcTlwZXpGVlZFUEkKMXlPRHJ6bDF4dHNBMC9FamJpOEx1VGhIU09nU29jQXU2VEl3R0tJSTdFSDlOMk1VWmova2QxZkhVMEM1WVRBZwoxMWtKS216N21kVmx0UU1RMnhtVENZRnRpa3l2WjN4V3pncDJFazVqVjJqT2g5NWFrQ0V3bERMNFIreDRLZm95CnlMVnNsaWMxUTVFVGhUcGtzN28vMUJlZERkd3lNSitXZWVaK2pTY3MwMURyOXlGcDZvRDZ1TVg1QTVsa21kS2wKYXhoRzlVczRNcXFjRS9qMEp0UG5DcFN4Q3BFeFZESjRxWVRhYWtqV0FnMzVMMDZRVHRaQzRLTEZJRXU1WmhscgpLUm0raXp3clI0TzUwZnJudU1zRmg1amR6Y1ZVTUZYYzlEMVBJZC90U3I3MnZpSXMrWlZ2TWdiSVhIc2FSejZKCkZ5U1U3emVKNmpFdWVHR2VjSnlDZnVCaFJucy90eVpQU3o0MlJMWXk1ZjliQ1p6akNTZ2VnRzB6UTJGenZmNngKYlZ0VVhzdTNudWZ5NnUxZnZ6aEVBN3pWbk9sNHJZQWNhZXdDVkxTUFRqeWxrQkl6a3p4VmdLcy9QN2srZHZ5NAo0akhwZTZGN1BXN2VLQm5rY1dPNDB4dVAyS3QxY1cvTk9OS0NkNGMxeWZnd2R5akE4dTUrQ1FQWGFndUNDd0lECkFRQUJvNEhlTUlIYk1Bd0dBMVVkRXdRRk1BTUJBZjh3SFFZRFZSME9CQllFRkFJSlAycmlTUjRhNzVmbGJPL2wKL2J2WExLTmRNSUdyQmdOVkhTTUVnYU13Z2FDQUZBSUpQMnJpU1I0YTc1ZmxiTy9sL2J2WExLTmRvWDJrZXpCNQpNUXN3Q1FZRFZRUUdFd0pDUnpFT01Bd0dBMVVFQ0F3RlUyOW1hV0V4RGpBTUJnTlZCQWNNQlZOdlptbGhNUll3CkZBWURWUVFLREExRWFYTmpiM1psY25rZ1QzSm5NUlV3RXdZRFZRUUxEQXhFYVhOamIzWmxjbmtnVDFVeEd6QVoKQmdOVkJBTU1Fa3h2WTJGc0lFUnBjMk52ZG1WeWVTQkRRWUlKQUp2VWF1RTloZjZuTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQ0FRQ0xoalFmR0hXbm8wM0RUbzNrRDFoSzlMZFpSQlhaem9xUEtFVkMvNytPcE5Zd3VLMVRYeDhQCmVKMU1MeDZLNEpzcnpubkcvWmdadS9YQzJyVjUrOTdYSnFwSEN1VzBHVUJteDVWb21Nd096YjBQaS9CdjRsR3IKLzgrMG9icHkwN2QwTnV0aVhyNXIyVlRVV01aMk4wWXZSckNkRXo3c2k5NVJjdzlMQVlDUUQ3WHVhSjAxekxsVgpURnNaSnRicnZvMWx5cXVPb01ka1lDcWVLWU9XMERtMFVSTEN4R0RwM0h4ZFRadFdQUHRUOUl0VWV5bTVHVUhwCnZ6Z2JlQm5vbzVTNms0Ti9rbzRNYnZ1VFBnakpxZW8vdzBXb0k5SS90MFpnSGc2ckI2U2xZM0NRWmk3RlBQUEMKN0x3MEROVmZPUGtxSTcwUXlubmpMREhJMHU3KzArTmlWN29GMm03dVAyUHdMSENnWGxGTFhucFNUb3JJb2pyWQpLVjlIT08rT0IvOXlyczBZSk9FSjU5bXlubnI3NWtac2d2a09MSS94ZHg1dUkrTkZqbTZYRWR4ZlZxTUZ4Uk5sCmVrQTd1dW1BZHBqbE04UWEzZXRqODRZRFRoUFNEZkVjc3NlWFlCSmpORE9hMFR4WVphakkyaHBPSXMxd0lJeUcKakJOUFUxb0QrdzIveDE2Zi9qNWV6cFpRdzdXalJ0dTVJUnZFa0tRUHNueWswMGRmODhJRThqWjllSG4yb2dqQgpSVjlSbHZWRXZDbFdWR25oODBvZCtaRG0vQm9kS2UreWczSXFGWnJXM3hzQkFZakU4Q0RBTit4WkU5Q1dDbkNpCk1RdUV2b2FoNHlTMmdNbEhXSXFvMzR6TzRrUlB2SytpNHp5YUhhaVdMYTdjK0ZuNmsrT0dFQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
        key: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBcDhrTEFlQWxZZmhOT2RCZGNkd25vdThsa2lINEtLa3d0K3hJUmNWYy9ENnk5bmFhClNCNHJ0K3psOGZ1a0ZkcmUvY1RMVG4xT1pyb3dmSVVYN0l2SzRsVCsxZUVZQUR0UTFXQVZwVDlIK0RFT2NNTzEKMm5Ud0RhbFJWOWh6enY4RmRKSll5ellaTncxckhUdlRSOHFYdlZmSnN4cFVETWRkOVg2dmFYc3hWVlJEeU5jagpnNjg1ZGNiYkFOUHhJMjR2QzdrNFIwam9FcUhBTHVreU1CaWlDT3hCL1RkakZHWS81SGRYeDFOQXVXRXdJTmRaCkNTcHMrNW5WWmJVREVOc1prd21CYllwTXIyZDhWczRLZGhKT1kxZG96b2ZlV3BBaE1KUXkrRWZzZUNuNk1zaTEKYkpZbk5VT1JFNFU2WkxPNlA5UVhuUTNjTWpDZmxubm1mbzBuTE5OUTYvY2hhZXFBK3JqRitRT1paSm5TcFdzWQpSdlZMT0RLcW5CUDQ5Q2JUNXdxVXNRcVJNVlF5ZUttRTJtcEkxZ0lOK1M5T2tFN1dRdUNpeFNCTHVXWVpheWtaCnZvczhLMGVEdWRINjU3akxCWWVZM2MzRlZEQlYzUFE5VHlIZjdVcSs5cjRpTFBtVmJ6SUd5Rng3R2tjK2lSY2sKbE84M2llb3hMbmhobm5DY2duN2dZVVo3UDdjbVQwcytOa1MyTXVYL1d3bWM0d2tvSG9CdE0wTmhjNzMrc1cxYgpWRjdMdDU3bjh1cnRYNzg0UkFPODFaenBlSzJBSEduc0FsUzBqMDQ4cFpBU001TThWWUNyUHorNVBuYjh1T0l4CjZYdWhlejF1M2lnWjVIRmp1Tk1iajlpcmRYRnZ6VGpTZ25lSE5jbjRNSGNvd1BMdWZna0QxMm9MZ2dzQ0F3RUEKQVFLQ0FnQmhIVmVXclZOVjRtOW9rRGNXQ1RTVDlWSE14SWFybWtwTm1xQzJhYWNKaFl6MlpPMmw0bml4aTVnSQp1UHRmZndEazUzdzVvUU81Si9tYWlUcXd1clVpemNsMnFFUEpGb3dTQlB4aVdqOWc0NXdWSHVKcVlKYjFnVlJJCndVcyt1NU0veHRsSVBiYllpNWE5SS95RnFEaXQ2bHNmcEpTVGxPM0lnNXdxTkpqNFo3NllTQllSU1dHN3p1N0MKQ3VxZTlFNmN2WWRhazFOb1BXRk1oY043M1RZa2JnTS8ra2dKN2FqN3B5d1NmaGlQZERaME85RVlJZ3RVa2RUWAplcThjbVlTeSs2U0RiN0kxTUhQaWxuMnRtNmp0alJGbndYS3MvcEdIV2JBcXp3NksrdGtMZmVxc3dEaFBkeDFJCnJDdUJVQm4waWVGbEVUbXJmME5QeUp6bUVQTmo2Vmx1cEhzc1RSMEtGdXlhSVFWaVdMbkg3UHFNNStmK3k0OVAKN1RZOE9nMG4zYjRuS2ZrMFl5YzU4bGNFY0J6N1FQakk3SE5IcVlpNzB3QUhNdGFpTlgyUW5haW0wQXl1emdURApNSjlmM0R2aGlPU3hkYmUxNjhBZFFtcllEdThyS09FMG1qS0NVQzhXL2dhNkErbmc5SHI3VDRXemlhclZtZ0dxCnlRZVdaZ1paa1YyZ09QQ0NjRnc5RmhKcHhzZGV2OS9HQ2ZTd01EY2lNN2VUNjFKYkdXVzFnU3phc2tRLzZLS20KcU83TnltMEJhYnRTZnIrZTY1bnFZY2RRMnlsbjliYUZnRU1JZ0tDaCtKQXdjNHMzRFpBUmMzeFliQXgvWmR5RQpXcENoMDFmWXFNQzA5YjJRVEVqd2o3d1dpWFl0VWh3K0c2VFBwVUlsclRUbVU5NzVvUUtDQVFFQTIyR1I5eU91CjNQNzFkK3RCSjBaUEhibXMyODdSdWtpdCtlWXJIUjlWZ3R1bytjVHRRa0RKTkxKeVVWa284SVZsRlFYVklzREsKWlpMQ0FNTENWMjhmdWZPNTZFL1FqaVF1VmpXbzBBaU1VT0tBRy9aVXJEWEZUYjl4ckxDV0lTYTh6UjNlUmhxcApFRndVRXc5QWEvRTRrYXozODZaQTBGcHdMQUNNZ2VJTW9lb05hZE5TMnhhblFaR28yblpQT0xWOG1lYUo4SEFEClVuNUFrSmg1ejM3WVgzWEtPdEZYV1JyUk9VbDBKSkFYK3pyQVlTU2dUQkFpdnd3OWZLLzZUZDFmakZqRFBhVjUKWUQ4NlowVk5nTnlJL0tNc2hoSFlMYWFKUzlTS1ZEQU9aVDNOL2QrYlNKMnFTcWV2UDBnNThvMzg2UTQxNERzNApCSVBObVJSK3BoMmFVUUtDQVFFQXc4cTRMZUpDRFhxRmMrSTQ4a1NhK3huckNXK2FRN2RxT3AyanRGcUgrNmtHCnVnZUdCR09PcGpHdlNlQ0l0bDFEUURDRTdQWXBiNllRL1NwakxZTjU0TmZLZkRCOHNWc2gzRGZTT0xJSUV6aFgKRUpzNWNpanJRajUyY0RYTmExVHNPRnVVamlUc1A2Y0hUcnlGRGJiUTBKSWRjUXNOamFEVkhiVzRJTGRIRENjZwpKcmZJTWUzaDlEZGFRSDJCWTZsRDNTdk5OTVhSMDBUdnk0WXkwcDJMVU5EZG1FRHRaNkxIeXN5WndsYklmVkdmCjloeXRncXJhUWwvVHdMcUV5MUpYOEVjYi80aDNYS2VPQmE4ZTdpQTJhRW9TeFZOMXV0OHFET1UwQ21qYnVTcjEKWjNoZk92U1pxZnQ5VXJ2Z3dQcC95U0NyVUJmNEViR2VjVlcxUWlZam13S0NBUUFMTEhzTXhXcUFveFBKbWRmbApzalVSWklXalpITldNNkY0MnZwVEwyZGhsT0tVWmkxWGRJbEsvOVBHeE8zSzRtQjFvNmhwYnJ4Z1ZBdEJrcW5uClhpZVZodzV2QUxHMHE2OFlnUDhxS1dWTU1WMHBEM0RjbkppQ0QwQXc5WVdRQnJNVEYzUmN5YnJXdEhucFJwdVgKWTkvbnU1R2RmVmhMeEc5MkxrajV6Sk9zSTRtdlhDNGFMcHN5UWNNQjdZaTNjTGI1OTc0SzJ3bXdSL0h0NjNZNAoxVk1iK1pubFNRaFQ1NFBFa1RNek1ZdW5KaVRxVGIxRVlvWUNpUk1RcUwzcy9WdUNnSHJoUnU1WnNwNjg1OUM4CndYN1FyMWJ6TlRGM2tjWG9jTmppMU5mRzNGRURuMEgvZnRoUG1SN1o4RW5UU3R3WTJycHZ3MVJsRm5tQVZJVG0KM1JjaEFvSUJBRk5Rd0c5R0NMV1RuWlppZmJrYVdKamh2cEtWV3gvVnZPNlVoa1VKQVRTbUNLYkE3TmFSUnZLUgowZld1Qm44VDBMcFA2MENxdjVjekk2ZVhrZnljSmhEM3dzSjJINW1aSGgrSDRYMGV4VERvbUtRSWFibWFrQUh3CmNwWHRUeXlOUnJmMHdKSjhROHdTVjVtNXZ5VEcxclRxZUh6U0owSk5YbUwySVJSSzZZRFNaV3dVYUt4V2ZnQmUKVFptRHpydUtHOGJTRE5DWUhXRzV4QkRuV2xrbGtWTWlqaWxyOTVwU09wS2gzZ3hFd2F3U1ArK0s1SXJtQ1ZxVgpUSmFHeUZ0OC9zN1FjNm1aZUxHRTIzcXZ1b202UzJ5MW1LYy9qS21vclV3dmZLV3hXVTdDYVF0T3ZiZG92cnNHCnVaMnJOVWpwVDlkV2Y0L2xvenBrU3ZnUGNNSmxXR0VDZ2dFQkFOcEVUVjF1T0FlUDhHczhKbTNuYUVHL3JFUmMKcTBZZFNkNmlpS2czNE85Y2ZjZjFYc3ZVMlFrd0dETTljazFzVlV2WEJRaWRIaUwwbFJjUzlFS1hvUzNTbTRhNwptTlhlQ0I0Tmh4cnAzcHp5MFRqY0h4S3JBR25lUVJZTVRXcEgzeW5sRWEyelpULzJ0R3dsY1NsMndONUVMeWY4ClpXb21MQkg4WUFPN1ptVXh4L0pXMXcrMU1VTGdLamUzaXR4Z2VlUW5mbXdobWVmR2dzMmN4aVBnUHcrWEt3aVgKMXpEMmFLVHVBdyt2ZHJQcEdWVkVSMU85cXYvVnZFY2QxUjNNQWNJSHphWlNScUNVWmVNOC9FV2t0d3RCdTZVSwp4K2doblJjMllrVkZUVWY0K2NNekRqalBQUkloZ2JIUHllb2xhQWxDU3h2Ui8rZ01VUUJJS2VYUUlHYz0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
  ingress:
    domainName: "local.kyma.dev"
    tlsCrt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZSVENDQXkyZ0F3SUJBZ0lVSElnSzhaaXFoeUIxazZaTzFyNGg2ZWV1aUdvd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0d6RVpNQmNHQTFVRUF3d1FLaTVzYjJOaGJDNXJlVzFoTG1SbGRqQWVGdzB5TWpBek1EUXhOVFV5TVRsYQpGdzB6TWpBek1ERXhOVFV5TVRsYU1Cc3hHVEFYQmdOVkJBTU1FQ291Ykc5allXd3VhM2x0WVM1a1pYWXdnZ0lpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQ0R3QXdnZ0lLQW9JQ0FRRExVUDVQQ3BNVHNUZ2E4Y3lPYjlnWXJvTFkKTFhvZ3Z1RlJZRy9SSGlMcmdFeUlXaDQ0U2szdHhDZkFscnZMNmE5REVpYnF5Tmk4Yk9DM1ZVZGdkL2xDcjV3WgozakRvNjgzNXhXV05jRnRVMFJJVTgyNUFHbHoxQXcrYkFpMVp5Z0xJTDVNY0g0QzRPL01qbjJqSWZlNXNzNmo1CmlGZTNkNVVpdGJENURNeVA5dkN5WFR0MjR3NmZJRVZ4ZEhlTUJ5Rk5Ld053UmkyS2ZwK0xSR3dKclFIa01Wd1IKaTAzOFNyV0hack1pTExZZXA2SXRTZ1BuaSsxWjJZb20yYzlGNTNJSVJzQVRxOCtRUlZIV3V2NmM5eGRLS3ZubApGYmFvR2NxcGxqV3YwSUR3SzF4ZmJiaU15SzkrbjZoOHhZRTJXNUppNitqU3VKdUhTN1RIL3lzNCtueE5VWHFkCklrSjlWcFBsbDcvZ21RWFVhbE84c2JrV0R5ejloUllsbTBjQkdvNVl3VExmRGI4VzRlT2tWSGtUamI0VDVwRHMKSnVhVjhnTGpRZmVGaHBvUlVZVjUxUjFldkNxVWtsUHNlVDMwcmhlNGg2MjU0S2VmbjJoY1hvUHRmN2h6a0MzdwphVlhTcHgzMnJHbFlRS3dBWCtBdFJxUlJUSWFLeUJ4K2xhUWNlYzhaKzRPN2RnUUNnOTVWc0dBVmdyaDNLbjZLCnVkYlhwQ3lkRmU0eU1BK2tZVSsvazhVWERCMnhmTVlnaC9yeWcvOW9XeWJBbFFVOXFpUkRnbUNZZTMyUThhcFIKdHF3dktBSXFCQ1MvRXhIY2dHeEVKMUdmOC9JY3RpU3M0WkFzamxCUzBFN0k0OGgzemM5WHJQRE5sMGZocmJhSgpyOCtrMmE1UGVPWnVkQzE3MHdJREFRQUJvNEdBTUg0d0hRWURWUjBPQkJZRUZCMndFREpSN2FGeXZrR04rUVh6CmhQdnd5b05tTUI4R0ExVWRJd1FZTUJhQUZCMndFREpSN2FGeXZrR04rUVh6aFB2d3lvTm1NQThHQTFVZEV3RUIKL3dRRk1BTUJBZjh3S3dZRFZSMFJCQ1F3SW9JT2JHOWpZV3d1YTNsdFlTNWtaWGFDRUNvdWJHOWpZV3d1YTNsdApZUzVrWlhZd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFIZldDWDdqeG5CMW9SbmpVOVR3eTJwRnkvVVFuaGlmCndMc2toNFdTOWNFNnRUalVtdHNwL0JLVjNwQnhYMW5xanhEdTlabDUwcmVtN3hmWURyYXdIaUFnV0owaWk0VHIKbXhUN2NCZE1uMmJjUkZ3eE5naE9YTGhiMFdNWTB2Mkp2RnA4TEpXcXJPOUZKOE50ZEFPd0JDOGlGclJuSWtBZwo3cFVQYWJMWTcrMFhMbVhFVHhIcVpPV3kyei9YeUNsZ2V3WS9pZlNabzFGZjl2MmloWmVlaTkzRHNDUEpkVW91Cml2clJpUXRSc2dieDE5dFVOTko5dmYwbVZFdUdnczRNSEFQQzFkWE5VVDU5NG5USEpRZWQvaGR1bmJ1Wkc4OFUKSjcxV2E4Q0dRV29RYmRVeUwwWWduemtKRndYNDhaejZrQm55WlZ3enBsaDRlS0t1b0RRWitodGYrakIvQlJmMwp3eXR5UFRkWHczancvNVZRNUx6SU1Xc21EdTlEcjhqOE1CSDNmWk9JdFdNSGZGa3E1dXB6L0xNRkNpMlhOVElXCm11SWZWMUxIR2dyQ1ZQN2hsbXpYVUdJN3ZabEpOZFBLV3FyZmRMQ1EvYlBpeXNZdDlXTDk4NFBEMEdtZmdnTFMKTHRHcDVIVGxaajV2dVNEVW5IQ3kvVk4wbTE3dUJFSmRvTXlLZHFQTmlCSEZBamVwRDA2NWZrK3ovOW9XMWIzUgpMOVNvY284L2x4Rk9tc0g2UDBLY3htdWRPdkdaSFVEWENXTVo1NEdTUEJ5MTN1NWdJQ2tKRTFyeVYzSHJPRWp2CnZCRm5IV3Zldk0xd3BkZFJrQXJnNkNNWmJkbW1sU1NPYnhrd3g3NmZlbE5GNEJadXNtRDF0NytWTHhHdytaRGYKdmZucDlLS0QxQm00Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
    tlsKey: "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUpRd0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQ1Mwd2dna3BBZ0VBQW9JQ0FRRExVUDVQQ3BNVHNUZ2EKOGN5T2I5Z1lyb0xZTFhvZ3Z1RlJZRy9SSGlMcmdFeUlXaDQ0U2szdHhDZkFscnZMNmE5REVpYnF5Tmk4Yk9DMwpWVWRnZC9sQ3I1d1ozakRvNjgzNXhXV05jRnRVMFJJVTgyNUFHbHoxQXcrYkFpMVp5Z0xJTDVNY0g0QzRPL01qCm4yaklmZTVzczZqNWlGZTNkNVVpdGJENURNeVA5dkN5WFR0MjR3NmZJRVZ4ZEhlTUJ5Rk5Ld053UmkyS2ZwK0wKUkd3SnJRSGtNVndSaTAzOFNyV0hack1pTExZZXA2SXRTZ1BuaSsxWjJZb20yYzlGNTNJSVJzQVRxOCtRUlZIVwp1djZjOXhkS0t2bmxGYmFvR2NxcGxqV3YwSUR3SzF4ZmJiaU15SzkrbjZoOHhZRTJXNUppNitqU3VKdUhTN1RICi95czQrbnhOVVhxZElrSjlWcFBsbDcvZ21RWFVhbE84c2JrV0R5ejloUllsbTBjQkdvNVl3VExmRGI4VzRlT2sKVkhrVGpiNFQ1cERzSnVhVjhnTGpRZmVGaHBvUlVZVjUxUjFldkNxVWtsUHNlVDMwcmhlNGg2MjU0S2VmbjJoYwpYb1B0ZjdoemtDM3dhVlhTcHgzMnJHbFlRS3dBWCtBdFJxUlJUSWFLeUJ4K2xhUWNlYzhaKzRPN2RnUUNnOTVWCnNHQVZncmgzS242S3VkYlhwQ3lkRmU0eU1BK2tZVSsvazhVWERCMnhmTVlnaC9yeWcvOW9XeWJBbFFVOXFpUkQKZ21DWWUzMlE4YXBSdHF3dktBSXFCQ1MvRXhIY2dHeEVKMUdmOC9JY3RpU3M0WkFzamxCUzBFN0k0OGgzemM5WApyUERObDBmaHJiYUpyOCtrMmE1UGVPWnVkQzE3MHdJREFRQUJBb0lDQUFxcFgvZEJIMTZrVW03Y25kVEhwS3RXCnEySFpXMUxRUlB5QmRCdWhNRVR0TmhZekNPdjhGQzRUQ29xYzNPZzFMdUx6Z1dXYWRxaHdMOXN0UzZXUlpRUWgKaXF3SWwyNnFGRGtKZlpQTWY5MlRhOEZSZi9IalJWdEx6U0VISE4yeWdZYlhNbjJ0QytaSUE5aXJDVkdmZzVzMgpVMHdTakVHclhGUzA5bWQ0OWxrdVRUSkNsVld4L20yZ2JFUFF6d2EyeGxaSG1ueU92RFgyVnpqSnM3MzdlK0tTCjBXTW5kNXJIOHREN2lsL21adjUxM1VQeFlsY0lEV3J0YjIzWXlpSm85VXFJZTBDM2ZSWkhBYUw0VjFXMUxMRjYKVGg4UjQ4R0RrMlJsT01JcGRZN05RZlloeU5CZWVHVjBJSXBsSGxZb0RkQncwb1Zmb2poQlkyVFd5cXR5NXpCYwpKOXUyR2pUQnpGKzc2R1hoUm9jTW9TeVhJV29SZWkvU1orWFJGM3pjdFl5d3FMNVFDMzhLNUkzNGJ0d3Uzd3UxCkp3NlNKZFhFZ0ZqVVJqRDQzVkl3YkYvSHcrdWxRSFFjOVVNZE8wcHFuaVpQRGFSK054SkhGZTQwdWx6TVVBcFEKU3RGbEtoQkhVZStQaU42MWFOM2ZZZjdlT0tPVXN1UDFDVGZ2RkZSdlU1dTlIVm40QzlrMUp2bWVhN3Q1RWFabApRSlpCQzFQMlJDTVNNM0hodzByTVE0MHVOeWVkVDVIV1Z5ODZobVdPa0JVM3U2dTJFdG1TQmdtY2o1VW5lZDNmCjJaekNacmNQaGxqQ3YxQXN2Vzk4MEs2bHVGakQybW1icXBHM211R0NnNDB5cy9rSVFoNnZaK3VqSHdJVzVQOGQKMUswQWJkRlJ5OTFIMzhqeGVrVmhBb0lCQVFEYk9OS3pZV2c5ZE5rbTEzalAwSkRWR3A5UUU3ZTlwYXF1T2pLcApkT3A4SXFXelVSQms0VUNJWHBTMzdiUE5GaUkrMzJKd3UzYzd0a2VPSlFXL1B0dUt0V1VubU9GMFFlZWxGVmhrCmNJVXZGUkFmbWxvOHQySnRsUmp0RnBjdW5sNDdQb0lOdWR2eUhhNTluRWEzMFVqZ2t1d21TWWV5OGdPbVVLdGYKMjl3eFlCUVA2M0tqaGJ5MDc1eGo2K0RnSG4rOVM0d1VNc1ZyNzlQSUFPcmkwK1hHckt4WWxCOUc5T3dnTGZzSgp0eGw3cjlqSXY1aGpwKy84cDhPTTlDd3JPYzB6SyswcGhZVkR5REN2Ni9ZRllBMElCSE5uVE5ENHN2aG9STCtpCmhwOG9vR25QYWNnS0Jzd01UZHBDUHo2VGFJT3NnL2NrR0ljU3N0d3NIaEVyTWN6NUFvSUJBUUR0YlE0UzNVczYKVDBFUGFoVzRzTDdhZTU1Z2RDbzFNLzdySkR6MjQxK25vSHZROE81VmdESWtuSlhlb1dDZDVzVmtpNUYzM1NqRQpwSUh1bUE0Z1lESnJNbVM0WGFZcDIxMDNQRW5tdkswdWF6azU4ZFk5aFc2bEVtS1VzWUc0THpFcW83alpsckVICmtoRytvckNnUnE2OUNpVHo1VUY2NTQraEl6UjVEWGJpclJHdmhoUGhHMmVOZDJHK0UyelhRZHZscHZCc0JDT1UKMk5IRmE5dG1FMVFxT3E0d2ZVSlRXVFFwT0Frb29PZlBPbDlFRW1EVEtwT3ZBVjV4WXZXTHlBSmpHMSs3dU5ySwpETUwzOG5KeEMyNUVHYkNXK1l5U0J4RElJQzhJa0poM2lSamJkbTNXbDMwUGh1eXRsb0M0VzNmUThXZk9HWnlqCmxkMHlGZExXT2Y0ckFvSUJBUURBREE2aHNQTEY3QWlVZTIxTitUUDRUTU5HUG8vWDV6c1lPTW5MSkM2TG96cXcKVlpMY0hXMFFTbk5Va2p2U3JkSkFiQ2ZzQkg3VzQ3L1o2ZHNZQ0hRQ0Z4bFAwQ0dxWEZZWGpCU01vUG84SGVLcgpIT2h5aW1FRENQdjJMN1V2MVBOT1NWdGJ0UGZYS21PRGpSVnkwVGhiN0xwT2JGb2h6TnlmcGNvTVJ5cW1Zcm9RCm5ENG92Tzl0UHdBdGxTWENrVlZzdXJNenVxcXkvVDMxMTcvdUNKNGlKNEV3ZEVyV09aaG1OSUhZcC92K0hEWDQKMzhnYmZiTEREeUZENldDTVdhM0haM0x6emhIS0tLVm1hSHQxaUFqQ2ZrdXZNbDlia0VZSDZqcExvazNxSkdXdAptOGp2NTdaNERQZm8wMGo1a0RUU1BDV1ZESnZBS01xekozLzQ3RDdaQW9JQkFBbEJsaW5nSEwyeU4wd2RpNmsrCm9zSXJ6Wm5mRFlJemU3MjVGUE5mRyt5U0VpR3NNdTU4Wi9nTGJzQldORWtUcFNCdFhJZDZ4TXNkeXI3OWlKZDAKaUtLclBVZit4cXFkRmI1QWlIVUphQXNHUFIzb01yMEZSYklEekhvVmpZUWJ1dVA1ckF3M2xzRS96WmRNQ216RgpOS3pFQjNyR3RrM1BWMGNsOHpiQThxQ1Z0TG5PRlZwU1VqQXV0azNOdmhHS1RNTmdSY0ZBVEE3U2dTTWNPRnA3CmFHMlpDZzl6NHJFVEtqaHRLZFkrcDZycGtLczd1RENqV1V5YVZnOC9sMmtTckIwbkJRMXhnSDRlRHovUllPck4KVWtndlpEWU9sbzllM1NXZ001VTI1ZXJMR24vNzF2NWx1NGR1Y0MyNFQxNWdtb1EzMVI4dzJtMTZPenhubzJlYwpyUzhDZ2dFQkFKbWtWQWJiWjk2aGJiakJ6N3BQd0V5M0hqbFZET2pMUjVDRlZHUDYveGJDSGdVbWRndmlTS1IxClE4RE9nZ2Nzd3ZOYk5rT2Z3YjVkMjFxYU84ZXR4ZmptMEpUcmhrOGtFSncyc0cvSmdpc01xT0owUklsQnk1bkQKT3phSmVUZGptajVvUTQzeURMa3R1WDh1cDVudGtvMkhXL2dVOHUyMDgwNHc2OWJCV2NiYndLSVp5cTd3QmNQbgoxUHFzL29YWSsybFhoNitsK0ZOTzE4M0NZVEFLSS9YMlFhMTBpNlk5MFVIRC9Ec0RaQktUNjkycmRaYXUzY2EvCngzdEhIcm8vcFRyUzJkNXMvRHlIenlueEdPQTdnMnhBRUhOLzF3VmprTDRlcE1LSmFIR3NLd3RDbmVRWUdjVDYKMjVDZUJYVFVYVkVLVk01U3dxOW4xQ0FMdWVBUFlyRT0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQo="
    discoveryDomain:
      tlsCert: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZDekNDQXZNQ0FRRXdEUVlKS29aSWh2Y05BUUVMQlFBd2VURUxNQWtHQTFVRUJoTUNRa2N4RGpBTUJnTlYKQkFnTUJWTnZabWxoTVE0d0RBWURWUVFIREFWVGIyWnBZVEVXTUJRR0ExVUVDZ3dOUkdselkyOTJaWEo1SUU5eQpaekVWTUJNR0ExVUVDd3dNUkdselkyOTJaWEo1SUU5Vk1Sc3dHUVlEVlFRRERCSk1iMk5oYkNCRWFYTmpiM1psCmNua2dRMEV3SGhjTk1qSXhNakF4TURnMU1EVTJXaGNOTXpJeE1USTRNRGcxTURVMldqQWVNUnd3R2dZRFZRUUQKREJOa2FYTmpiM1psY25rdVlYQnBMbXh2WTJGc01JSUNJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQwpDZ0tDQWdFQTF0ZXhMWG16V0l2bmh4VzRhdU4yRVRVZUYxN1o3dTFCaVo4NkVmdktYY1NwNGJLYUlTZWpUVldTCkx3Wnc3L3dqSWZvNXFLeS9LdWVKMHdDMGJ1bDlxZ3poSGNsUzIyMEtxYjhnRnhoU3NUa3pCODk2cnVvSE9jM0YKMFZONElnOTBIdTlxaXpaUFdhT2ZNd2dMMDRKbGpRM3UySzk2ZFVkM1hZcUVFTjQyWEZqWC83UGNjc0xkNEpWdQpONG1qSDdMV01nYjRYZVRXMDlKSFpIeHh1YVlUNkNUeiszNlkyR0g0a1VwYi94NXB0V0k0QVVtQ1FNa3d3UGRDCkpEaGVyOWhhTTdqRzFNUzRuMGEvSzJUOU9ERk1LbkRFUDlWcFlHWkNHQzF6UFdxOHJMK295eCt1Z0FFRUNWcHUKU2pqNVQvaXR3Q3dvY0w2b3VQZ3dDUTZDR2JpOTEwNDlaUTh6YTBhc3pORTgwcjV5SmNkazU0MzhiaVlKZmE3awpiN2FFUWI0eG5qeGRKNVgxZmtPZ3RoSmVVT1kzQldLQk9aWmh3U28wRk1CL2FhckNKZHBiVmo3WXU4RDdPSWRhCmFQYnhvTURtdG9vUmwzeVMrZHF6N0xBVCt1N0crTzB3UllMa0wwNHR3SVhseDZoSFQ1Sk1hYVlUZ3liYzh2RFYKUFZWemxGN1JQdHZ3MlpMT0x0enZiR3hPRkpZKzJ0MEY3Tyt0a1JJSXpLZFBMc2pibDVoOXAxZlQxWGlVYUtYVQpxZFQ0SjNERWZ6Mk5RaUVJeU1BWUhoV3h1ZGdHbGJXeUx3enpqY25zL3VRbmxzcy9ubXk5b0N0dW1zYnZ1aVRCCmhHTUVseUtTOHkrbnZYWTBDU0hRZ1BDK0lnWTVyYi9hM21hbnlMelVkRDZnOXFqNzFWOENBd0VBQVRBTkJna3EKaGtpRzl3MEJBUXNGQUFPQ0FnRUFaZjJGRFNqV1hrZy9IMk8xbXhCSGozb3NCS013czNJZEZRbkkwZTJsdklMWgpQSmxBa3grakk0cnFZbW1qdTlBV0RZdEd1bnI2UlpOaE5mMnNrOXNOK3ZySG11OXB3anVpY2dpL2NYNzluTDl3CmNPVTVhV1paT0xPQjhhNGJlLzVNa2ZrdGNEcHhOVmJYRFVMdk9SK25vaS9vNkFYZUFkRE1FT05XKzJ2QWwwQTQKYUg3dExySlkrQ2VzMHFrS3ViZUdIRHhSZmlFTGNhKzBFUnM4bWRHKy9vMi96Tlo2TWRESmt6MVhLalFwRVpEMApUYkZRUUh4dzEyd05KVGh6dWd0dURGaXhBOVNLdjdZY3pwQkJSYXZjajRZMnRRSTZraFBVRXRvSDZWVmpVTjlxClBtdEozdzBlU3hPVVl3MlJ1bm9MTEhhQWxFTW9DSXRxOWs2RTlONmluWkJmMTZXS1laSEJxYUtsejB0SUdvUDQKVlFuZCtFQUZsTmdsWmgwQUxOSTFsaUdnK3JxR2xpcjJMRXVHWkVUcnlDK3ZXd0p0dGpRZHJnSTI0OThpbFZNeQo5QVpJMTNyd0M0OVNCNndJY3YycHdNZjJKdlAvSTJQU2p0cWZpVTd6RGJMNjNublVydWNCSlBQekZBZTYvdUpUCkRxR01rS3pnSHQrVVdRb0ZZS2s3ZmgvSWFyTmxtVUU3MXRGSStSSXVKYlRoVFNYWisvbFp3dE1WNmZKRmZMLzkKdWYyWHBwUlEyaUFZL0JyNDJVckxEelFwbGZYTlJrTzRVVlNCaGtLWXdwclMzdlNObzlpempIa2kyYlBiQkZISApJT1VIRXgzcnpxY0tjaGRyYVpXd3F3eWN3U2U2aVpCVHNzbVBlZVl5aGxxK0JiVEQ1UElIUVVmUm1LNWdWYW89Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
      tlsKey: "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUpRd0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQ1Mwd2dna3BBZ0VBQW9JQ0FRRFcxN0V0ZWJOWWkrZUgKRmJocTQzWVJOUjRYWHRudTdVR0puem9SKzhwZHhLbmhzcG9oSjZOTlZaSXZCbkR2L0NNaCtqbW9yTDhxNTRuVApBTFJ1NlgycURPRWR5VkxiYlFxcHZ5QVhHRkt4T1RNSHozcXU2Z2M1emNYUlUzZ2lEM1FlNzJxTE5rOVpvNTh6CkNBdlRnbVdORGU3WXIzcDFSM2RkaW9RUTNqWmNXTmYvczl4eXd0M2dsVzQzaWFNZnN0WXlCdmhkNU5iVDBrZGsKZkhHNXBoUG9KUFA3ZnBqWVlmaVJTbHYvSG1tMVlqZ0JTWUpBeVREQTkwSWtPRjZ2MkZvenVNYlV4TGlmUnI4cgpaUDA0TVV3cWNNUS8xV2xnWmtJWUxYTTlhcnlzdjZqTEg2NkFBUVFKV201S09QbFArSzNBTENod3ZxaTQrREFKCkRvSVp1TDNYVGoxbER6TnJScXpNMFR6U3ZuSWx4MlRuamZ4dUpnbDlydVJ2dG9SQnZqR2VQRjBubGZWK1E2QzIKRWw1UTVqY0ZZb0U1bG1IQktqUVV3SDlwcXNJbDJsdFdQdGk3d1BzNGgxcG85dkdnd09hMmloR1hmSkw1MnJQcwpzQlA2N3NiNDdUQkZndVF2VGkzQWhlWEhxRWRQa2t4cHBoT0RKdHp5OE5VOVZYT1VYdEUrMi9EWmtzNHUzTzlzCmJFNFVsajdhM1FYczc2MlJFZ2pNcDA4dXlOdVhtSDJuVjlQVmVKUm9wZFNwMVBnbmNNUi9QWTFDSVFqSXdCZ2UKRmJHNTJBYVZ0Ykl2RFBPTnlleis1Q2VXeXorZWJMMmdLMjZheHUrNkpNR0VZd1NYSXBMekw2ZTlkalFKSWRDQQo4TDRpQmptdHY5cmVacWZJdk5SMFBxRDJxUHZWWHdJREFRQUJBb0lDQVFETCtBTlNkVlI4SUhjem5MOTFXM1pnClo5bWx2bnVSaHRiTjNjbTRBU0RqWFM4Y0JBQ29zWVVzaXEwNjBCYXhBT1FxQWZKejNXMnhRaGxycGlPbm1TMmgKSUpFcFFsWFQxUFptcWZuQmMyb3VyMnR2WXQvSzZJenJxQnpDMjBnV3JpMUVvWEM1c2xvcmRGaFVqck1MbjZUaQpBZlJjN0Z5S3M4cnpsK3BDU1hXNnZ1NXk2VVBHQUpPK0FLQ2ZRYUVKR3pTWVVsM0NadHcrUmtsWmNYeFhFUUdkClNGZ0swT296cE8va29JQXUrYVRLZS9GSDU0NHVDOVNwbnhYQVpYUWY1bnZjMXZTT1ZDWWpzWHNWcTg5c1pnRTEKMmRHMytOa09tSWJ2aFZiL1hESzhuMG1WYndLd3JFWTB5eElpald6RkxBZHBoNEx0WjFXd0pwRVVTQjNrWmF4MAoyNWY3eUpOTXVXZXF6SjhEb1BJU3hrL0NsSmR2ZWhZZCtJRWtsR3RuTGhmd3VSbzFqaDRqWDZENkd6aXJqdExtCnVvQ3VtYXNFOG95Y28zODJpcjIrSGdkNVpnQlJCWWU4N0g5VjVCR3N6UmtKTnNBTkQxOEVYdllFcWo3QVhOdmkKLzdoTHlNRWxGajZrbENKN003S2xzczFhUisySlVOS1diZ3NFNDBhU3BISy95cHZJRGpxMVlkdndVLzdYUlN4awpSd1dYN3RwaXhDcG5sQnBWbDFuWXgrYUZiSlpkZzJxYTZ3dTB5eTBQcXRZTVBnZHFpdXZjbVRYeDFLN0VzZ0oxCkhabGNoVXFGZEJ1dWY5dVQ1SnJuRVo0c0pDakYxQi9vOEJPb1MyU0ZSa2F1RnhJb1haMXNnYUNsTzhZanFuZHIKczR6Wm9SN3lLK2QySTA0Rjg3emo0UUtDQVFFQTZ4WnpsS3JxRnRaMVlsK3ZwM3B1N0Vqb2QrYzJieWd0aEdNVwpUOVk2ODlvZWNINTdUK2M2NjhGQXAyVWd4M3pmYUxjSkk1N3BzTkQ3WlNFREFvTVpta0ZaUndpaUdOL2VsM1QzCnV5Y2RZK1ZBR3hHVEFTYk4vL0JGU3VJT3RVN1k0ZDFZTW4vRVBSWFI2Y0gwaVVNT0ZPY0ZxN1YvZzFCWmRMWEYKOUhwa3N3NTcxRERzYm40dFZ3dlY4WjdudDFjVnlQMkJjaHFRWEV4M1N0S01wWm5qV2RrTlRWZk16NDg5Ny9LdwpadmxHK0NrODhHTXl2YS84cGZMcUpSa1lqQXAvV2V3MHF0cmZtUW9pNEsyb0t3akk2SVM5bk9BUGdGaHkzVXVuCkYzWnZUcWMrOEc2dXFPeFRZM2h4d3ZrR3JOOENoUzd4UUVBY2pldEhtdlhUS3ptcWxRS0NBUUVBNmZRMDUxYk0KQkd1UUhMK3RQRzlVaVN3ZkQrdGRoeW1nMElqVlFXdG9RMnpJcnZFSFlkN2IwUjJVVjFQdzRBTllqNStYbEVkaApxY3loSGNTZ3h5TGltTWtpT09WcXdMVkJBSzZjbmx1ekhMc1FPMkluM2wyNDlIcFdFNW1ZZ1hBWUthQWgyL2RwClBoTFZ3NGJ6ekJoUDRtYXJkeEYyMVZGYTArTFM4Szg3MWxUS1VNSUoxZnFUVWRnZnpZVDdEWmpxTlpVZkR4bXoKMysydzlHWjVhaE9hL2NreXdZTUZESFVSM25UbzNJQnJueVMzdmxROUtmTG8wUU5lcHozY0tiVHRmbVBsMFFxNgp2TVd2ZzRaOWkwUzV5SGVoamtHK2ZROFI0K3Z1UUNGWnpHWlVRaDVRK3JacGtJbVJudnc1NENuSHpkV1hyVXBJCk1OaWNCOE9HR1VXM0l3S0NBUUVBazhyRWxQVXlQM05KenJPYktXNEdLQlBaMmUrSXdDOEJGcFo0bzI1cUYzM0wKM3lzVStQSEVrQXdwU2xPQVhRbDdKa2pUdlFvZG5tUnpkMnRlaWdqRFlyK3NrY1N5cTNLcWJJdERadXc3Uk44TwpBelowTmFnZ244Tjh2SXdMZFI2QnFOVlBxa2U2cGpCK2pEZThOVUxycW1abW9VRjBUYWlJNUorV09KRnRsMGdHCnZ5cVdxUXc0RXQ1RS9TYktRKy9DcVYzK01DN1ZETUdoeVc4K3JxbGxUY252Mit6VHZMVXYyaGEzb2JVYlVjNFQKR29reWtDQUFkSStYZGdVbDhueHkvYVJLcEJML3VTV3ZNWkxiQTFyOWUzaGdBQ3k0Y2hhbzk4aWszbEk5dmJQVgpGTEJ3cTVBUENKemk0QkZRaWdPVmdRYzI4ZzZjSlBpQ1JzQStwcEVWVlFLQ0FRQkl6Vyt4RmJlRElKM0Y5SGZLCk9MTEx4T2tkb1JhSHV4S0tFaXFhb3Z2ZEQzc2J4WEdRcVRNcVRkUWRvTWR5VGxnK3lXRDRDWWFBdW1iZ3hwRnAKcHBkeENCWVlNbndYMzgrTWtNbTRGYjBWRWJrcFlaQWFpSHZIeUZJRTQyVXIwbUFTZy94RllTWms1S09VcHVneQorTlhURkRRRFozSGRTK1hCemZIcVovMXM0eEhhTTZldjZMdnpXaGY3Y29oVllPSnhMaWh1SUlkekJacHRVMzR3CjNrejY4S05VeUpySGw1NnA1U09aaW5Uekh3LzJzR3dnSTdFRGFkTUlwQjFnOVNaNmtFZXgxMjdvMDNPY3NEdGQKSFZQYTZDOWovMTF4dVVETjlsczdwYVUyRUJua1FWN2R4ZW52eW4rQVEra1dzcW0waWVVYlRlUk5IdnJmQjU4eApPaHFWQW9JQkFEZXhlL2V1LzFOOXgrMXZ0WkFvQUN6ZWQ5Mm5nZkV5dFRKRUdmakNuNnpCbkVabG1zWjMrRHVGCnRwbWZCOVNBR3lTblNYelk0bGNnUDZqUXNidTR3dlJKL2szV1A0dnd4MnErR1NHRUFJbGp3MzFDRFBqa1VNcGQKMG9kcGFwRDV4NGtSazdnTjZNZ0plb2FuSG9KRm8zTDhMS3ptL3FnNnVxT0ttZVp1UVp3OG5UQjlVVER1eURNYgp6S2JrMjRzM21taHZlczZCTGlVZWZWM050MXNKRXM4RjByZmRRTnUyS3hScXF5djBRNU4wV3A5eEZxNDhCenQ0CnNWQXNTc2NVK3dGQUx2MmQ4VXhlOHpla294UEh1QlBLOEVRM0ZLM0RpMitJc2ZPT2tPcjdpMTJtNjB6T0Q3SGMKTmd0MUsvQ09CMWRGUk9VU3h5OXBmTE1ja3U0dktsWT0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQo="
  isLocalEnv: true
  oathkeeper:
    mutators:
      authenticationMappingServices:
        subscriber:
          authenticator:
            enabled: true
        tenant-fetcher:
          authenticator:
            enabled: true
        nsadapter:
          authenticator:
            enabled: true
  ordService:
    skipSSLValidation: true
  ordAggregator:
    http:
      client:
        skipSSLValidation: true
  hydrator:
    http:
      client:
        skipSSLValidation: true
  iasAdapter:
    tenantInfo:
      insecureSkipVerify: true
    ias:
      secret:
        manage: true
  tenantFetcher:
    omitDependenciesParamName: "omit"
    omitDependenciesParamValue: "true"
    k8sSecret:
      name: "tenant-fetcher-secret"
      key: "keyConfig"
      path: "/tmp"
    endpoints:
      subaccountCreated: "http://compass-external-services-mock.compass-system.svc.cluster.local:8080/tenant-fetcher/subaccount-create"
  systemFetcher:
    enabled: true
    operationalMode: "DISCOVER_SYSTEMS"
    http:
      client:
        skipSSLValidation: true
    systemToTemplateMappings: '[{"Name": "SAP temp1", "Region": "eu-1", "SourceKey": ["prop"], "SourceValue": ["val1"] }, {"Name": "SAP temp2", "Region": "eu-1", "SourceKey": ["prop"], "SourceValue": ["val2"] }]'
    systemsAPIEndpoint: "http://compass-external-services-mock.compass-system.svc.cluster.local:8080/systemfetcher/systems"
    systemsAPIFilterCriteria: "no"
    systemsAPISelectCriteria: ""
  tenantFetchers:
    account-fetcher:
      job:
        interval: "10s"
      tenantType: "account"
      pageWorkers: "2"
      dbPool:
        maxIdleConnections: "1"
        maxOpenConnections: "1"
      enabled: true
      authConfig:
        skipSSLValidation: true
        oauthMode: "oauth-mtls"
        clientIDPath: "clientid"
        clientSecretPath: "secret"
        clientCertPath: "cert"
        clientKeyPath: "key"
        tokenEndpointPath: "url"
        tokenURLPath: "/cert/token"
      api:
        regionName: "central"
        authConfigSecretKey: "central"
        endpoints:
          accountCreated: "http://compass-external-services-mock.compass-system.svc.cluster.local:8080/tenant-fetcher/global-account-create"
          accountDeleted: "http://compass-external-services-mock.compass-system.svc.cluster.local:8080/tenant-fetcher/global-account-delete"
          accountUpdated: "http://compass-external-services-mock.compass-system.svc.cluster.local:8080/tenant-fetcher/global-account-update"
        fieldMapping:
          customerIdField: "customerId"
          detailsField: "eventData"
          discriminatorField: ""
          discriminatorValue: ""
          entityTypeField: "type"
          idField: "guid"
          nameField: "displayName"
          tenantEventsField: "events"
          totalPagesField: "totalPages"
          totalResultsField: "totalResults"
      kubernetes:
        configMapNamespace: "compass-system"
        pollInterval: "2s"
        pollTimeout: "1m"
        timeout: "2m"
      manageSecrets: true
      providerName: "external-svc-mock"
      query:
        pageSize: "1000"
        startPage: "1"
      queryMapping:
        pageNumField: "page"
        pageSizeField: "resultsPerPage"
        timestampField: "ts"
      schedule: "0 23 * * *"
    subaccount-fetcher:
      cron:
        enabled: false
      job:
        interval: "10s"
      tenantType: "subaccount"
      pageWorkers: "2"
      dbPool:
        maxIdleConnections: "1"
        maxOpenConnections: "1"
      enabled: true
      api:
        regionName: "central"
        authConfigSecretKey: "central"
        endpoints:
          subaccountCreated: "http://compass-external-services-mock.compass-system.svc.cluster.local:8080/tenant-fetcher/subaccount-create"
          subaccountDeleted: "http://compass-external-services-mock.compass-system.svc.cluster.local:8080/tenant-fetcher/subaccount-delete"
          subaccountMoved: "http://compass-external-services-mock.compass-system.svc.cluster.local:8080/tenant-fetcher/subaccount-move"
          subaccountUpdated: "http://compass-external-services-mock.compass-system.svc.cluster.local:8080/tenant-fetcher/subaccount-update"
        fieldMapping:
          customerIdField: "customerId"
          detailsField: "eventData"
          discriminatorField: ""
          discriminatorValue: ""
          entityTypeField: "type"
          idField: "guid"
          nameField: "displayName"
          tenantEventsField: "events"
          totalPagesField: "totalPages"
          totalResultsField: "totalResults"
      kubernetes:
        configMapNamespace: "compass-system"
        pollInterval: "2s"
        pollTimeout: "1m"
        timeout: "2m"
      manageSecrets: true
      providerName: "subaccount-fetcher"
      query:
        pageSize: "1000"
        startPage: "1"
      queryMapping:
        pageNumField: "page"
        pageSizeField: "resultsPerPage"
        timestampField: "ts"
      schedule: "0 23 * * *"
      authConfig:
        skipSSLValidation: true
        oauthMode: "oauth-mtls"
        clientIDPath: "clientid"
        clientSecretPath: "secret"
        clientCertPath: "cert"
        clientKeyPath: "key"
        tokenEndpointPath: "url"
        tokenURLPath: "/cert/token"
  tests:
    basicCredentials:
      manage: true
    http:
      client:
        skipSSLValidation: true
    subscription:
      oauthSecret:
        manage: true
  destinationFetcher:
    request:
      skipSSLValidation: true
      oauthTokenPath: "/cert/token"
operations-controller:
  http:
    client:
      skipSSLValidation: true
system-broker:
  http:
    client:
      skipSSLValidation: true
