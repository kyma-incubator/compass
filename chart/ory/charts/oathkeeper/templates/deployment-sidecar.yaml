{{- if eq .Values.global.ory.oathkeeper.maester.mode "sidecar" }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "oathkeeper.fullname" . }}
  {{- if .Release.Namespace }}
  namespace: {{ .Release.Namespace }}
  {{- end }}
  labels:
    mode: {{ .Values.global.ory.oathkeeper.maester.mode }}
    {{- include "oathkeeper.labels" . | nindent 4 }}
    {{- with .Values.deployment.labels }} 
      {{- toYaml . | nindent 4 }} 
    {{- end }}  
  annotations:  
    {{- with .Values.deployment.annotations }}  
      {{- toYaml . | nindent 4 }} 
    {{- end }}
spec:
# TODO!!! Custom logic that checks whether autoscaling is enabled, could exist in future Ory versions
{{- if not .Values.deployment.autoscaling.enabled}}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "oathkeeper.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  # TODO!!! Strategy does not exist in OS charts
  strategy:
    {{- toYaml .Values.deployment.strategy | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "oathkeeper.labels" . | nindent 8 }}  
        {{- with .Values.deployment.labels }} 
          {{- toYaml . | nindent 8 }} 
        {{- end }}  
        {{- with .Values.deployment.podMetadata.labels }} 
          {{- toYaml . | nindent 8 }} 
        {{- end }}
      annotations:
        # important: This did not previously exist, added by OS chart
        {{- include "oathkeeper.annotations.checksum" . | indent 8 -}}
        {{- with .Values.deployment.annotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.deployment.podMetadata.annotations }}  
          {{- toYaml . | nindent 8 }} 
        {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        {{- if .Values.deployment.extraVolumes }} 
          {{- toYaml .Values.deployment.extraVolumes | nindent 8 }} 
        {{- end }}
        - name: {{ include "oathkeeper.name" . }}-config-volume
          configMap:
            {{- if .Values.demo }}
            name: {{ include "oathkeeper.fullname" . }}-config-demo
            {{- else }}
            name: {{ include "oathkeeper.fullname" . }}-config
            {{- end }}
        - name: {{ include "oathkeeper.name" . }}-rules-volume
          emptyDir: {}
        - name: {{ include "oathkeeper.name" . }}-secrets-volume
          secret:
            secretName: {{ include "oathkeeper.secretname" . }}
      initContainers:
        - name: init
          image: busybox:1
          volumeMounts:
            - name: {{ include "oathkeeper.name" . }}-rules-volume
              mountPath: /etc/rules
              readOnly: false
          command:
            - sh
            - -c
            - |
              touch /etc/rules/access-rules.json
              chmod 666 /etc/rules/access-rules.json
          securityContext:
            # TODO!!! Custom implementation of security context; in OS charts it is one, in the Kyma one it is divided by sidecar, controller etc.
            {{- toYaml .Values.deployment.securityContext.sidecar | nindent 12 }}
      {{- if .Values.deployment.extraInitContainers }}
        {{- tpl  .Values.deployment.extraInitContainers . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [ "oathkeeper", "serve", "--config", "/etc/config/config.yaml" ]
          env:
            # TODO!!! Custom implementation; OS chart only allows file, which is not ideal, should be changed in future Helm charts
            # {{- if .Values.oathkeeper.config.mutators.id_token.config.jwks_url }}
            # - name: MUTATORS_ID_TOKEN_CONFIG_JWKS_URL
            #   value: "{{ .Values.oathkeeper.config.mutators.id_token.config.jwks_url }}"
            # {{- end }}
            {{- if .Values.oathkeeper.mutatorIdTokenJWKs }}
            - name: MUTATORS_ID_TOKEN_CONFIG_JWKS_URL
              value: "file://{{ .Values.secret.mountPath }}/{{ .Values.secret.filename }}"
            {{- end }}
            {{- with .Values.deployment.extraEnv }} 
              {{- toYaml . | nindent 12 }}  
            {{- end }}
          volumeMounts:
            {{- with .Values.deployment.extraVolumeMounts }}  
              {{- toYaml . | nindent 12 }}  
            {{- end }}
            - name: {{ include "oathkeeper.name" . }}-config-volume
              mountPath: /etc/config
              readOnly: true
            - name: {{ include "oathkeeper.name" . }}-rules-volume
              mountPath: /etc/rules
              readOnly: true
            - name: {{ include "oathkeeper.name" . }}-secrets-volume
              mountPath: {{ .Values.secret.mountPath }}
              readOnly: true
          ports:
            - name: http-api
              containerPort: {{ .Values.oathkeeper.config.serve.api.port }}
              protocol: TCP
            - name: http-proxy
              containerPort: {{ .Values.oathkeeper.config.serve.proxy.port }}
              protocol: TCP
            # important: this might be a solution to the metrics collection of oathkeeper
            - name: http-metrics
              protocol: TCP
              containerPort: {{ .Values.oathkeeper.config.serve.prometheus.port }}
          livenessProbe:
            httpGet:
              path: /health/alive
              port: http-api
            # TODO!!! custom implementation, this(3 lines below) does not exist in OS charts; might exist in future versions
            initialDelaySeconds: 15
            periodSeconds: 10
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http-api
            # TODO!!! custom implementation, this(3 lines below) does not exist in OS charts; might exist in future versions
            initialDelaySeconds: 45
            periodSeconds: 10
            failureThreshold: 10
          # TODO!!! custom implementation, this(startupProbe) does not exist in OS charts; might exist in future versions
          startupProbe:
            httpGet:
              path: /health/alive
              port: http-api
            initialDelaySeconds: 45
            periodSeconds: 10
            failureThreshold: 30
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          # TODO!!! this is changed to adapt to the Kyma-specific oathkeeper values.yaml
          securityContext:
            {{- toYaml .Values.deployment.securityContext.oathkeeper | nindent 12 }}
        - name: {{ .Chart.Name }}-maester
          image: "{{ .Values.sidecar.image.repository }}:{{ .Values.sidecar.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /manager
          args:
            - --metrics-addr=0.0.0.0:8080
            - sidecar
            - --rulesFilePath=/etc/rules/access-rules.json
          resources:
            # TODO!!! Kyma have combine the oathkeeper-maester values in the oathkeeper values, look for a way to divide them back
            {{- index .Values "oathkeeper-maester" "deployment" "resources" | toYaml | nindent 12 }}
          {{- with .Values.sidecar.envs }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - containerPort: 8080
              name: metrics
          volumeMounts:
            - name: {{ include "oathkeeper.name" . }}-rules-volume
              mountPath: /etc/rules
              readOnly: false
          # TODO!!! security context is divided in the Kyma values, but is the same in OS chart
          securityContext:
            {{- toYaml .Values.deployment.securityContext.maester | nindent 12 }}
        {{- if .Values.deployment.extraContainers }}
          {{- tpl .Values.deployment.extraContainers . | nindent 8 }}
        {{- end }}
      serviceAccountName: {{ default "maester" .Values.maester.nameOverride }}-account
      # TODO!!! This breaks oathkeeerper-maester for some reason
      # automountServiceAccountToken: {{ .Values.deployment.automountServiceAccountToken }}
      {{- with .Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    # TODO!!! Does not exist in the OS chart, might be added later
    {{- if .Values.global.priorityClassName }}
      priorityClassName: {{ .Values.global.priorityClassName }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.deployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
