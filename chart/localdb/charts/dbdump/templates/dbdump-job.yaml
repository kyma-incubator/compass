apiVersion: batch/v1
kind: Job
metadata:
  name: compass-dbdump
  namespace: {{ $.Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Release.Name }}
spec:
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
        serviceAccountName: {{ $.Chart.Name }}-dbdump-job
        restartPolicy: Never
        shareProcessNamespace: true
        containers:
          - name: dbdump
            image: bitnami/postgresql:11.15.0-debian-10-r93
            imagePullPolicy: IfNotPresent
            env:
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-password
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-serviceName
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-servicePort
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-db-name
            - name: DB_SSL
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-sslMode
            command:
              - "/bin/bash"
            args:
              - "-c"
              - "sleep 40; [ -f /tmp/dbdata/dump.sql ] && PGPASSWORD=${DB_PASSWORD} psql --username=${DB_USER} --host=${DB_HOST} --port=${DB_PORT} --dbname=${DB_NAME} --single-transaction -f /tmp/dbdata/dump.sql --set ON_ERROR_STOP=on --set sslmode=${DB_SSL} || echo 'There is no dump.sql to be applied.' ; exit_code=$?; echo '# KILLING PILOT-AGENT #'; pkill -INT cloud_sql_proxy; curl -XPOST http://127.0.0.1:15020/quitquitquit; sleep 5; exit $exit_code;"
            volumeMounts:
              - name: dump-folder
                mountPath: "/tmp/dbdata"
        volumes:
          - name: dump-folder
            persistentVolumeClaim:
              claimName: local-pvc
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $.Chart.Name }}-dbdump-job
  namespace: {{ $.Release.Namespace }}
  labels:
    app: {{ $.Chart.Name }}
    release: {{ $.Release.Name }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
