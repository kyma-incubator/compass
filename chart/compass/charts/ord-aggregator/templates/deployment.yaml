apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.deployment.minReplicas }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
  strategy:
  {{- toYaml .Values.deployment.strategy | nindent 4 }}
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        {{- if .Values.deployment.resourcesIstioProxy.requests.cpu }}
        sidecar.istio.io/proxyCPU: {{ .Values.deployment.resourcesIstioProxy.requests.cpu }}
        {{- end }}
        {{- if .Values.deployment.resourcesIstioProxy.requests.memory }}
        sidecar.istio.io/proxyMemory: {{ .Values.deployment.resourcesIstioProxy.requests.memory }}
        {{- end }}
        {{- if .Values.deployment.resourcesIstioProxy.limits.cpu }}
        sidecar.istio.io/proxyCPULimit: {{ .Values.deployment.resourcesIstioProxy.limits.cpu }}
        {{- end }}
        {{- if .Values.deployment.resourcesIstioProxy.limits.memory }}
        sidecar.istio.io/proxyMemoryLimit: {{ .Values.deployment.resourcesIstioProxy.limits.memory }}
      {{- end }}
      labels:
        app: {{ .Chart.Name }}
        reqlimit: {{ .Values.global.istio.ingressgateway.requestPayloadSizeLimit2MBLabel }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ template "fullname" . }}
      nodeSelector:
      {{- toYaml .Values.deployment.nodeSelector | nindent 8 }}
      imagePullSecrets:
        {{ if eq .Values.global.portieris.isEnabled true }}
        - name: {{ .Values.global.portieris.imagePullSecretName }}
        {{ end }}
        {{ if eq $.Values.global.ordAggregator.metadataValidator.setImagePullSecrets true }}
        - name: api-validator-secret
        {{ end }}
      volumes:
        - name: director-config
          configMap:
            name: compass-director-config
        - name: tenant-mapping-config
          configMap:
            name: compass-director-tenant-mapping-config
      containers:
        - name: {{ .Values.global.ordAggregator.containerName }}
          image: {{ $.Values.global.images.containerRegistry.path }}/{{ $.Values.global.images.director.dir }}compass-director:{{ $.Values.global.images.director.version }}
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: director-config
              mountPath: /config
            - name: tenant-mapping-config
              mountPath: {{ .Values.global.director.tenantMappingsPath}}
              readOnly: true
          env:
            - name: APP_DB_USER
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-username
            - name: APP_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-password
            - name: APP_DB_HOST
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-serviceName
            - name: APP_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-servicePort
            - name: APP_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-db-name
            - name: APP_DB_SSL
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-sslMode
            - name: APP_CONFIGURATION_FILE
              value: /config/config.yaml
            - name: APP_DB_MAX_OPEN_CONNECTIONS
              value: "{{ .Values.global.ordAggregator.dbPool.maxOpenConnections }}"
            - name: APP_DB_MAX_IDLE_CONNECTIONS
              value: "{{ .Values.global.ordAggregator.dbPool.maxIdleConnections }}"
            - name: APP_SKIP_SSL_VALIDATION
              value: "{{ .Values.global.ordAggregator.http.client.skipSSLValidation }}"
            - name: APP_ADDRESS
              value: "0.0.0.0:{{ .Values.global.ordAggregator.port}}"
            - name: APP_ROOT_API
              value: "{{ .Values.global.ordAggregator.prefix }}"
            - name: APP_JWKS_ENDPOINT
              value: "{{ .Values.global.ordAggregator.authentication.jwksEndpoint }}"
            - name: APP_HTTP_RETRY_ATTEMPTS
              value: "{{ .Values.global.ordAggregator.http.retry.attempts }}"
            - name: APP_HTTP_RETRY_DELAY
              value: "{{ .Values.global.ordAggregator.http.retry.delay }}"
            - name: APP_LOG_FORMAT
              value: {{ .Values.global.log.formatJson | quote }}
            {{ if and ($.Values.global.metrics.enabled) ($.Values.global.metrics.pushEndpoint) }}
            - name: APP_METRICS_PUSH_ENDPOINT
              value: {{ $.Values.global.metrics.pushEndpoint}}
            {{ end }}
            - name: APP_EXTERNAL_CLIENT_CERT_SECRET
              value: "{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.namespace }}/{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.name }}"
            - name: APP_EXTERNAL_CLIENT_CERT_KEY
              value: "{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.certKey }}"
            - name: APP_EXTERNAL_CLIENT_KEY_KEY
              value: "{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.keyKey }}"
            - name: APP_EXTERNAL_CLIENT_CERT_SECRET_NAME
              value: "{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.name }}"
            - name: APP_GLOBAL_REGISTRY_URL
              value: "{{ .Values.global.ordAggregator.globalRegistryUrl }}"
            - name: APP_ELECTION_LEASE_LOCK_NAME
              value: {{ .Values.global.ordAggregator.lease.lockname | quote }}
            - name: APP_ELECTION_LEASE_LOCK_NAMESPACE
              value: {{ .Release.Namespace }}
            - name: APP_OPERATIONS_MANAGER_PRIORITY_QUEUE_LIMIT
              value: "{{ .Values.global.ordAggregator.priorityQueueLimit }}"
            - name: APP_OPERATIONS_MANAGER_RESCHEDULE_JOB_INTERVAL
              value: "{{ .Values.global.ordAggregator.rescheduleJobInterval }}"
            - name: APP_OPERATIONS_MANAGER_RESCHEDULE_PERIOD
              value: "{{ .Values.global.ordAggregator.reschedulePeriod }}"
            - name: APP_OPERATIONS_MANAGER_RESCHEDULE_HANGED_JOB_INTERVAL
              value: "{{ .Values.global.ordAggregator.rescheduleHangedJobInterval }}"
            - name: APP_OPERATIONS_MANAGER_RESCHEDULE_HANGED_PERIOD
              value: "{{ .Values.global.ordAggregator.rescheduleHangedPeriod }}"
            - name: APP_MAINTAIN_OPERATIONS_JOB_INTERVAL
              value: "{{ .Values.global.ordAggregator.maintainOperationsJobInterval }}"
            - name: APP_OPERATION_PROCESSORS_QUIET_PERIOD
              value: "{{ .Values.global.ordAggregator.operationProcessorsQuietPeriod }}"
            - name: APP_PARALLEL_OPERATION_PROCESSORS
              value: "{{ .Values.global.ordAggregator.parallelOperationProcessors }}"
            - name: APP_MAX_PARALLEL_DOCUMENTS_PER_APPLICATION
              value: "{{ .Values.global.ordAggregator.maxParallelDocumentsPerApplication }}"
            - name: APP_MAX_PARALLEL_SPECIFICATION_PROCESSORS
              value: "{{ .Values.global.ordAggregator.maxParallelSpecificationProcessors }}"
            - name: APP_SELF_REGISTER_DISTINGUISH_LABEL_KEY
              value: {{ .Values.global.director.subscription.subscriptionProviderLabelKey }}
            - name: APP_ORD_WEBHOOK_MAPPINGS
              value: {{ .Values.global.director.ordWebhookMappings | quote }}
            - name: APP_TENANT_MAPPING_CALLBACK_URL
              value: "https://{{ .Values.global.gateway.mtls.external.host }}.{{ .Values.global.ingress.domainName }}"
            - name: APP_TENANT_MAPPING_CONFIG_PATH
              value: "{{ .Values.global.director.tenantMappingsPath}}/{{ .Values.global.director.tenantMappingsKey }}"
            - name: APP_CREDENTIAL_EXCHANGE_STRATEGY_TENANT_MAPPINGS
              value: {{ .Values.global.ordAggregator.tenantMappingConfiguration | quote }}
            - name: APP_API_METADATA_VALIDATOR_HOST
              value: "{{ $.Values.global.ordAggregator.metadataValidator.host }}"
            - name: APP_API_METADATA_VALIDATOR_PORT
              value: "{{ $.Values.global.ordAggregator.metadataValidator.port }}"
          command:
            - "/bin/sh"
          args:
            - "-c"
            - "./ordaggregator; exit_code=$?; echo '# KILLING PILOT-AGENT #'; pkill -INT cloud_sql_proxy; curl -XPOST http://127.0.0.1:15020/quitquitquit; sleep 5; exit $exit_code;"
          ports:
            - name: http
              containerPort: {{ .Values.global.ordAggregator.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              port: {{.Values.global.ordAggregator.port }}
              path: "{{ .Values.global.ordAggregator.prefix }}/healthz"
            initialDelaySeconds: {{ .Values.global.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.global.livenessProbe.timeoutSeconds }}
            periodSeconds: {{.Values.global.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              port: {{.Values.global.ordAggregator.port }}
              path: "{{ .Values.global.ordAggregator.prefix }}/readyz"
            initialDelaySeconds: {{ .Values.global.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.global.readinessProbe.timeoutSeconds }}
            periodSeconds: {{.Values.global.readinessProbe.periodSeconds }}
        {{if eq $.Values.global.database.embedded.enabled false}}
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.23.0-alpine
          command:
            - /bin/sh
          args:
            - -c
            - "trap 'exit 0' SIGINT; /cloud_sql_proxy -instances={{ $.Values.global.database.managedGCP.instanceConnectionName }}=tcp:5432"
        {{end}}
        {{ if eq $.Values.global.ordAggregator.metadataValidator.enabled "true" }}
        - name: api-metadata-validator
          image: {{ $.Values.global.ordAggregator.metadataValidator.image }}:{{ $.Values.global.ordAggregator.metadataValidator.version }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ $.Values.global.ordAggregator.metadataValidator.port }}
        {{end}}
