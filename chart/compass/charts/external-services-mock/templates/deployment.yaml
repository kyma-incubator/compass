apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ template "fullname" . }}
    namespace: {{ .Release.Namespace }}
    labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
spec:
    selector:
        matchLabels:
            app: {{ .Chart.Name }}
            release: {{ .Release.Name }}
    template:
        metadata:
            annotations:
                cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
            labels:
                app: {{ .Chart.Name }}
                release: {{ .Release.Name }}
        spec:
            {{ if eq .Values.global.portieris.isEnabled true }}
            imagePullSecrets:
            - name: {{ .Values.global.portieris.imagePullSecretName }}
            {{ end }}
            serviceAccountName: {{ template "fullname" . }}
            containers:
            - name: {{ .Chart.Name }}
              image: {{ .Values.global.images.containerRegistry.path }}/{{ .Values.global.images.external_services_mock.dir }}compass-external-services-mock:{{ .Values.global.images.external_services_mock.version }}
              imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
              env:
              - name: APP_EXTERNAL_URL
                value: {{ .Values.global.externalServicesMock.certSecuredHost }}.{{ .Values.global.ingress.domainName }}
              - name: APP_PORT
                value: "{{ .Values.deployment.port }}"
              - name: APP_CERT_PORT
                value: "{{ .Values.global.externalServicesMock.certSecuredPort }}"
              - name: APP_ORD_SERVERS_CERT_PORT
                value: "{{ .Values.global.externalServicesMock.ordCertSecuredPort }}"
              - name: APP_ORD_SERVERS_UNSECURED_PORT
                value: "{{ .Values.global.externalServicesMock.unsecuredPort }}"
              - name: APP_ORD_SERVERS_BASIC_PORT
                value: "{{ .Values.global.externalServicesMock.basicSecuredPort }}"
              - name: APP_ORD_SERVERS_OAUTH_PORT
                value: "{{ .Values.global.externalServicesMock.oauthSecuredPort }}"
              - name: APP_ORD_SERVERS_UNSECURED_WITH_ADDITIONAL_CONTENT_PORT
                value: "{{ .Values.global.externalServicesMock.unsecuredPortWithAdditionalContent }}"
              - name: APP_ORD_SERVERS_CERT_SECURED_BASE_URL
                value: "https://{{ .Values.global.externalServicesMock.ordCertSecuredHost }}.{{ .Values.global.ingress.domainName }}"
              - name: APP_ORD_SERVERS_UNSECURED_MULTI_TENANT_PORT
                value: "{{ .Values.global.externalServicesMock.unsecuredMultiTenantPort }}"
              - name: APP_ORD_SERVERS_CERT_SECURED_GLOBAL_BASE_URL
                value: "https://{{ .Values.global.externalServicesMock.ordGlobalCertSecuredHost }}.{{ .Values.global.ingress.domainName }}"
              - name: APP_CLIENT_ID
                valueFrom:
                  secretKeyRef:
                    name: {{ .Values.global.externalServicesMock.oauthSecret.name }}
                    key: {{ .Values.global.externalServicesMock.oauthSecret.clientIdKey }}
              - name: APP_CLIENT_SECRET
                valueFrom:
                  secretKeyRef:
                    name: {{ .Values.global.externalServicesMock.oauthSecret.name }}
                    key: {{ .Values.global.externalServicesMock.oauthSecret.clientSecretKey }}
              - name: APP_OAUTH_SCOPES
                value: "{{ .Values.global.systemFetcher.oauth.scopesClaim }}"
              - name: APP_OAUTH_TENANT_HEADER
                value: "{{ .Values.global.systemFetcher.oauth.tenantHeaderName }}"
              - name: BASIC_USERNAME
                valueFrom:
                  secretKeyRef:
                    name: {{ .Values.global.tests.basicCredentials.secretName }}
                    key: username
              - name: BASIC_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: {{ .Values.global.tests.basicCredentials.secretName }}
                    key: password
              - name: APP_DEFAULT_TENANT
                value: "{{ (index .Values.global.tenants 9).id }}"
              - name: APP_TRUSTED_TENANT
                value: "{{ (index .Values.global.tenants 26).id }}"
              - name: APP_ON_DEMAND_TENANT
                value: {{ .Values.global.tests.tenantFetcher.missingTenantOnDemandID }}
              - name: APP_CA_CERT
                valueFrom:
                  secretKeyRef:
                    name: {{ .Values.global.connector.secrets.ca.name }}
                    key: {{ .Values.global.connector.secrets.ca.certificateKey }}
              - name: APP_CA_KEY
                valueFrom:
                  secretKeyRef:
                    name: {{ .Values.global.connector.secrets.ca.name }}
                    key: {{ .Values.global.connector.secrets.ca.keyKey }}
              - name: APP_SELF_REGISTER_PATH
                value: {{ .Values.global.director.selfRegister.path }}
              - name: APP_SELF_REGISTER_NAME_QUERY_PARAM
                value: {{ .Values.global.director.selfRegister.nameQueryParam }}
              - name: APP_SELF_REGISTER_TENANT_QUERY_PARAM
                value: {{ .Values.global.director.selfRegister.tenantQueryParam }}
              - name: APP_SELF_REGISTER_RESPONSE_KEY
                value: {{ .Values.global.director.selfRegister.responseKey }}
              - name: APP_SELF_REGISTER_REQUEST_BODY_PATTERN
                value: {{ .Values.global.director.selfRegister.requestBodyPattern | quote }}
              - name: APP_TENANT_PROVIDER_TENANT_ID_PROPERTY
                value: {{ .Values.global.tenantFetcher.tenantProvider.tenantIdProperty }}
              - name: APP_TENANT_PROVIDER_SUBACCOUNT_TENANT_ID_PROPERTY
                value: {{ .Values.global.tenantFetcher.tenantProvider.subaccountTenantIdProperty }}
              - name: APP_TENANT_PROVIDER_CUSTOMER_ID_PROPERTY
                value: {{ .Values.global.tenantFetcher.tenantProvider.customerIdProperty }}
              - name: APP_TENANT_PROVIDER_SUBDOMAIN_PROPERTY
                value: {{ .Values.global.tenantFetcher.tenantProvider.subdomainProperty }}
              - name: APP_TENANT_PROVIDER_LICENSE_TYPE_PROPERTY
                value: {{ .Values.global.tenantFetcher.tenantProvider.licenseTypeProperty }}
              - name: APP_TENANT_PROVIDER_SUBSCRIPTION_PROVIDER_ID_PROPERTY
                value: {{ .Values.global.tenantFetcher.tenantProvider.subscriptionProviderIdProperty }}
              - name: APP_TENANT_PROVIDER_PROVIDER_SUBACCOUNT_ID_PROPERTY #The property which states the provider subaccount used in the tenant provider
                value: {{.Values.global.tenantFetcher.tenantProvider.providerSubaccountIdProperty }}
              - name: APP_TENANT_PROVIDER_CONSUMER_TENANT_ID_PROPERTY
                value: {{.Values.global.tenantFetcher.tenantProvider.consumerTenantIdProperty }}
              - name: APP_TENANT_PROVIDER_SUBSCRIPTION_PROVIDER_APP_NAME_PROPERTY
                value: {{.Values.global.tenantFetcher.tenantProvider.subscriptionProviderAppNameProperty }}
              - name: APP_TENANT_PROVIDER_SUBSCRIPTION_ID_PROPERTY
                value: {{.Values.global.tenantFetcher.tenantProvider.subscriptionIDProperty }}
              - name: APP_TENANT_PROVIDER_DEPENDENT_SERVICE_INSTANCES_INFO_PROPERTY
                value: {{.Values.global.tenantFetcher.tenantProvider.dependentServiceInstancesInfoProperty }}
              - name: APP_TENANT_PROVIDER_DEPENDENT_SERVICE_INSTANCES_INFO_APP_ID_PROPERTY
                value: {{.Values.global.tenantFetcher.tenantProvider.dependentServiceInstancesInfoAppIdProperty }}
              - name: APP_TENANT_PROVIDER_DEPENDENT_SERVICE_INSTANCES_INFO_APP_NAME_PROPERTY
                value: {{.Values.global.tenantFetcher.tenantProvider.dependentServiceInstancesInfoAppNameProperty }}
              - name: APP_TENANT_PROVIDER_DEPENDENT_SERVICE_INSTANCES_INFO_PROVIDER_SUBACCOUNT_ID_PROPERTY
                value: {{.Values.global.tenantFetcher.tenantProvider.dependentServiceInstancesInfoProviderSubaccountIdProperty }}
              - name: APP_DIRECT_DEPENDENCY_XSAPPNAME
                value: {{ .Values.global.externalServicesMock.directDependencyXsappname }}
              - name: APP_TENANT_CONFIG_TENANT_FETCHER_URL
                value: "https://{{ .Values.global.gateway.tls.host }}.{{ .Values.global.ingress.domainName }}"
              - name: APP_TENANT_CONFIG_ROOT_API
                value: "{{ .Values.global.tenantFetcher.prefix }}"
              - name: APP_TENANT_CONFIG_REGIONAL_HANDLER_ENDPOINT
                value: "{{ .Values.global.tenantFetcher.server.regionalHandlerEndpoint }}"
              - name: APP_TENANT_CONFIG_TENANT_PATH_PARAM
                value: "{{ .Values.global.tenantFetcher.server.tenantPathParam }}"
              - name: APP_TENANT_CONFIG_REGION_PATH_PARAM
                value: "{{ .Values.global.tenantFetcher.server.regionPathParam }}"
              - name: APP_TENANT_CONFIG_SUBSCRIPTION_PROVIDER_ID
                value: {{ .Values.global.tests.subscription.subscriptionProviderIdValue | quote }}
              - name: APP_TENANT_CONFIG_DIRECT_DEPENDENCY_SUBSCRIPTION_PROVIDER_ID
                value: {{ .Values.global.tests.subscription.directDependencySubscriptionProviderIdValue | quote }}
              - name: APP_TENANT_CONFIG_TEST_CONSUMER_ACCOUNT_ID
                value: {{ .Values.global.tests.subscription.tenants.consumerAccountID }}
              - name: APP_TENANT_CONFIG_TEST_CONSUMER_SUBACCOUNT_ID
                value: {{ .Values.global.tests.subscription.tenants.consumerSubaccountID }}
              - name: APP_TENANT_CONFIG_TEST_CONSUMER_TENANT_ID
                value: {{ .Values.global.tests.subscription.tenants.consumerTenantID }}
              - name: APP_TENANT_CONFIG_TEST_CONSUMER_ACCOUNT_ID_TENANT_HIERARCHY
                value: {{ .Values.global.tests.subscription.tenants.consumerAccountIDTenantHierarchy }}
              - name: APP_TENANT_CONFIG_TEST_CONSUMER_SUBACCOUNT_ID_TENANT_HIERARCHY
                value: {{ .Values.global.tests.subscription.tenants.consumerSubaccountIDTenantHierarchy }}
              - name: APP_TENANT_CONFIG_PROPAGATED_PROVIDER_SUBACCOUNT_HEADER
                value: {{ .Values.global.tests.subscription.propagatedProviderSubaccountHeader }}
              - name: APP_TENANT_CONFIG_SUBSCRIPTION_PROVIDER_APP_NAME_VALUE
                value: {{ .Values.global.tests.subscription.subscriptionProviderAppNameValue }}
              - name: APP_TENANT_CONFIG_TEST_TENANT_ON_DEMAND_ID
                value: {{ .Values.global.tests.tenantFetcher.tenantOnDemandID }}
              - name: APP_TENANT_CONFIG_CONSUMER_CLAIMS_TENANT_ID_KEY
                value: {{ .Values.global.hydrator.consumerClaimsKeys.tenantIDKey }}
              - name: APP_TENANT_CONFIG_CONSUMER_CLAIMS_SUBDOMAIN_KEY
                value: {{ .Values.global.hydrator.consumerClaimsKeys.subdomainKey }}
              - name: APP_TENANT_CONFIG_STANDARD_FLOW
                value: {{ .Values.global.tests.subscription.standardFlow }}
              - name: APP_TENANT_CONFIG_DIRECT_DEPENDENCY_FLOW
                value: {{ .Values.global.tests.subscription.directDependencyFlow }}
              - name: APP_TENANT_CONFIG_INDIRECT_DEPENDENCY_FLOW
                value: {{ .Values.global.tests.subscription.indirectDependencyFlow }}
              - name: APP_TENANT_CONFIG_SUBSCRIPTION_FLOW_HEADER_KEY
                value: {{ .Values.global.tests.subscription.subscriptionsFlowHeaderKey }}
              - name: APP_DESTINATION_TENANT_ENDPOINT
                value: "{{ .Values.global.destinationFetcher.prefix }}{{ .Values.global.destinationFetcher.server.tenantDestinationsEndpoint }}"
              - name: APP_DESTINATION_CERTIFICATE_TENANT_ENDPOINT
                value: "{{ .Values.global.destinationFetcher.prefix }}{{ .Values.global.destinationFetcher.server.tenantDestinationCertificatesEndpoint }}"
              - name: APP_DESTINATION_SENSITIVE_DATA_ENDPOINT
                value: "{{ .Values.global.destinationFetcher.prefix }}{{ .Values.global.destinationFetcher.server.sensitiveDataEndpoint }}"
              - name: EXTERNAL_CLIENT_CERT_TEST_SECRET_NAME
                value: {{ .Values.global.tests.subscription.externalClientCertTestSecretName }}
              - name: EXTERNAL_CLIENT_CERT_TEST_SECRET_NAMESPACE
                value: {{ .Values.global.tests.subscription.externalClientCertTestSecretNamespace }}
              - name: APP_EXTERNAL_CLIENT_CERT_KEY
                value: "{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.certKey }}"
              - name: APP_EXTERNAL_CLIENT_KEY_KEY
                value: "{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.keyKey }}"
              - name: APP_DIRECTOR_EXTERNAL_CERT_FORMATION_ASSIGNMENT_ASYNC_STATUS_URL
                value: "https://{{ .Values.global.gateway.mtls.external.host }}.{{ .Values.global.ingress.domainName }}{{ .Values.global.director.formationMappingAsyncStatusApi.pathPrefix }}{{ .Values.global.director.formationMappingAsyncStatusApi.formationAssignmentPath }}"
              - name: APP_DIRECTOR_EXTERNAL_CERT_FORMATION_ASYNC_STATUS_URL
                value: "https://{{ .Values.global.gateway.mtls.external.host }}.{{ .Values.global.ingress.domainName }}{{ .Values.global.director.formationMappingAsyncStatusApi.pathPrefix }}{{ .Values.global.director.formationMappingAsyncStatusApi.formationPath }}"
              - name: APP_FORMATION_MAPPING_ASYNC_RESPONSE_DELAY
                value: {{ .Values.global.tests.externalServicesMock.formationAsyncApi.responseDelayInSeconds  | quote}}
              - name : APP_IAS_ADAPTER_CONSUMER_APP_ID
                value: {{ .Values.global.externalServicesMock.iasAdapter.consumerAppID }}
              - name : APP_IAS_ADAPTER_CONSUMER_APP_CLIENT_ID
                value: {{ .Values.global.externalServicesMock.iasAdapter.consumerAppClientID }}
              - name : APP_IAS_ADAPTER_CONSUMER_APP_TENANT_ID
                value: {{ .Values.global.externalServicesMock.iasAdapter.consumerAppTenantID }}
              - name : APP_IAS_ADAPTER_PROVIDER_APP_ID
                value: {{ .Values.global.externalServicesMock.iasAdapter.providerAppID }}
              - name : APP_IAS_ADAPTER_PROVIDER_APP_CLIENT_ID
                value: {{ .Values.global.externalServicesMock.iasAdapter.providerAppClientID }}
              - name : APP_IAS_ADAPTER_PROVIDER_APP_TENANT_ID
                value: {{ .Values.global.externalServicesMock.iasAdapter.providerAppTenantID }}
              - name : APP_IAS_ADAPTER_PROVIDED_API_NAME
                value: {{ .Values.global.externalServicesMock.iasAdapter.apiName }}
              - name: APP_DESTINATION_CREATOR_DESTINATION_PATH
                value: "{{ .Values.global.director.destinationCreator.destinationAPI.path }}"
              - name: APP_DESTINATION_CREATOR_DESTINATION_REGION_PARAMETER
                value: "{{ .Values.global.director.destinationCreator.destinationAPI.regionParam }}"
              - name: APP_DESTINATION_CREATOR_DESTINATION_SUBACCOUNT_ID_PARAMETER
                value: "{{ .Values.global.director.destinationCreator.destinationAPI.subaccountIDParam }}"
              - name: APP_DESTINATION_CREATOR_DESTINATION_NAME_PARAMETER
                value: "{{ .Values.global.director.destinationCreator.destinationAPI.nameParam }}"
              - name: APP_DESTINATION_CREATOR_CERTIFICATE_PATH
                value: "{{ .Values.global.director.destinationCreator.certificateAPI.path }}"
              - name: APP_DESTINATION_CREATOR_CERTIFICATE_REGION_PARAMETER
                value: "{{ .Values.global.director.destinationCreator.certificateAPI.regionParam }}"
              - name: APP_DESTINATION_CREATOR_CERTIFICATE_SUBACCOUNT_ID_PARAMETER
                value: "{{ .Values.global.director.destinationCreator.certificateAPI.subaccountIDParam }}"
              - name: APP_DESTINATION_CREATOR_CERTIFICATE_NAME_PARAMETER
                value: "{{ .Values.global.director.destinationCreator.certificateAPI.nameParam }}"
              ports:
              - name: http
                containerPort: {{ .Values.deployment.port }}
                protocol: TCP
              - name: http-mtls
                containerPort: {{ .Values.global.externalServicesMock.certSecuredPort }}
                protocol: TCP
              - name: http-mtls-ord
                containerPort: {{ .Values.global.externalServicesMock.ordCertSecuredPort }}
                protocol: TCP
              - name: http-unsecured
                containerPort: {{ .Values.global.externalServicesMock.unsecuredPort }}
                protocol: TCP
              - name: http-basic
                containerPort: {{ .Values.global.externalServicesMock.basicSecuredPort }}
                protocol: TCP
              - name: http-oauth
                containerPort: {{ .Values.global.externalServicesMock.oauthSecuredPort }}
                protocol: TCP
              - name: http-ord-gr
                containerPort: {{ .Values.global.externalServicesMock.ordGlobalRegistryCertPort }}
                protocol: TCP
              - name: http-ord-uns-gr
                containerPort: {{ .Values.global.externalServicesMock.ordGlobalRegistryUnsecuredPort }}
                protocol: TCP
              - name: http-uns-contnt
                containerPort: {{ .Values.global.externalServicesMock.unsecuredPortWithAdditionalContent }}
                protocol: TCP
              resources:
                {{- toYaml .Values.deployment.resources | nindent 16 }}
              {{- with .Values.deployment.securityContext }}
              securityContext:
                {{ toYaml . | nindent 16 }}
              {{- end }}
