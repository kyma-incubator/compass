apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.deployment.minReplicas }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
  strategy:
    {{- toYaml .Values.deployment.strategy | nindent 4 }}
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: {{ .Chart.Name }}
        reqlimit: {{ .Values.global.istio.ingressgateway.requestPayloadSizeLimit2MBLabel }}
        release: {{ .Release.Name }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        app.kubernetes.io/name: {{ template "name" . }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{ if .Values.global.isLocalEnv }}
      # HostAliases are used by Pod to resolve kyma.local domain
      hostAliases:
        - ip: {{ .Values.global.minikubeIP }}
          hostnames:
            # Used for calls to Director
            - "{{ .Values.global.director.tls.secure.internal.host }}.{{ .Values.global.ingress.domainName }}"
      {{ end }}
      serviceAccountName: {{ template "fullname" . }}
      nodeSelector:
        {{- toYaml .Values.deployment.nodeSelector | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.global.images.containerRegistry.path }}/{{ .Values.global.images.connector.dir }}compass-connector:{{ .Values.global.images.connector.version }}
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          ports:
            - name: http-gql-ext
              containerPort: {{ .Values.global.connector.graphql.external.port }}
              protocol: TCP
            - name: http-validator
              containerPort: {{ .Values.global.connector.validator.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          env:
            - name: APP_EXTERNAL_ADDRESS
              value: "0.0.0.0:{{ .Values.global.connector.graphql.external.port }}"
            - name: APP_PLAYGROUND_API_ENDPOINT
              value: "{{ .Values.global.connector.prefix }}/graphql"
            - name: APP_LOG_FORMAT
              value: {{.Values.global.log.format | quote }}
            - name: APP_CERTIFICATE_VALIDITY_TIME
              value: {{ .Values.deployment.args.certificateValidityTime | quote }}
            - name: APP_CA_SECRET_NAME
              value: "{{ .Values.global.connector.secrets.ca.namespace }}/{{ .Values.global.connector.secrets.ca.name }}"
            - name: APP_CA_SECRET_CERTIFICATE_KEY
              value: {{ .Values.global.connector.secrets.ca.certificateKey | quote }}
            - name: APP_CA_SECRET_KEY_KEY
              value: {{ .Values.global.connector.secrets.ca.keyKey | quote }}
            {{ if .Values.deployment.args.attachRootCAToChain }}
            - name: APP_ROOT_CA_SECRET_NAME
              value: "{{ .Values.global.connector.secrets.rootCA.namespace }}/{{ .Values.global.connector.secrets.rootCA.cacert }}"
            - name: APP_ROOT_CA_SECRET_CERTIFICATE_KEY
              value: {{ .Values.global.connector.secrets.rootCA.certificateKey | quote }}
            {{ end }}
            - name: APP_REVOCATION_CONFIG_MAP_NAME
              value: "{{ tpl .Values.global.connector.revocation.configmap.namespace . }}/{{ .Values.global.connector.revocation.configmap.name }}"
            - name: APP_CSR_SUBJECT_COUNTRY
              value: {{ .Values.deployment.args.csrSubject.country | quote }}
            - name: APP_CSR_SUBJECT_ORGANIZATION
              value: {{ .Values.deployment.args.csrSubject.organization | quote }}
            - name: APP_CSR_SUBJECT_ORGANIZATIONAL_UNIT
              value: {{ .Values.deployment.args.csrSubject.organizationalUnit | quote }}
            - name: APP_CSR_SUBJECT_LOCALITY
              value: {{ .Values.deployment.args.csrSubject.locality | quote }}
            - name: APP_CSR_SUBJECT_PROVINCE
              value: {{ .Values.deployment.args.csrSubject.province | quote }}
            - name: APP_DIRECTOR_URL
              value: "https://{{ .Values.global.gateway.mtls.host }}.{{ .Values.global.ingress.domainName }}{{ .Values.global.director.prefix }}/graphql"
            - name: APP_CERTIFICATE_SECURED_CONNECTOR_URL
              value: "https://{{ .Values.global.gateway.mtls.host }}.{{ .Values.global.ingress.domainName }}{{ .Values.global.connector.prefix }}/graphql"
            - name: APP_KUBERNETES_CLIENT_POLL_INTERVAL
              value: {{ .Values.deployment.kubernetesClient.pollInterval | quote }}
            - name: APP_KUBERNETES_CLIENT_POLL_TIMEOUT
              value: {{ .Values.deployment.kubernetesClient.pollTimeout | quote }}
            - name: APP_ONE_TIME_TOKEN_URL
              value: "https://{{ .Values.global.director.tls.secure.internal.host }}.{{ .Values.global.ingress.domainName }}/graphql"
            - name: APP_HTTP_CLIENT_SKIP_SSL_VALIDATION
              value: "{{ .Values.http.client.skipSSLValidation }}"
          {{- with .Values.deployment.securityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
          {{- end }}
          livenessProbe:
            httpGet:
              port: {{ .Values.global.connector.graphql.external.port }}
              path: "/healthz"
            initialDelaySeconds: {{ .Values.global.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.global.livenessProbe.timeoutSeconds }}
            periodSeconds: {{.Values.global.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              port: {{ .Values.global.connector.graphql.external.port }}
              path: "/healthz"
            initialDelaySeconds: {{ .Values.global.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.global.readinessProbe.timeoutSeconds }}
            periodSeconds: {{.Values.global.readinessProbe.periodSeconds }}
