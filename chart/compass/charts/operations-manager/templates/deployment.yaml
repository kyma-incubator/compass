apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.deployment.minReplicas }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
  strategy:
    {{- toYaml .Values.deployment.strategy | nindent 4 }}
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        {{ if .Values.deployment.resourcesIstioProxy.requests.cpu }}
        sidecar.istio.io/proxyCPU: {{ .Values.deployment.resourcesIstioProxy.requests.cpu }}
        {{ end }}
        {{ if .Values.deployment.resourcesIstioProxy.requests.memory }}
        sidecar.istio.io/proxyMemory: {{ .Values.deployment.resourcesIstioProxy.requests.memory }}
        {{ end }}
        {{ if .Values.deployment.resourcesIstioProxy.limits.cpu }}
        sidecar.istio.io/proxyCPULimit: {{ .Values.deployment.resourcesIstioProxy.limits.cpu }}
        {{ end }}
        {{ if .Values.deployment.resourcesIstioProxy.limits.memory }}
        sidecar.istio.io/proxyMemoryLimit: {{ .Values.deployment.resourcesIstioProxy.limits.memory }}
        {{ end }}
      labels:
        app: {{ .Chart.Name }}
        reqlimit: {{ .Values.global.istio.ingressgateway.requestPayloadSizeLimit2MBLabel }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ template "fullname" . }}
      nodeSelector:
        {{- toYaml .Values.deployment.nodeSelector | nindent 8 }}
      {{ if eq .Values.global.portieris.isEnabled true }}
      imagePullSecrets:
        - name: {{ .Values.global.portieris.imagePullSecretName }}
      {{ end }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ $.Values.global.images.containerRegistry.path }}/{{ $.Values.global.images.director.dir }}compass-director:{{ $.Values.global.images.director.version }}
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          command:
            - "/bin/sh"
          args:
            - "-c"
            - "./operations-manager; exit_code=$?; echo '# KILLING PILOT-AGENT #'; pkill -INT cloud_sql_proxy; curl -XPOST http://127.0.0.1:15020/quitquitquit; sleep 5; exit $exit_code;"
          ports:
            - name: http
              containerPort: {{ .Values.global.operations_manager.external.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          {{- with .Values.deployment.securityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
          {{- end }}
          env:
            - name: APP_ADDRESS
              value: "0.0.0.0:{{ .Values.global.operations_manager.external.port }}"
            - name: APP_DB_USER
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-username
            - name: APP_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-password
            - name: APP_DB_HOST
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-serviceName
            - name: APP_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-servicePort
            - name: APP_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-db-name
            - name: APP_DB_SSL
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-sslMode
            - name: APP_DB_MAX_OPEN_CONNECTIONS
              value: "{{.Values.deployment.dbPool.maxOpenConnections}}"
            - name: APP_DB_MAX_IDLE_CONNECTIONS
              value: "{{.Values.deployment.dbPool.maxIdleConnections}}"
            - name: APP_HTTP_RETRY_ATTEMPTS
              value: "{{ .Values.global.ordAggregator.http.retry.attempts }}"
            - name: APP_HTTP_RETRY_DELAY
              value: "{{ .Values.global.ordAggregator.http.retry.delay }}"
            - name: APP_LOG_FORMAT
              value: {{.Values.global.log.format | quote }}
            - name: APP_CONFIGURATION_FILE
              value: /config/config.yaml
            - name: APP_SCHEMA_MIGRATION_VERSION
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.expectedSchemaVersionUpdateJob.cm.name }}
                  key: schemaVersion
            - name: APP_EXTERNAL_CLIENT_CERT_SECRET
              value: "{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.namespace }}/{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.name }}"
            - name: APP_EXTERNAL_CLIENT_CERT_KEY
              value: "{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.certKey }}"
            - name: APP_EXTERNAL_CLIENT_KEY_KEY
              value: "{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.keyKey }}"
            - name: APP_EXTERNAL_CLIENT_CERT_SECRET_NAME
              value: "{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.name }}"
            - name: APP_EXT_SVC_CLIENT_CERT_SECRET
              value: "{{ .Values.global.extSvcCertConfiguration.secrets.extSvcClientCertSecret.namespace }}/{{ .Values.global.extSvcCertConfiguration.secrets.extSvcClientCertSecret.name }}"
            - name: APP_EXT_SVC_CLIENT_CERT_KEY
              value: "{{ .Values.global.extSvcCertConfiguration.secrets.extSvcClientCertSecret.certKey }}"
            - name: APP_EXT_SVC_CLIENT_KEY_KEY
              value: "{{ .Values.global.extSvcCertConfiguration.secrets.extSvcClientCertSecret.keyKey }}"
            - name: APP_EXT_SVC_CLIENT_CERT_SECRET_NAME
              value: "{{ .Values.global.extSvcCertConfiguration.secrets.extSvcClientCertSecret.name }}"
            - name: APP_READ_REQUEST_HEADERS_TIMEOUT
              value: {{ .Values.timeouts.requestHeaders }}
            - name: APP_CLIENT_TIMEOUT
              value: {{ .Values.timeouts.client }}
            - name: APP_SELF_REGISTER_DISTINGUISH_LABEL_KEY
              value: {{ .Values.global.director.subscription.subscriptionProviderLabelKey }}
            - name: APP_ORD_WEBHOOK_MAPPINGS
              value: {{ .Values.global.director.ordWebhookMappings | quote }}
            - name: APP_DELETE_COMPLETED_OPERATIONS_OLDER_THAN_DAYS
              value: "{{.Values.global.operations_manager.job.ordDeletion.completedOpsOlderThanDays}}"
            - name: APP_DELETE_FAILED_OPERATIONS_OLDER_THAN_DAYS
              value: "{{.Values.global.operations_manager.job.ordDeletion.failedOpsOlderThanDays}}"
            - name: APP_ORD_OPERATIONS_CREATION_JOB_SCHEDULE_PERIOD
              value: {{ .Values.global.operations_manager.job.ordCreation.schedulePeriod | quote }}
            - name: APP_ORD_OPERATIONS_DELETION_JOB_SCHEDULE_PERIOD
              value: {{ .Values.global.operations_manager.job.ordDeletion.schedulePeriod | quote }}
            - name: APP_ELECTION_LEASE_LOCK_NAME
              value: {{ .Values.global.operations_manager.lease.lockname | quote }}
            - name: APP_ELECTION_LEASE_LOCK_NAMESPACE
              value: {{ .Release.Namespace }}
            - name: APP_ELECTION_ENABLED
              value: {{ .Values.global.operations_manager.election.enabled | quote}}
            - name: APP_TENANT_MAPPING_CALLBACK_URL
              value: "https://{{ .Values.global.gateway.mtls.external.host }}.{{ .Values.global.ingress.domainName }}"
            - name: APP_TENANT_MAPPING_CONFIG_PATH
              value: "{{ .Values.global.director.tenantMappingsPath}}/{{ .Values.global.director.tenantMappingsKey }}"
          livenessProbe:
            httpGet:
              port: {{ .Values.global.operations_manager.external.port }}
              path: "/healthz"
            initialDelaySeconds: {{ .Values.global.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.global.livenessProbe.timeoutSeconds }}
            periodSeconds: {{.Values.global.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              port: {{ .Values.global.operations_manager.external.port }}
              path: "/readyz"
            initialDelaySeconds: {{ .Values.global.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.global.readinessProbe.timeoutSeconds }}
            periodSeconds: {{.Values.global.readinessProbe.periodSeconds }}
          volumeMounts:
            - name: director-config
              mountPath: /config
            - name: tenant-mapping-config
              mountPath: {{ .Values.global.director.tenantMappingsPath}}
              readOnly: true
        {{if eq .Values.global.database.embedded.enabled false}}
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.23.0-alpine
          command: ["/cloud_sql_proxy",
                    "-instances={{ .Values.global.database.managedGCP.instanceConnectionName }}=tcp:5432",
                    "-term_timeout=2s"]
          resources:
          {{- toYaml .Values.deployment.resourcesCloudsqlProxy | nindent 12 }}
          {{- with .Values.deployment.securityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
          {{- end }}
          {{end}}
      volumes:
        - name: director-config
          configMap:
            name: compass-director-config
        - name: tenant-mapping-config
          configMap:
            name: compass-director-tenant-mapping-config
