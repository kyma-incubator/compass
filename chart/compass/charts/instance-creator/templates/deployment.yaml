apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.deployment.minReplicas }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
  strategy:
    {{- toYaml .Values.deployment.strategy | nindent 4 }}
  template:
    metadata:
      annotations:
        restartOnNewInstallationMarker: {{ randAlphaNum 5 | quote }} # Restarts the deployment on a new Helm installation. (https://helm.sh/docs/howto/charts_tips_and_tricks/#automatically-roll-deployments)
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        {{ if .Values.deployment.resourcesIstioProxy.requests.cpu }}
        sidecar.istio.io/proxyCPU: {{ .Values.deployment.resourcesIstioProxy.requests.cpu }}
        {{ end }}
        {{ if .Values.deployment.resourcesIstioProxy.requests.memory }}
        sidecar.istio.io/proxyMemory: {{ .Values.deployment.resourcesIstioProxy.requests.memory }}
        {{ end }}
        {{ if .Values.deployment.resourcesIstioProxy.limits.cpu }}
        sidecar.istio.io/proxyCPULimit: {{ .Values.deployment.resourcesIstioProxy.limits.cpu }}
        {{ end }}
        {{ if .Values.deployment.resourcesIstioProxy.limits.memory }}
        sidecar.istio.io/proxyMemoryLimit: {{ .Values.deployment.resourcesIstioProxy.limits.memory }}
        {{ end }}
      labels:
        app: {{ .Chart.Name }}
        reqlimit: {{ .Values.global.istio.ingressgateway.requestPayloadSizeLimit2MBLabel }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ template "fullname" . }}
      nodeSelector:
        {{- toYaml .Values.deployment.nodeSelector | nindent 8 }}
      {{ if eq .Values.global.portieris.isEnabled true }}
      imagePullSecrets:
        - name: {{ .Values.global.portieris.imagePullSecretName }}
      {{ end }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ $.Values.global.images.containerRegistry.path }}/{{ $.Values.global.images.instance_creator.dir }}compass-instance-creator:{{ $.Values.global.images.instance_creator.version }}
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.deployment.args.containerPort }}
              protocol: TCP
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          {{- with .Values.deployment.securityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
          {{- end }}
          env:
            - name: APP_API_ROOT_PATH
              value: {{ .Values.global.instanceCreator.apiRootPath }}
            - name: APP_ADDRESS
              value: "0.0.0.0:{{ .Values.deployment.args.containerPort }}"
            - name: APP_HTTP_CLIENT_SKIP_SSL_VALIDATION
              value: {{ $.Values.global.http.client.skipSSLValidation | quote }}
            - name: APP_JWKS_ENDPOINT
              value: {{ .Values.global.instanceCreator.authentication.jwksEndpoint | quote }}
            - name: APP_SM_CLIENT_TIMEOUT
              value: {{ .Values.global.instanceCreator.client.timeout }}
            - name: APP_TENANT_INFO_ENDPOINT
              value: https://{{ .Values.global.gateway.tls.host }}.{{ .Values.global.ingress.domainName }}{{ .Values.global.director.info.path }}
            - name: APP_TENANT_INFO_REQUEST_TIMEOUT
              value: {{ .Values.global.instanceCreator.tenantInfo.requestTimeout }}
            - name: APP_TENANT_INFO_INSECURE_SKIP_VERIFY
              value: {{ $.Values.global.http.client.skipSSLValidation | quote }}
            - name: APP_SM_INSTANCES_SECRET_PATH
              value: "{{ .Values.global.instanceCreator.secrets.path }}/{{ .Values.global.instanceCreator.secrets.key }}"
            - name: APP_SM_INSTANCE_CLIENT_ID_PATH
              value: {{ .Values.global.instanceCreator.clientIdPath }}
            - name: APP_SM_INSTANCE_SM_URL_PATH
              value: {{ .Values.global.instanceCreator.smUrlPath }}
            - name: APP_SM_INSTANCE_TOKEN_URL_PATH
              value: {{ .Values.global.instanceCreator.tokenURLPath }}
            - name: APP_SM_INSTANCE_APP_NAME_PATH
              value: {{ .Values.global.instanceCreator.appNamePath }}
            - name: APP_SM_INSTANCE_CERTIFICATE_PATH
              value: {{ .Values.global.instanceCreator.certificatePath }}
            - name: APP_SM_INSTANCE_CERTIFICATE_KEY_PATH
              value: {{ .Values.global.instanceCreator.certificateKeyPath }}
            - name: APP_EXTERNAL_CLIENT_CERT_SECRET_NAME
              value: "{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.name }}"
            - name: APP_SM_INSTANCE_OAUTH_TOKEN_PATH
              value: {{ .Values.global.instanceCreator.oauthTokenPath }}
          livenessProbe:
            httpGet:
              port: {{.Values.deployment.args.containerPort }}
              path: "/healthz"
            initialDelaySeconds: {{ .Values.global.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.global.livenessProbe.timeoutSeconds }}
            periodSeconds: {{.Values.global.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              port: {{.Values.deployment.args.containerPort }}
              path: "/healthz"
            initialDelaySeconds: {{ .Values.global.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.global.readinessProbe.timeoutSeconds }}
            periodSeconds: {{.Values.global.readinessProbe.periodSeconds }}
          volumeMounts:
            - name: sm-instances-secret-volume
              mountPath: {{ .Values.global.instanceCreator.secrets.path }}
              readOnly: true
      volumes:
        - name: sm-instances-secret-volume
          secret:
            secretName: {{ .Values.global.instanceCreator.secrets.name }}