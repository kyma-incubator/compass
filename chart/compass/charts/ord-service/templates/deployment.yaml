apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.deployment.minReplicas }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
  strategy:
    {{- toYaml .Values.deployment.strategy | nindent 4 }}
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        {{ if .Values.deployment.resourcesIstioProxy.requests.cpu }}
        sidecar.istio.io/proxyCPU: {{ .Values.deployment.resourcesIstioProxy.requests.cpu }}
        {{ end }}
        {{ if .Values.deployment.resourcesIstioProxy.requests.memory }}
        sidecar.istio.io/proxyMemory: {{ .Values.deployment.resourcesIstioProxy.requests.memory }}
        {{ end }}
        {{ if .Values.deployment.resourcesIstioProxy.limits.cpu }}
        sidecar.istio.io/proxyCPULimit: {{ .Values.deployment.resourcesIstioProxy.limits.cpu }}
        {{ end }}
        {{ if .Values.deployment.resourcesIstioProxy.limits.memory }}
        sidecar.istio.io/proxyMemoryLimit: {{ .Values.deployment.resourcesIstioProxy.limits.memory }}
      {{ end }}
      labels:
        app: {{ .Chart.Name }}
        reqlimit: {{ .Values.global.istio.ingressgateway.requestPayloadSizeLimit2MBLabel }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ template "fullname" . }}
      nodeSelector:
        {{- toYaml .Values.deployment.nodeSelector | nindent 8 }}
      {{ if eq .Values.global.portieris.isEnabled true }}
      imagePullSecrets:
        - name: .Values.global.portieris.imagePullSecretName
      {{ end }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.global.images.containerRegistry.path }}/{{ .Values.global.images.ord_service.dir }}compass-ord-service:{{ .Values.global.images.ord_service.version }}
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.deployment.args.containerPort }}
              protocol: TCP
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          {{- with .Values.deployment.securityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
          {{- end }}
          env:
            - name: SERVER_PORT
              value: "{{ .Values.deployment.args.containerPort }}"
            - name: SERVER_SELF_URL
              value: "https://{{ .Values.global.gateway.tls.host }}.{{ .Values.global.ingress.domainName }}"
            - name: SCHEMA_MIGRATION_VERSION
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.expectedSchemaVersionUpdateJob.cm.name }}
                  key: schemaVersion
            - name: SERVER_DEFAULT_RESPONSE_TYPE
              value: {{ .Values.global.ordService.defaultResponseType }}
            - name: ODATA_JPA_REQUEST_MAPPING_PATH
              value: {{ .Values.global.ordService.prefix | trimPrefix "/" }}
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-password
            - name: SPRING_DATASOURCE_HOST
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-serviceName
            - name: SPRING_DATASOURCE_PORT
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-servicePort
            - name: SPRING_DATASOURCE_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-db-name
            - name: SUBSCRIPTION_PROVIDER_LABEL_KEY
              value: {{ .Values.global.director.subscription.subscriptionProviderLabelKey }}
            - name: SUBSCRIPTION_TOKEN_PREFIX
              value: {{ .Values.global.director.subscription.tokenPrefix }}
          livenessProbe:
            httpGet:
              port: {{.Values.deployment.args.containerPort }}
              path: "/actuator/health/liveness"
            initialDelaySeconds: {{ .Values.deployment.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.deployment.livenessProbe.timeoutSeconds }}
            periodSeconds: {{.Values.deployment.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              port: {{.Values.deployment.args.containerPort }}
              path: "/actuator/health/readiness"
            initialDelaySeconds: {{ .Values.deployment.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.deployment.readinessProbe.timeoutSeconds }}
            periodSeconds: {{.Values.deployment.readinessProbe.periodSeconds }}
          volumeMounts:
        {{if eq .Values.global.database.embedded.enabled false}}
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.23.0-alpine
          command: ["/cloud_sql_proxy",
                    "-instances={{ .Values.global.database.managedGCP.instanceConnectionName }}=tcp:5432",
                    "-term_timeout=2s"]
          resources:
          {{- toYaml .Values.deployment.resourcesCloudsqlProxy | nindent 12 }}
          {{- with .Values.deployment.securityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
          {{- end }}
          {{end}}
