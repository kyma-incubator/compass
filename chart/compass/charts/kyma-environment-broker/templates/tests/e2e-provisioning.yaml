apiVersion: "testing.kyma-project.io/v1alpha1"
kind: TestDefinition
metadata:
  name: {{ .Chart.Name }}-e2e-provisioning
  labels:
  {{ include "kyma-env-broker.labels" . | indent 4 }}
spec:
  disableConcurrency: false
  template:
    spec:
      serviceAccountName: {{ include "kyma-env-broker.fullname" . }}-e2e-provisioning
      containers:
        - name: tests
          image: {{ .Values.global.images.containerRegistry.path }}/{{ .Values.global.images.tests.e2e_provisioning.dir }}e2e-provisioning-test:{{ .Values.global.images.tests.e2e_provisioning.version }}
          imagePullPolicy: IfNotPresent
          env:
          - name: APP_BROKER_URL
            value: 'https://{{ .Values.host }}.{{ .Values.global.ingress.domainName }}'
          - name: APP_BROKER_PROVISION_TIMEOUT
            value: "3h"
          - name: APP_BROKER_PROVISION_GCP
            value: "false"
          - name: APP_BROKER_AUTH_USERNAME
            value: "{{ .Values.broker.username }}"
          - name: APP_BROKER_AUTH_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "kyma-env-broker.fullname" . }}
                key: broker-password
          - name: APP_RUNTIME_PROVISIONER_URL
            value: "{{ .Values.provisioner.URL }}"
          - name: APP_RUNTIME_UUA_INSTANCE_NAME
            value: "uaa-issuer"
          - name: APP_RUNTIME_UUA_INSTANCE_NAMESPACE
            value: "kyma-system"
          - name: APP_TENANT_ID
            value: "3e64ebae-38b5-46a0-b1ed-9ccee153a0ae"
          command:
          - "bash"
          args:
            - "-c"
            - |
              MAX_RETRIES=60

              # copied from registration-job
              function wait_for_access_to_api_server() {
                local cnt=0
                set +o errexit
                while :
                do
                  kubectl version > /dev/null 2>&1
                  if [[ $? -eq 0 ]]; then
                    echo "Successfully accessed API Server"
                    break
                  else
                    ((cnt++))
                    if (( cnt > $MAX_RETRIES )); then
                      echo "Max retries has been reached (retries $MAX_RETRIES). Exit."
                      exit 1
                    fi

                    echo "Cannot access API Server waiting 5s..."
                    sleep 5
                  fi
                done
                set -o errexit
              }
              echo 'KEB e2e provisioning test start'
              wait_for_access_to_api_server
              echo "Run Kyma environment broker tests"
              ./test.test -test.v
              exit_code=$?
              echo "code is $exit_code"
              echo 'killing pilot-agent...'
              curl -XPOST http://127.0.0.1:15020/quitquitquit
              sleep 4
              exit $exit_code