# Required scopes for specific GraphQL operations
graphql:
  query:
    applications: ["application:read"]
    application: ["application:read"]
    applicationBySystemNumber: ["application:read"]
    applicationsForRuntime: ["application:read"]
    applicationTemplates: ["application_template:read"]
    applicationTemplate: ["application_template:read"]
    runtimes: ["runtime:read"]
    runtime: ["runtime:read"]
    labelDefinitions: ["label_definition:read"]
    labelDefinition: ["label_definition:read"]
    bundleByInstanceAuth: [ "application:read" ]
    bundleInstanceAuth: [ "application:read" ]
    healthChecks: ["health_checks:read"]
    integrationSystem: ["integration_system:read"]
    integrationSystems: ["integration_system:read"]
    viewer: []
    tenants: ["tenant:read"]
    tenantByInternalID: ["ory_internal"]
    tenantByLowestOwnerForResource: ["ory_internal"]
    automaticScenarioAssignments: ["automatic_scenario_assignment:read"]
    automaticScenarioAssignmentForScenario: ["automatic_scenario_assignment:read"]
    automaticScenarioAssignmentsForSelector: ["automatic_scenario_assignment:read"]
    formation: ["formation:read"]
    formationByName: ["formation:read"]
    formations: ["formation:read"]
    formationTemplate: [ "formation_template:read" ]
    formationTemplates: [ "formation_template:read" ]
    systemAuth: ["ory_internal"]
    systemAuthByToken: ["ory_internal"]
    formationConstraint: [ "formation_constraint:read" ]
    formationConstraints: [ "formation_constraint:read" ]
    formationConstraintsByFormationType: [ "formation_constraint:read" ]
    certificateSubjectMapping: ["certificate_subject_mapping:read"]
    certificateSubjectMappings: ["certificate_subject_mapping:read"]

  mutation:
    registerApplication: ["application:write"]
    registerApplicationFromTemplate: ["application:write"]
    updateApplication: ["application:write"]
    unregisterApplication: ["application:write"]
    unpairApplication: ["application:write"]
    mergeApplications: ["application:write"]
    createApplicationTemplate: ["application_template:write"]
    updateApplicationTemplate: ["application_template:write"]
    deleteApplicationTemplate: ["application_template:write"]
    registerRuntime: ["runtime:write"]
    updateRuntime: ["runtime:write"]
    unregisterRuntime: ["runtime:write"]
    registerRuntimeContext: [ "runtime:write" ]
    updateRuntimeContext: [ "runtime:write" ]
    unregisterRuntimeContext: [ "runtime:write" ]
    setRuntimeTenant: [ "tenant:write" ]
    registerIntegrationSystem: ["integration_system:write"]
    updateIntegrationSystem: ["integration_system:write"]
    unregisterIntegrationSystem: ["integration_system:write"]
    addWebhook: ["webhook:write"]
    updateWebhook: ["webhook:write"]
    deleteWebhook: ["webhook:write"]
    addAPIDefinitionToBundle: ["application:write"]
    updateAPIDefinition: ["application:write"]
    deleteAPIDefinition: ["application:write"]
    refetchAPISpec: ["application:write"]
    addEventDefinitionToBundle: ["application:write"]
    updateEventDefinition: ["application:write"]
    deleteEventDefinition: ["application:write"]
    refetchEventAPISpec: ["application:write"]
    addDocumentToBundle: ["application:write"]
    deleteDocument: ["application:write"]
    createFormation: ["formation:write"]
    deleteFormation: ["formation:write"]
    assignFormation: [ "formation:write" ]
    unassignFormation: [ "formation:write" ]
    resynchronizeFormationNotifications: [ "formation:write" ]
    createLabelDefinition: ["label_definition:write"]
    updateLabelDefinition: ["label_definition:write"]
    setApplicationLabel: ["application:write"]
    deleteApplicationLabel: ["application:write"]
    setRuntimeLabel: ["runtime:write"]
    deleteRuntimeLabel: ["runtime:write"]
    requestOneTimeTokenForRuntime: ["runtime:write"]
    requestOneTimeTokenForApplication: ["application:write"]
    requestClientCredentialsForRuntime: ["runtime:write"]
    requestClientCredentialsForApplication: ["application:write"]
    requestClientCredentialsForIntegrationSystem: ["integration_system:write"]
    deleteSystemAuthForRuntime: ["runtime:write"]
    deleteSystemAuthForApplication: ["application:write"]
    deleteSystemAuthForIntegrationSystem: ["integration_system:write"]
    setDefaultEventingForApplication: ["eventing:manage"]
    deleteDefaultEventingForApplication: ["eventing:manage"]
    requestBundleInstanceAuthCreation: ["runtime:write"]
    requestBundleInstanceAuthDeletion: ["runtime:write"]
    setBundleInstanceAuth: ["application:write"]
    deleteBundleInstanceAuth: ["application:write"]
    addBundle: ["application:write"]
    updateBundle: ["application:write"]
    deleteBundle: ["application:write"]
    writeTenants: ["tenant:write"]
    deleteTenants: ["tenant:write"]
    updateTenant: ["tenant:write"]
    subscribeTenant: ["tenant_subscription:write"]
    unsubscribeTenant: ["tenant_subscription:write"]
    updateSystemAuth: [ "ory_internal" ]
    invalidateSystemAuthOneTimeToken: [ "ory_internal" ]
    createFormationTemplate: [ "formation_template:write" ]
    deleteFormationTemplate: [ "formation_template:write" ]
    updateFormationTemplate: [ "formation_template:write" ]
    createFormationConstraint: [ "formation_constraint:write" ]
    updateFormationConstraint: [ "formation_constraint:write" ]
    deleteFormationConstraint: [ "formation_constraint:write" ]
    attachConstraintToFormationTemplate: [ "formation_constraint:write" ]
    detachConstraintFromFormationTemplate: [ "formation_constraint:write" ]
    createCertificateSubjectMapping: ["certificate_subject_mapping:write"]
    updateCertificateSubjectMapping: ["certificate_subject_mapping:write"]
    deleteCertificateSubjectMapping: ["certificate_subject_mapping:write"]
    addTenantAccess: ["tenant_access:write"]
    removeTenantAccess: ["tenant_access:write"]

  field:
    fetch_request:
      auth: ["fetch-request.auth:read"]
    webhooks:
      auth: ["webhooks.auth:read"]
    application:
      auths: ["application.auths:read"]
      webhooks: ["application.webhooks:read"]
      application_template: [ "application.application_template:read" ]
    application_template:
      webhooks: ["application_template.webhooks:read"]
    bundle:
      instance_auth: ["bundle.instance_auths:read"]
      instance_auths: ["bundle.instance_auths:read"]
      default_instance_auth: ["bundle.instance_auths:read"]
    document:
      fetch_request: ["document.fetch_request:read"]
    event_spec:
      fetch_request: ["event_spec.fetch_request:read"]
    api_spec:
      fetch_request: ["api_spec.fetch_request:read"]
    runtime:
      auths: ["runtime.auths:read"]
      webhooks: ["runtime.webhooks:read"]
    formation_template:
      webhooks: ["formation_template.webhooks:read"]
    integration_system:
      auths: ["integration_system.auths:read"]

  input:
    application:
      localTenantID: [ "application.local_tenant_id:write" ]
    formation:
      state: [ "formation.state:write" ]

clientCredentialsRegistrationGrantTypes:
  - "client_credentials"
