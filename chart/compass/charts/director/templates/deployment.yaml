apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.deployment.minReplicas }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
  strategy:
    {{- toYaml .Values.deployment.strategy | nindent 4 }}
  template:
    metadata:
      annotations:
        restartOnNewInstallationMarker: {{ randAlphaNum 5 | quote }} # Restarts the deployment on a new Helm installation. (https://helm.sh/docs/howto/charts_tips_and_tricks/#automatically-roll-deployments)
        {{ if .Values.deployment.resourcesIstioProxy.requests.cpu }}
        sidecar.istio.io/proxyCPU: {{ .Values.deployment.resourcesIstioProxy.requests.cpu }}
        {{ end }}
        {{ if .Values.deployment.resourcesIstioProxy.requests.memory }}
        sidecar.istio.io/proxyMemory: {{ .Values.deployment.resourcesIstioProxy.requests.memory }}
        {{ end }}
        {{ if .Values.deployment.resourcesIstioProxy.limits.cpu }}
        sidecar.istio.io/proxyCPULimit: {{ .Values.deployment.resourcesIstioProxy.limits.cpu }}
        {{ end }}
        {{ if .Values.deployment.resourcesIstioProxy.limits.memory }}
        sidecar.istio.io/proxyMemoryLimit: {{ .Values.deployment.resourcesIstioProxy.limits.memory }}
        {{ end }}
      labels:
        app: {{ .Chart.Name }}
        reqlimit: {{ .Values.global.istio.ingressgateway.requestPayloadSizeLimit2MBLabel }}
        release: {{ .Release.Name }}
    spec:
      {{ if .Values.global.isLocalEnv }}
      hostAliases:
        - ip: {{ .Values.global.minikubeIP }}
          hostnames:
            - "{{ .Values.global.externalServicesMock.certSecuredHost }}.{{ .Values.global.ingress.domainName }}"
      {{ end }}
      serviceAccountName: {{ template "fullname" . }}
      nodeSelector:
        {{- toYaml .Values.deployment.nodeSelector | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ $.Values.global.images.containerRegistry.path }}/{{ $.Values.global.images.director.dir }}compass-director:{{ $.Values.global.images.director.version }}
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.global.director.graphql.external.port }}
              protocol: TCP
            - name: http-validator
              containerPort: {{ .Values.global.director.validator.port }}
              protocol: TCP
            - name: http-internal
              containerPort: {{ .Values.global.director.operations.port }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.global.director.metrics.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          {{- with .Values.deployment.securityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
          {{- end }}
          env:
            - name: APP_ADDRESS
              value: "0.0.0.0:{{ .Values.global.director.graphql.external.port }}"
            - name: APP_HYDRATOR_ADDRESS
              value: "0.0.0.0:{{ .Values.global.director.validator.port }}"
            - name: APP_INTERNAL_ADDRESS
              value: "0.0.0.0:{{ .Values.global.director.operations.port }}"
            - name: APP_METRICS_ADDRESS
              value: "0.0.0.0:{{ .Values.global.director.metrics.port }}"
            - name: APP_METRICS_ENABLE_CLIENT_ID_INSTRUMENTATION
              value: "{{ .Values.global.director.metrics.enableClientInstrumentation }}"
            - name: APP_METRICS_ENABLE_GRAPHQL_QUERY_INSTRUMENTATION
              value: "{{ .Values.global.director.metrics.enableGraphqlQueryInstrumentation }}"
            - name: APP_METRICS_CENSORED_FLOWS
              value: "{{ .Values.global.director.metrics.censoredFlows }}"
            - name: APP_PLAYGROUND_API_ENDPOINT
              value: "{{ .Values.global.director.prefix }}/graphql"
            - name: APP_JWKS_ENDPOINT
              value: http://ory-oathkeeper-api.kyma-system.svc.cluster.local:4456/.well-known/jwks.json
            - name: APP_DB_USER
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-username
            - name: APP_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-password
            - name: APP_DB_HOST
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-serviceName
            - name: APP_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-servicePort
            - name: APP_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-db-name
            - name: APP_DB_SSL
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-sslMode
            - name: APP_DB_MAX_OPEN_CONNECTIONS
              value: "{{.Values.deployment.dbPool.maxOpenConnections}}"
            - name: APP_DB_MAX_IDLE_CONNECTIONS
              value: "{{.Values.deployment.dbPool.maxIdleConnections}}"
            - name: APP_ONE_TIME_TOKEN_LENGTH
              value: {{ .Values.deployment.args.token.length | quote }}
            - name: APP_ONE_TIME_TOKEN_RUNTIME_EXPIRATION
              value: {{ .Values.deployment.args.token.runtimeExpiration | quote }}
            - name: APP_ONE_TIME_TOKEN_APPLICATION_EXPIRATION
              value: {{ .Values.deployment.args.token.applicationExpiration | quote }}
            - name: APP_ONE_TIME_TOKEN_CSR_EXPIRATION
              value: {{ .Values.deployment.args.token.csrExpiration | quote }}
            - name: APP_URL
              value: "https://{{ .Values.global.gateway.tls.host }}.{{ .Values.global.ingress.domainName }}{{ .Values.global.director.prefix }}"
            - name: APP_LOG_FORMAT
              value: {{.Values.global.log.format | quote }}
            - name: APP_OPERATION_PATH
              value: {{ .Values.global.director.operations.path }}
            - name: APP_LAST_OPERATION_PATH
              value: {{ .Values.global.director.operations.lastOperationPath }}
            - name: APP_CONNECTOR_URL
              value: "https://{{ .Values.global.gateway.tls.host }}.{{ .Values.global.ingress.domainName }}{{ .Values.global.connector.prefix }}/graphql"
            - name: APP_CONFIGURATION_FILE
              value: /config/config.yaml
            - name: APP_CLIENT_ID_HTTP_HEADER
              value: {{ .Values.global.director.clientIDHeaderKey }}
            - name: APP_OAUTH20_URL
              value: http://ory-hydra-admin.kyma-system.svc.cluster.local:4445
            - name: APP_OAUTH20_PUBLIC_ACCESS_TOKEN_ENDPOINT
              value: "https://oauth2.{{ .Values.global.ingress.domainName }}/oauth2/token"
            - name: APP_LEGACY_CONNECTOR_URL
              value: "https://{{ .Values.global.connectivity_adapter.tls.host }}.{{ .Values.global.ingress.domainName }}/v1/applications/signingRequests/info"
            - name: APP_SUGGEST_TOKEN_HTTP_HEADER
              value: {{ .Values.global.director.suggestTokenHeaderKey }}
            - name: APP_INFO_API_ENDPOINT
              value: {{ .Values.global.director.info.path }}
            - name: APP_INFO_CERT_SUBJECT
              value: {{ printf .Values.global.externalCertConfiguration.subjectPattern .Values.global.externalCertConfiguration.ouCertSubaccountID .Values.global.externalCertConfiguration.locality .Values.global.externalCertConfiguration.commonName | trimPrefix "/" | replace "/" ", " | quote }}
            - name: APP_INFO_CERT_ISSUER
              value: {{ .Values.global.externalCertConfiguration.issuer }}
            - name: APP_INFO_ROOT_CA
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.gateway.mtls.external.certSecret }}-cacert
                  key: cacert
            {{- if .Values.deployment.pairingAdapterConfigMap }}
            - name: APP_PAIRING_ADAPTER_SRC
              value: /pairing-adapters/config.json
            {{- end }}
            - name: APP_DEFAULT_SCENARIO_ENABLED
              value: {{ .Values.global.enableCompassDefaultScenarioAssignment | quote }}
            {{- range $authenMappingServiceName, $config := .Values.global.oathkeeper.mutators.authenticationMappingServices }}
            {{- if eq $config.authenticator.enabled true }}
            - name: APP_{{ $authenMappingServiceName }}_AUTHENTICATOR_TRUSTED_ISSUERS
              value: {{ $config.authenticator.trusted_issuers | quote }}
            - name: APP_{{ $authenMappingServiceName }}_AUTHENTICATOR_ATTRIBUTES
              value: {{ $config.authenticator.attributes | quote }}
            - name: APP_{{ $authenMappingServiceName }}_AUTHENTICATOR_CHECK_CLIENT_ID_SUFFIX
              value: {{ $config.authenticator.checkSuffix | quote }}
            {{- end }}
            {{- end }}
            - name: APP_HEALTH_CONFIG_INDICATORS
              value: {{ .Values.health.indicators | quote }}
            - name: APP_SCHEMA_MIGRATION_VERSION
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.expectedSchemaVersionUpdateJob.cm.name }}
                  key: schemaVersion
            - name: APP_DATALOADER_MAX_BATCH
              value: {{ .Values.deployment.dataloaders.maxBatch | quote }}
            - name: APP_DATALOADER_WAIT
              value: {{ .Values.deployment.dataloaders.wait | quote }}
            - name: APP_SUBSCRIPTION_PROVIDER_LABEL_KEY
              value: {{ .Values.global.tenantFetcher.server.subscriptionProviderLabelKey }}
            - name: APP_CONSUMER_SUBACCOUNT_IDS_LABEL_KEY
              value: {{ .Values.global.tenantFetcher.server.consumerSubaccountIdsLabelKey }}
            - name: APP_SELF_REGISTER_INSTANCE_CLIENT_ID_PATH
              value: {{ .Values.global.director.selfRegister.clientIdPath }}
            - name: APP_SELF_REGISTER_INSTANCE_CLIENT_SECRET_PATH
              value: {{ .Values.global.director.selfRegister.clientSecretPath }}
            - name: APP_SELF_REGISTER_INSTANCE_URL_PATH
              value: {{ .Values.global.director.selfRegister.urlPath }}
            - name: APP_SELF_REGISTER_INSTANCE_TOKEN_URL_PATH
              value: {{ .Values.global.director.selfRegister.tokenUrlPath }}
            - name: APP_SELF_REGISTER_INSTANCE_X509_CERT_PATH
              value: {{ .Values.global.director.selfRegister.clientCertPath }}
            - name: APP_SELF_REGISTER_INSTANCE_X509_KEY_PATH
              value: {{ .Values.global.director.selfRegister.clientKeyPath }}
            - name: APP_SELF_REGISTER_OAUTH_TOKEN_PATH
              value: {{ .Values.global.director.selfRegister.oauthTokenPath }}
            - name: APP_SELF_REGISTER_DISTINGUISH_LABEL_KEY # This variable get its value from tenant fetcher configuration(in tests charts too) because we need "self register" flow to be executed as part of the consumer-provider test, locally and on real environment as well
              value: {{ .Values.global.tenantFetcher.server.subscriptionProviderLabelKey }}
            - name: APP_SELF_REGISTER_LABEL_KEY
              value: {{ .Values.global.director.selfRegister.label }}
            - name: APP_SELF_REGISTER_LABEL_KEY_PATTERN
              value: "^{{ .Values.global.director.selfRegister.label }}$"
            - name: APP_SELF_REGISTER_LABEL_VALUE_PREFIX
              value: {{ .Values.global.director.selfRegister.labelValuePrefix }}
            - name: APP_SELF_REGISTER_RESPONSE_KEY
              value: {{ .Values.global.director.selfRegister.responseKey }}
            - name: APP_SELF_REGISTER_PATH
              value: {{ .Values.global.director.selfRegister.path }}
            - name: APP_SELF_REGISTER_NAME_QUERY_PARAM
              value: {{ .Values.global.director.selfRegister.nameQueryParam }}
            - name: APP_SELF_REGISTER_TENANT_QUERY_PARAM
              value: {{ .Values.global.director.selfRegister.tenantQueryParam }}
            - name: APP_SELF_REGISTER_REQUEST_BODY_PATTERN
              value: {{ .Values.global.director.selfRegister.requestBodyPattern | quote }}
            - name: APP_SELF_REGISTER_SECRET_PATH
              value: "{{ .Values.global.director.selfRegister.secret.path }}/{{ .Values.global.director.selfRegister.secret.key }}"
            - name: APP_SELF_REGISTER_SKIP_SSL_VALIDATION
              value: "{{ .Values.global.http.client.skipSSLValidation }}"
            - name: APP_SELF_REGISTER_OAUTH_MODE
              value: {{ .Values.global.director.selfRegister.oauthMode }}
            - name: APP_EXTERNAL_CLIENT_CERT_SECRET
              value: "{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.namespace }}/{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.name }}"
            - name: APP_EXTERNAL_CLIENT_CERT_KEY
              value: "{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.certKey }}"
            - name: APP_EXTERNAL_CLIENT_KEY_KEY
              value: "{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.keyKey }}"
          livenessProbe:
            httpGet:
              port: {{ .Values.global.director.graphql.external.port }}
              path: "/livez"
            initialDelaySeconds: {{ .Values.global.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.global.livenessProbe.timeoutSeconds }}
            periodSeconds: {{.Values.global.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              port: {{ .Values.global.director.graphql.external.port }}
              path: "/readyz"
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            periodSeconds: {{.Values.readinessProbe.periodSeconds }}
          volumeMounts:
            - name: self-reg-secret-volume
              mountPath: {{ .Values.global.director.selfRegister.secret.path }}
              readOnly: true
            - mountPath: /config
              name: director-config
            - mountPath: /data/static-groups.yaml
              name: static-groups
              subPath: static-groups.yaml
            {{ if .Values.deployment.pairingAdapterConfigMap }}
            - name: pairing-adapters-config
              mountPath: /pairing-adapters
            {{ end }}

        {{if eq .Values.global.database.embedded.enabled false}}
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.23.0-alpine
          command: ["/cloud_sql_proxy",
                    "-instances={{ .Values.global.database.managedGCP.instanceConnectionName }}=tcp:5432",
                    "-term_timeout=2s"]
          resources:
          {{- toYaml .Values.deployment.resourcesCloudsqlProxy | nindent 12 }}
          {{- with .Values.deployment.securityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
          {{- end }}
          {{end}}
      volumes:
        - name: self-reg-secret-volume
          secret:
            secretName: {{ .Values.global.director.selfRegister.secret.name }}
        - name: director-config
          configMap:
            name: {{ template "fullname" . }}-config
        - name: static-groups
          configMap:
            name: {{ template "fullname" . }}-static-groups
        {{ if .Values.deployment.pairingAdapterConfigMap }}
        - name: pairing-adapters-config
          configMap:
            name: {{ .Values.deployment.pairingAdapterConfigMap }}
        {{ end }}
