apiVersion: batch/v1
kind: CronJob
metadata:
  name: "{{ $.Chart.Name }}-external-certificate-rotation-job"
  namespace: {{ $.Release.Namespace }}
spec:
  schedule: "{{ .Values.global.externalCertConfiguration.rotationCronjob.schedule }}"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 5
  failedJobsHistoryLimit: 5
  startingDeadlineSeconds: 60
  jobTemplate:
    metadata:
      labels:
        cronjob: {{ .Values.global.externalCertConfiguration.rotationCronjob.name }}
    spec:
      template:
        metadata:
          labels:
            cronjob: {{ .Values.global.externalCertConfiguration.rotationCronjob.name }}
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        spec:
          serviceAccountName: {{ $.Chart.Name }}-{{ .Values.global.externalCertConfiguration.rotationCronjob.name }}
          restartPolicy: Never
          containers:
            - name: {{ .Values.global.externalCertConfiguration.rotationCronjob.containerName }}
              image: bitnami/kubectl:1.22.4
              imagePullPolicy: IfNotPresent
              command:
                - bash
                - -c
                - |
{{ .Files.Get "files/certificate_rotation.sh" | printf "%s" | indent 18 }}
              env:
                - name: EXT_NOT_EXTERNAL
                  value: 'false'
                - name: CERT_SVC_CSR_ENDPOINT
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.global.externalCertConfiguration.secrets.externalCertSvcSecret.name }}
                      key: {{ .Values.global.externalCertConfiguration.secrets.externalCertSvcSecret.csrEndpointKey }}
                - name: CERT_SVC_API_PATH
                  value: {{ .Values.global.externalCertConfiguration.certSvcApiPath }}
                - name: CERT_SUBJECT_PATTERN
                  value: {{ printf .Values.global.externalCertConfiguration.subjectPattern .Values.global.externalCertConfiguration.ouCertSubaccountID .Values.global.externalCertConfiguration.locality .Values.global.externalCertConfiguration.commonName }}
                - name: EXPECTED_ISSUER_LOCALITY
                  value: {{ .Values.global.externalCertConfiguration.issuerLocality }}
                - name: CERT_VALIDITY
                  value: {{ .Values.global.externalCertConfiguration.rotationCronjob.certValidity | quote }}
                - name: CLIENT_CERT_RETRY_ATTEMPTS
                  value: {{ .Values.global.externalCertConfiguration.rotationCronjob.clientCertRetryAttempts | quote }}
                - name: CLIENT_CERT_SECRET_NAME
                  value: {{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.name }}
                - name: CLIENT_CERT_CERT_KEY
                  value:  {{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.certKey }}
                - name: CLIENT_CERT_KEY_KEY
                  value:  {{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.keyKey }}
                - name: CERT_SVC_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.global.externalCertConfiguration.secrets.externalCertSvcSecret.name }}
                      key: {{ .Values.global.externalCertConfiguration.secrets.externalCertSvcSecret.clientIdKey }}
                - name: CERT_SVC_OAUTH_URL
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.global.externalCertConfiguration.secrets.externalCertSvcSecret.name }}
                      key: {{ .Values.global.externalCertConfiguration.secrets.externalCertSvcSecret.oauthUrlKey }}
                - name: CERT_SVC_TOKEN_PATH
                  value: {{ .Values.global.externalCertConfiguration.tokenPath }}
                - name: CERT_SVC_OAUTH_CLIENT_CERT
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.global.externalCertConfiguration.secrets.externalCertSvcSecret.name }}
                      key: {{ .Values.global.externalCertConfiguration.secrets.externalCertSvcSecret.clientCert }}
                - name: CERT_SVC_OAUTH_CLIENT_KEY
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.global.externalCertConfiguration.secrets.externalCertSvcSecret.name }}
                      key: {{ .Values.global.externalCertConfiguration.secrets.externalCertSvcSecret.clientKey }}
                - name: SKIP_SSL_VALIDATION_FLAG
                  value: {{ .Values.global.externalCertConfiguration.secrets.externalCertSvcSecret.skipSSLValidationFlag }}

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $.Chart.Name }}-{{ .Values.global.externalCertConfiguration.rotationCronjob.name }}
  namespace: {{ $.Release.Namespace }}
  labels:
    app: {{ $.Chart.Name }}
    release: {{ $.Release.Name }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "name" . }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ $.Chart.Name }}-{{ .Values.global.externalCertConfiguration.rotationCronjob.name }}
  namespace: {{ $.Release.Namespace }}
  labels:
    app: {{ $.Chart.Name }}
    release: {{ $.Release.Name }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "name" . }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
rules:
  - apiGroups: ["*"]
    resources: ["secrets"]
    verbs: ["get", "create", "update", "patch"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ $.Chart.Name }}-{{ .Values.global.externalCertConfiguration.rotationCronjob.name }}
  namespace: {{ $.Release.Namespace }}
  labels:
    app: {{ $.Chart.Name }}
    release: {{ $.Release.Name }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "name" . }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
subjects:
  - kind: ServiceAccount
    name: {{ $.Chart.Name }}-{{ .Values.global.externalCertConfiguration.rotationCronjob.name }}
    namespace: {{ $.Release.Namespace }}
roleRef:
  kind: Role
  name: {{ $.Chart.Name }}-{{ .Values.global.externalCertConfiguration.rotationCronjob.name }}
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: director-{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.name }}
  namespace: {{ $.Release.Namespace }}
  labels:
    app: {{ $.Chart.Name }}
    release: {{ $.Release.Name }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "name" . }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
rules:
  - apiGroups: ["*"]
    resources: ["secrets"]
    resourceNames: ["{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.name }}"]
    verbs: ["watch"]
