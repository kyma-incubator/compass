{{- if eq .Values.global.tenantConfig.useDefaultTenants true }}
apiVersion: batch/v1
kind: Job
metadata:
    name: {{ template "fullname" . }}-tenant-loader-default
    labels:
        app: {{ .Chart.Name }}-tenant-loader
        release: {{ .Release.Name }}
    annotations:
        "helm.sh/hook": post-install, post-upgrade
        "helm.sh/hook-weight": "1"
        "helm.sh/hook-delete-policy": before-hook-creation
spec:
    template:
        metadata:
            labels:
                app: {{ .Chart.Name }}-tenant-loader
                release: {{ .Release.Name }}
            annotations:
                cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        spec:
            serviceAccountName: {{ template "fullname" . }}
            restartPolicy: Never
            shareProcessNamespace: true
          {{ if eq .Values.global.portieris.isEnabled true }}
            imagePullSecrets:
            - name: {{ .Values.global.portieris.imagePullSecretName }}
          {{ end }}
            containers:
                - name: loader
                  image: {{ $.Values.global.images.containerRegistry.path }}/{{ $.Values.global.images.director.dir }}compass-director:latest
                  imagePullPolicy: Always
                  env:
                      - name: APP_DB_USER
                        valueFrom:
                            secretKeyRef:
                                name: compass-postgresql
                                key: postgresql-director-username
                      - name: APP_DB_PASSWORD
                        valueFrom:
                            secretKeyRef:
                                name: compass-postgresql
                                key: postgresql-director-password
                      - name: APP_DB_HOST
                        valueFrom:
                            secretKeyRef:
                                name: compass-postgresql
                                key: postgresql-serviceName
                      - name: APP_DB_PORT
                        valueFrom:
                            secretKeyRef:
                                name: compass-postgresql
                                key: postgresql-servicePort
                      - name: APP_DB_NAME
                        valueFrom:
                            secretKeyRef:
                                name: compass-postgresql
                                key: postgresql-director-db-name
                      - name: APP_DB_SSL
                        valueFrom:
                            secretKeyRef:
                                name: compass-postgresql
                                key: postgresql-sslMode
                      - name: APP_DB_MAX_OPEN_CONNECTIONS
                        value: "{{.Values.global.tenantConfig.dbPool.maxOpenConnections}}"
                      - name: APP_DB_MAX_IDLE_CONNECTIONS
                        value: "{{.Values.global.tenantConfig.dbPool.maxIdleConnections}}"
                      - name: APP_LOG_FORMAT
                        value: {{ .Values.global.log.format | quote }}
                      - name: APP_DEFAULT_TENANT_REGION
                        value: {{ .Values.global.defaultTenantRegion }}
                      - name: APP_TENANT_LABELS_PATH
                        value: {{ .Values.global.tenantLabelsFilePath }}
                  volumeMounts:
                    - name: default-tenant-config
                      mountPath: /data/default-tenants.json
                      subPath: tenants.json
                    - name: default-tenant-labels-config
                      mountPath: {{ .Values.global.tenantLabelsFilePath }}
                      subPath: tenantLabels.json
                  command:
                    - "/bin/sh"
                  args:
                    - "-c"
                    - "./tenantloader; exit_code=$?; sleep 5; echo '# KILLING PILOT-AGENT #'; pkill -INT cloud_sql_proxy; curl -XPOST http://127.0.0.1:15020/quitquitquit; sleep 5; exit $exit_code;"
              {{if eq .Values.global.database.embedded.enabled false}}
                - name: cloudsql-proxy
                  image: gcr.io/cloudsql-docker/gce-proxy:1.23.0-alpine
                  command:
                    - /bin/sh
                  args:
                    - -c
                    - "trap 'exit 0' SIGINT; echo 'Waiting for istio-proxy to start...' && sleep 15; /cloud_sql_proxy -instances={{ .Values.global.database.managedGCP.instanceConnectionName }}=tcp:5432 -term_timeout=2s"
              {{end}}
            volumes:
              - name: default-tenant-config
                configMap:
                  name: {{ template "fullname" . }}-default-tenant-config
              - name: default-tenant-labels-config
                configMap:
                  name: {{ template "fullname" . }}-default-tenant-labels-config
  {{ end }}
