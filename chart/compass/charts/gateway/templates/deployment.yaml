apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.deployment.minReplicas }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
  strategy:
    {{- toYaml .Values.deployment.strategy | nindent 4 }}
  template:
    metadata:
      annotations:
        restartOnNewInstallationMarker: {{ randAlphaNum 5 | quote }} # Restarts the deployment on a new Helm installation. (https://helm.sh/docs/howto/charts_tips_and_tricks/#automatically-roll-deployments)
      labels:
        app: {{ .Chart.Name }}
        reqlimit: {{ .Values.global.istio.ingressgateway.requestPayloadSizeLimit5MBLabel }}
        release: {{ .Release.Name }}
    spec:
      {{ if $.Values.global.isLocalEnv }}
      # HostAliases are used by Pod to resolve kyma.local domain
      hostAliases:
        - ip: {{ $.Values.global.minikubeIP }}
          hostnames:
            - "{{ $.Values.global.externalServicesMock.certSecuredHost }}.{{ $.Values.global.ingress.domainName }}"
            - "{{ $.Values.global.externalServicesMock.ordGlobalCertSecuredHost }}.{{ $.Values.global.ingress.domainName }}"
      {{ end }}
      nodeSelector:
        {{- toYaml .Values.deployment.nodeSelector | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.global.images.containerRegistry.path }}/{{ .Values.global.images.gateway.dir }}compass-gateway:{{ .Values.global.images.gateway.version }}
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.global.gateway.port }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          env:
            - name: APP_ADDRESS
              value: "0.0.0.0:{{ .Values.global.gateway.port }}"
            - name: APP_DIRECTOR_ORIGIN
              value: "http://compass-director.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.global.director.graphql.external.port }}"
            - name: APP_NSADAPTER_ORIGIN
              value: "http://compass-ns-adapter.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.global.nsAdapter.external.port }}"
            - name: APP_METRICS_ADDRESS
              value: "0.0.0.0:{{ .Values.metrics.port }}"
            - name: APP_CONNECTOR_ORIGIN
              value: "http://compass-connector.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.global.connector.graphql.external.port }}"
            - name: APP_LOG_FORMAT
              value: {{.Values.global.log.format | quote }}
            - name: APP_AUDITLOG_ENABLED
              value: "{{ .Values.gateway.auditlog.enabled }}"
            - name: APP_AUDIT_LOG_MSG_BODY_SIZE_LIMIT
              value: "{{ .Values.auditLog.maxBodySizeBytes }}"
            - name: APP_METRICS_SERVER_TIMEOUT
              value: {{ .Values.timeouts.metricsServer }}
            - name: APP_NS_ADAPTER_TIMEOUT
              value: {{ .Values.timeouts.nsAdapter }}
            - name: APP_DEFAULT_HANDLERS_TIMEOUT
              value: {{ .Values.timeouts.handlers }}
            - name: APP_READ_REQUEST_HEADERS_TIMEOUT
              value: {{ .Values.timeouts.requestHeaders }}
            {{ if .Values.gateway.auditlog.enabled }}
            {{ if eq .Values.gateway.auditlog.authMode "basic"}}
            - name: APP_AUDITLOG_AUTH_MODE
              value: "basic"
            - name: APP_AUDITLOG_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.auditlog.secret.name }}
                  key: auditlog-user
            - name: APP_AUDITLOG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.auditlog.secret.name }}
                  key: auditlog-password
            - name: APP_AUDITLOG_TENANT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.auditlog.configMapName }}
                  key: auditlog-tenant
            {{ else if eq .Values.gateway.auditlog.authMode "oauth" }}
            - name: APP_AUDITLOG_AUTH_MODE
              value: "oauth"
            - name: APP_AUDITLOG_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.auditlog.secret.name }}
                  key: {{ .Values.global.auditlog.secret.clientIdKey }}
            - name: APP_AUDITLOG_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.auditlog.secret.name }}
                  key: {{ .Values.global.auditlog.secret.clientSecretKey }}
            - name: APP_AUDITLOG_OAUTH_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.auditlog.secret.name }}
                  key: {{ .Values.global.auditlog.secret.urlKey }}
            - name: APP_AUDITLOG_TOKEN_PATH
              value: {{ .Values.global.auditlog.standardTokenPath }}
            - name: APP_AUDITLOG_OAUTH_USER
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.auditlog.configMapName }}
                  key: auditlog-oauth-user-var
                  optional: true
            - name: APP_AUDITLOG_OAUTH_TENANT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.auditlog.configMapName }}
                  key: auditlog-oauth-tenant-var
                  optional: true
            {{ else if eq .Values.gateway.auditlog.authMode "oauth-mtls" }}
            - name: APP_AUDITLOG_AUTH_MODE
              value: "oauth-mtls"
            - name: APP_AUDITLOG_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.auditlog.secret.name }}
                  key: {{ .Values.global.auditlog.secret.clientIdKey }}
            - name: APP_AUDITLOG_SKIP_SSL_VALIDATION
              value: "{{ .Values.global.auditlog.skipSSLValidation }}"
            - name: APP_AUDITLOG_X509_CERT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.auditlog.secret.name }}
                  key: {{ .Values.global.auditlog.secret.clientCertKey }}
            - name: APP_AUDITLOG_X509_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.auditlog.secret.name }}
                  key: {{ .Values.global.auditlog.secret.clientKeyKey }}
            - name: APP_AUDITLOG_OAUTH_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.auditlog.secret.name }}
                  key: {{ .Values.global.auditlog.secret.urlKey }}
            - name: APP_AUDITLOG_TOKEN_PATH
              value: {{ .Values.global.auditlog.mtlsTokenPath }}
            - name: APP_AUDITLOG_OAUTH_USER
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.auditlog.configMapName }}
                  key: auditlog-oauth-user-var
                  optional: true
            - name: APP_AUDITLOG_OAUTH_TENANT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.auditlog.configMapName }}
                  key: auditlog-oauth-tenant-var
                  optional: true
            {{ end }}
            - name: APP_AUDITLOG_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.auditlog.configMapName }}
                  key: auditlog-url
            - name: APP_AUDITLOG_CONFIG_PATH
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.auditlog.configMapName }}
                  key: auditlog-config-path
            - name: APP_AUDITLOG_SECURITY_PATH
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.auditlog.configMapName }}
                  key: auditlog-security-path
            - name: APP_AUDITLOG_CHANNEL_SIZE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.auditlog.configMapName }}
                  key: auditlog-channel-size
                  optional: true
            - name: APP_AUDITLOG_CHANNEL_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.auditlog.configMapName }}
                  key: auditlog-channel-timeout
                  optional: true
            {{ end }}
{{- with .Values.deployment.securityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
{{- end }}
          livenessProbe:
            httpGet:
              port: {{ .Values.global.gateway.port }}
              path: "/healthz"
            initialDelaySeconds: {{ .Values.global.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.global.livenessProbe.timeoutSeconds }}
            periodSeconds: {{.Values.global.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              port: {{ .Values.global.gateway.port }}
              path: "/healthz"
            initialDelaySeconds: {{ .Values.global.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.global.readinessProbe.timeoutSeconds }}
            periodSeconds: {{.Values.global.readinessProbe.periodSeconds }}
