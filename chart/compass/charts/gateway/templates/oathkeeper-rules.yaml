apiVersion: oathkeeper.ory.sh/v1alpha1
kind: Rule
metadata:
  name: compass-gateway-oauth
spec:
  # Configuration of oathkeeper for secure endpoint of compass gateway
  upstream:
    url: "http://compass-gateway.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.global.gateway.port }}"
  match:
    methods: ["GET", "POST", "OPTIONS"]
    url: <http|https>://{{ .Values.global.gateway.tls.secure.oauth.host }}.{{ .Values.global.ingress.domainName }}<(:(80|443))?>{{ .Values.global.director.prefix }}/graphql
  authenticators:
  - handler: oauth2_introspection
  authorizer:
    handler: allow
  mutators:
  - handler: hydrator
{{ toYaml .Values.global.oathkeeper.mutators.tenantMappingService | indent 4 }}
  - handler: id_token
    config:
      claims: {{ .Values.global.oathkeeper.idTokenConfig.claims | quote }}
---
apiVersion: oathkeeper.ory.sh/v1alpha1
kind: Rule
metadata:
  name: compass-gateway-ord-oauth
spec:
  # Configuration of oathkeeper for secure endpoint of compass open resource discovery service
  upstream:
    url: "http://{{ .Values.global.ordService.host }}:{{ .Values.global.ordService.port }}"
  match:
    methods: ["GET"]
    url: <http|https>://{{ .Values.global.gateway.tls.host }}.{{ .Values.global.ingress.domainName }}<(:(80|443))?><{{ .Values.global.ordService.prefix }}|{{ .Values.global.ordService.staticPrefix }}>/<.*>
  authenticators:
    - handler: oauth2_introspection
  authorizer:
    handler: allow
  mutators:
  - handler: hydrator
{{ toYaml .Values.global.oathkeeper.mutators.tenantMappingService | indent 4 }}
  - handler: id_token
    config:
      claims: {{ .Values.global.oathkeeper.idTokenConfig.claims | quote }}
---
apiVersion: oathkeeper.ory.sh/v1alpha1
kind: Rule
metadata:
  name: compass-gateway-jwt
spec:
  # Configuration of oathkeeper for secure endpoint of compass gateway
  upstream:
    url: "http://compass-gateway.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.global.gateway.port }}"
  match:
    methods: ["GET", "POST", "OPTIONS"]
    url: <http|https>://{{ .Values.global.gateway.tls.host }}.{{ .Values.global.ingress.domainName }}<(:(80|443))?>{{ .Values.global.director.prefix }}/graphql
  authenticators:
  - handler: jwt
    config:
      trusted_issuers: ["{{ .Values.global.cockpit.auth.idpHost }}"]
  authorizer:
    handler: allow
  mutators:
  - handler: hydrator
{{ toYaml .Values.global.oathkeeper.mutators.tenantMappingService | indent 4 }}
  - handler: id_token
    config:
      claims: {{ .Values.global.oathkeeper.idTokenConfig.claims | quote }}
---
apiVersion: oathkeeper.ory.sh/v1alpha1
kind: Rule
metadata:
  name: compass-gateway-jwt-runtime
spec:
  # Configuration of oathkeeper for secure endpoint of compass gateway for runtime access
  upstream:
    url: "http://compass-gateway.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.global.gateway.port }}"
    stripPath: "/runtime"
  match:
    methods: ["POST", "OPTIONS"]
    url: <http|https>://{{ .Values.global.gateway.tls.host }}.{{ .Values.global.ingress.domainName }}<(:(80|443))?>/runtime{{ .Values.global.director.prefix }}/graphql
  authenticators:
  - handler: noop
  authorizer:
    handler: allow
  mutators:
  - handler: hydrator
{{ toYaml .Values.global.oathkeeper.mutators.runtimeMappingService | indent 4 }}
  - handler: hydrator
{{ toYaml .Values.global.oathkeeper.mutators.tenantMappingService | indent 4 }}
  - handler: id_token
    config:
      claims: {{ .Values.global.oathkeeper.idTokenConfig.claims | quote }}
---
apiVersion: oathkeeper.ory.sh/v1alpha1
kind: Rule
metadata:
  name: director-operations-internal
spec:
  # Configuration of oathkeeper for secure endpoint of compass gateway for internal access
  upstream:
    url: "http://compass-director.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.global.director.operations.port }}"
  match:
    methods: ["PUT"]
    url: <http|https>://{{ .Values.global.gateway.tls.secure.internal.host }}.{{ .Values.global.ingress.domainName }}<(:(80|443))?>{{ .Values.global.director.operations.path }}
  authenticators:
    - handler: jwt
      config:
        jwks_urls: [{{ .Values.global.kubernetes.serviceAccountTokenJWKS }}]
  authorizer:
    handler: allow
  mutators:
    - handler: noop # This will copy all request headers to the oathkeeper's session, making them available in the claims template
    - handler: id_token
      config:
        claims: {{ .Values.global.oathkeeper.idTokenConfig.internalClaims | quote }}
---
apiVersion: oathkeeper.ory.sh/v1alpha1
kind: Rule
metadata:
  name: compass-gateway-internal
spec:
  # Configuration of oathkeeper for secure endpoint internal communication with compass gateway
  upstream:
    url: "http://compass-gateway.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.global.gateway.port }}"
  match:
    methods: ["GET", "POST", "OPTIONS"]
    url: <http|https>://{{ .Values.global.gateway.tls.secure.internal.host }}.{{ .Values.global.ingress.domainName }}<(:(80|443))?>{{ .Values.global.director.prefix }}/graphql
  authenticators:
    - handler: jwt
      config:
        jwks_urls: [{{ .Values.global.kubernetes.serviceAccountTokenJWKS }}]
  authorizer:
    handler: allow
  mutators:
    - handler: noop # This will copy all request headers to the oathkeeper's session, making them available in the claims template
    - handler: id_token
      config:
        claims: {{ .Values.global.oathkeeper.idTokenConfig.internalClaims | quote }}
---
apiVersion: oathkeeper.ory.sh/v1alpha1
kind: Rule
metadata:
  name: compass-tenant-fetcher-internal
spec:
  # Configuration of oathkeeper for secure endpoint internal communication with compass gateway
  upstream:
    url: "http://compass-tenant-fetcher.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.global.gateway.port }}"
  match:
    methods: ["POST"]
    url: <http|https>://{{ .Values.global.gateway.tls.secure.internal.host }}.{{ .Values.global.ingress.domainName }}<(:(80|443))?>{{ .Values.global.tenantFetcher.prefix }}/<.*>
  authenticators:
    - handler: jwt
      config:
        jwks_urls: [{{ .Values.global.kubernetes.serviceAccountTokenJWKS }}]
  authorizer:
    handler: allow
  mutators:
    - handler: noop # This will copy all request headers to the oathkeeper's session, making them available in the claims template
    - handler: id_token
      config:
        claims: {{ .Values.global.oathkeeper.idTokenConfig.internalClaims | quote }}
---
apiVersion: oathkeeper.ory.sh/v1alpha1
kind: Rule
metadata:
  name: compass-destination-fetcher-internal
spec:
  # Configuration of oathkeeper for secure endpoint internal communication with compass gateway
  upstream:
    url: "http://compass-destination-fetcher.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.global.destinationFetcher.port }}"
  match:
    methods: ["PUT", "GET"]
    url: <http|https>://{{ .Values.global.gateway.tls.secure.internal.host }}.{{ .Values.global.ingress.domainName }}<(:(80|443))?>{{ .Values.global.destinationFetcher.prefix }}/<.*>
  authenticators:
    - handler: jwt
      config:
        jwks_urls: [{{ .Values.global.kubernetes.serviceAccountTokenJWKS }}]
  authorizer:
    handler: allow
  mutators:
    - handler: noop # This will copy all request headers to the oathkeeper's session, making them available in the claims template
    - handler: id_token
      config:
        claims: {{ .Values.global.oathkeeper.idTokenConfig.internalClaims | quote }}
---
apiVersion: oathkeeper.ory.sh/v1alpha1
kind: Rule
metadata:
  name: compass-ord-aggregator-internal
spec:
  # Configuration of oathkeeper for secure endpoint internal communication with compass gateway
  upstream:
    url: "http://compass-ord-aggregator.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.global.ordAggregator.port }}"
  match:
    methods: ["POST", "GET"]
    url: <http|https>://{{ .Values.global.gateway.tls.secure.internal.host }}.{{ .Values.global.ingress.domainName }}<(:(80|443))?>{{ .Values.global.ordAggregator.prefix }}/<.*>
  authenticators:
    - handler: jwt
      config:
        jwks_urls: [{{ .Values.global.kubernetes.serviceAccountTokenJWKS }}]
  authorizer:
    handler: allow
  mutators:
    - handler: noop # This will copy all request headers to the oathkeeper's session, making them available in the claims template
    - handler: id_token
      config:
        claims: {{ .Values.global.oathkeeper.idTokenConfig.internalClaims | quote }}
---
apiVersion: oathkeeper.ory.sh/v1alpha1
kind: Rule
metadata:
  name: compass-director-internal
spec:
  # Configuration of oathkeeper for secure endpoint internal communication with compass director
  upstream:
    url: "http://compass-director.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.global.director.graphql.external.port }}"
  match:
    methods: ["GET", "POST", "OPTIONS"]
    url: <http|https>://{{ .Values.global.director.tls.secure.internal.host }}.{{ .Values.global.ingress.domainName }}<(:(80|443))?>/<.*>
  authenticators:
    - handler: jwt
      config:
        jwks_urls: [{{ .Values.global.kubernetes.serviceAccountTokenJWKS }}]
  authorizer:
    handler: allow
  mutators:
    - handler: noop # This will copy all request headers to the oathkeeper's session, making them available in the claims template
    - handler: id_token
      config:
        claims: {{ .Values.global.oathkeeper.idTokenConfig.internalClaims | quote }}
---
apiVersion: oathkeeper.ory.sh/v1alpha1
kind: Rule
metadata:
  name: compass-director-certs
spec:
  # Configuration of oathkeeper for secure endpoint of compass gateway
  upstream:
    url: "http://compass-gateway.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.global.gateway.port }}"
  match:
    methods: ["GET", "POST"]
    url: <http|https>://{{ .Values.global.gateway.mtls.host }}.{{ .Values.global.ingress.domainName }}<(:(80|443))?>{{ .Values.global.director.prefix }}/graphql
  authenticators:
  - handler: noop
  authorizer:
    handler: allow
  mutators:
  - handler: hydrator
{{ toYaml .Values.global.oathkeeper.mutators.certificateResolverService | indent 4 }}
  - handler: hydrator
{{ toYaml .Values.global.oathkeeper.mutators.tenantMappingService | indent 4 }}
  - handler: header
    config:
      headers:
        {{ .Values.global.gateway.headers.rateLimit }}: "{{ .Values.rateLimit.headerValueTemplate }}"
  - handler: id_token
    config:
      claims: {{ .Values.global.oathkeeper.idTokenConfig.claims | quote }}
---
apiVersion: oathkeeper.ory.sh/v1alpha1
kind: Rule
metadata:
  name: compass-system-broker-certs
spec:
  # Configuration of oathkeeper for secure endpoint of compass system broker
  upstream:
    url: "http://compass-system-broker.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.global.system_broker.port }}"
  match:
    methods: ["GET", "POST", "PATCH", "PUT", "DELETE"]
    url: <http|https>://{{ .Values.global.gateway.mtls.host }}.{{ .Values.global.ingress.domainName }}<(:(80|443))?>{{ .Values.global.system_broker.prefix }}<(/.*)?>
  authenticators:
  - handler: noop
  authorizer:
    handler: allow
  mutators:
  - handler: hydrator
{{ toYaml .Values.global.oathkeeper.mutators.certificateResolverService | indent 4 }}
  - handler: hydrator
{{ toYaml .Values.global.oathkeeper.mutators.tenantMappingService | indent 4 }}
  - handler: id_token
    config:
      claims: {{ .Values.global.oathkeeper.idTokenConfig.claims | quote }}
---
apiVersion: oathkeeper.ory.sh/v1alpha1
kind: Rule
metadata:
  name: compass-gateway-director-playground
spec:
  # Configuration of oathkeeper for unsecure endpoint of compass gateway - director playground
  upstream:
    url: "http://compass-gateway.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.global.gateway.port }}"
  match:
    methods: ["GET"]
    url: <http|https>://<{{ .Values.global.gateway.tls.secure.oauth.host }}|{{ .Values.global.gateway.tls.host }}|{{ .Values.global.gateway.mtls.host }}>.{{ .Values.global.ingress.domainName }}<(:(80|443))?>{{ .Values.global.director.prefix }}/<(examples/.*)?>
  authenticators:
  - handler: anonymous
  authorizer:
    handler: allow
  mutators:
  - handler: noop
---
apiVersion: oathkeeper.ory.sh/v1alpha1
kind: Rule
metadata:
  name: compass-connector-one-time-tokens
  namespace: {{ .Release.Namespace }}
spec:
  # Configuration of oathkeeper for secure endpoint of compass gateway
  upstream:
    url: "http://compass-gateway.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.global.gateway.port }}"
  match:
    methods: ["GET", "POST"]
    url: <http|https>://{{ .Values.global.gateway.tls.host }}.{{ .Values.global.ingress.domainName }}<(:(80|443))?>{{ .Values.global.connector.prefix }}/graphql
  authenticators:
  - handler: noop
  authorizer:
    handler: allow
  mutators:
  - handler: hydrator
{{ toYaml .Values.global.oathkeeper.mutators.tokenResolverService | indent 4 }}
  - handler: hydrator
{{ toYaml .Values.global.oathkeeper.mutators.tenantMappingService | indent 4 }}
  - handler: id_token
    config:
      claims: {{ .Values.global.oathkeeper.idTokenConfig.claims | quote }}
---
apiVersion: oathkeeper.ory.sh/v1alpha1
kind: Rule
metadata:
  name: compass-connector-certs
  namespace: {{ .Release.Namespace }}
spec:
  # Configuration of oathkeeper for secure endpoint of compass gateway
  upstream:
    url: "http://compass-gateway.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.global.gateway.port }}"
  match:
    methods: ["GET", "POST"]
    url: <http|https>://{{ .Values.global.gateway.mtls.host }}.{{ .Values.global.ingress.domainName }}<(:(80|443))?>{{ .Values.global.connector.prefix }}/graphql
  authenticators:
  - handler: noop
  authorizer:
    handler: allow
  mutators:
  - handler: hydrator
{{ toYaml .Values.global.oathkeeper.mutators.certificateResolverService | indent 4 }}
  - handler: hydrator
{{ toYaml .Values.global.oathkeeper.mutators.tenantMappingService | indent 4 }}
  - handler: header
    config:
      headers:
        {{ .Values.global.gateway.headers.rateLimit }}: "{{ .Values.rateLimit.headerValueTemplate }}"
  - handler: id_token
    config:
      claims: {{ .Values.global.oathkeeper.idTokenConfig.claims | quote }}
---
apiVersion: oathkeeper.ory.sh/v1alpha1
kind: Rule
metadata:
  name: compass-gateway-ord-certs
spec:
  # Configuration of oathkeeper for endpoint secured by certificates of compass open resource discovery service
  upstream:
    url: "http://{{ .Values.global.ordService.host }}:{{ .Values.global.ordService.port }}"
  match:
    methods: ["GET"]
    url: <http|https>://{{ .Values.global.gateway.mtls.host }}.{{ .Values.global.ingress.domainName }}<(:(80|443))?>{{ .Values.global.ordService.staticPrefix }}/<.*>
  authenticators:
  - handler: noop
  authorizer:
    handler: allow
  mutators:
  - handler: hydrator
{{ toYaml .Values.global.oathkeeper.mutators.certificateResolverService | indent 4 }}
  - handler: hydrator
{{ toYaml .Values.global.oathkeeper.mutators.tenantMappingService | indent 4 }}
  - handler: id_token
    config:
      claims: {{ .Values.global.oathkeeper.idTokenConfig.claims | quote }}
---
apiVersion: oathkeeper.ory.sh/v1alpha1
kind: Rule
metadata:
  name: compass-gateway-ord-external-certs
spec:
  # Configuration of oathkeeper for endpoint secured with certificates issued by external trusted root CA
  upstream:
    url: "http://{{ .Values.global.ordService.host }}:{{ .Values.global.ordService.port }}"
  match:
    methods: ["GET"]
    url: <http|https>://<{{ .Values.global.ingress.discoveryDomain.name }}|{{ .Values.global.gateway.mtls.external.host }}.{{ .Values.global.ingress.domainName }}><(:(80|443))?><{{ .Values.global.ordService.prefix }}|{{ .Values.global.ordService.staticPrefix }}>/<.*>
  authenticators:
  - handler: noop
  authorizer:
    handler: allow
  mutators:
  - handler: hydrator
{{ toYaml .Values.global.oathkeeper.mutators.certificateResolverService | indent 4 }}
  - handler: hydrator
{{ toYaml .Values.global.oathkeeper.mutators.authenticationMappingServices.subscriber.cfg | indent 4 }}
  - handler: hydrator
{{ toYaml .Values.global.oathkeeper.mutators.tenantMappingService | indent 4 }}
  - handler: id_token
    config:
      claims: {{ .Values.global.oathkeeper.idTokenConfig.claims | quote }}
---
apiVersion: oathkeeper.ory.sh/v1alpha1
kind: Rule
metadata:
  name: compass-gateway-director-external-certs
spec:
  # Configuration of oathkeeper for endpoint secured with certificates issued by external trusted root CA
  upstream:
    url: "http://compass-gateway.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.global.gateway.port }}"
  match:
    methods: ["GET", "POST"]
    url: <http|https>://{{ .Values.global.gateway.mtls.external.host }}.{{ .Values.global.ingress.domainName }}<(:(80|443))?>{{ .Values.global.director.prefix }}/graphql
  authenticators:
  - handler: noop
  authorizer:
    handler: allow
  mutators:
  - handler: hydrator
{{ toYaml .Values.global.oathkeeper.mutators.certificateResolverService | indent 4 }}
  - handler: hydrator
{{ toYaml .Values.global.oathkeeper.mutators.authenticationMappingServices.subscriber.cfg | indent 4 }}
  - handler: hydrator
{{ toYaml .Values.global.oathkeeper.mutators.tenantMappingService | indent 4 }}
  - handler: id_token
    config:
      claims: {{ .Values.global.oathkeeper.idTokenConfig.claims | quote }}
---
apiVersion: oathkeeper.ory.sh/v1alpha1
kind: Rule
metadata:
  name: compass-async-formation-mapping-external-certs
spec:
  # Configuration of oathkeeper for endpoint secured with certificates issued by external trusted root CA
  upstream:
    url: "http://compass-director.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.global.director.graphql.external.port }}"
  match:
    methods: ["PATCH"]
    url: <http|https>://{{ .Values.global.gateway.mtls.external.host }}.{{ .Values.global.ingress.domainName }}<(:(80|443))?>{{ .Values.global.director.formationMappingAsyncStatusApi.pathPrefix }}/<.*>
  authenticators:
    - handler: noop
  authorizer:
    handler: allow
  mutators:
  - handler: hydrator
{{ toYaml .Values.global.oathkeeper.mutators.certificateResolverService | indent 4 }}
  - handler: hydrator
{{ toYaml .Values.global.oathkeeper.mutators.authenticationMappingServices.subscriber.cfg | indent 4 }}
  - handler: hydrator
{{ toYaml .Values.global.oathkeeper.mutators.tenantMappingService | indent 4 }}
  - handler: id_token
    config:
      claims: {{ .Values.global.oathkeeper.idTokenConfig.claims | quote }}
