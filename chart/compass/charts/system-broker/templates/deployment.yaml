apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.deployment.minReplicas }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
  strategy:
    {{- toYaml .Values.deployment.strategy | nindent 4 }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
    spec:
      {{ if .Values.global.isLocalEnv }}
      # HostAliases are used by Pod to resolve kyma.local domain
      hostAliases:
        - ip: {{ .Values.global.minikubeIP }}
          hostnames:
            # Used for calls to Director
            - "{{ .Values.global.gateway.tls.secure.oauth.host }}.{{ .Values.global.ingress.domainName }}"
            # Used for calls for oauth token
            - "{{ .Values.global.oauth2.host }}.{{ .Values.global.ingress.domainName }}"
      {{ end }}
      serviceAccountName: {{ template "fullname" . }}
      nodeSelector:
        {{- toYaml .Values.deployment.nodeSelector | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.global.images.containerRegistry.path }}/{{ .Values.global.images.system_broker.dir }}compass-system-broker:{{ .Values.global.images.system_broker.version }}
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.deployment.args.containerPort }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          {{- with .Values.deployment.securityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
          {{- end }}
          env:
            - name: SERVER_PORT
              value: "{{ .Values.deployment.args.containerPort }}"
            - name: SERVER_SELF_URL
              value: "https://{{ .Values.global.gateway.mtls.host }}.{{ .Values.global.ingress.domainName }}"
            - name: GRAPHQL_CLIENT_GRAPHQL_ENDPOINT
              value: "http://{{ .Values.global.gateway.tls.host }}.{{ .Release.Namespace }}.svc.cluster.local:{{.Values.global.gateway.port }}/director/graphql"
            - name: HTTP_CLIENT_FORWARD_HEADERS
              value: "{{ .Values.global.system_broker.tokenProviderFromHeader.forwardHeaders }}"
            - name: ORD_SERVICE_URL
              value: "https://{{ .Values.global.gateway.mtls.host }}.{{ .Values.global.ingress.domainName }}"
            - name: ORD_STATIC_PATH
              value: "{{ .Values.global.ordService.staticPrefix }}"
            - name: METRICS_PORT
              value: "{{ .Values.metrics.port }}"
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.deployment.args.containerPort }}
            periodSeconds: 10
            timeoutSeconds: 3
            initialDelaySeconds: 30
          readinessProbe:
            httpGet:
              path: /readyz
              port: {{ .Values.deployment.args.containerPort }}
            periodSeconds: 5
            timeoutSeconds: 2
            initialDelaySeconds: 10
