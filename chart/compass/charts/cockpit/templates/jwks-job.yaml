apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-jwks-creator-sa
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "0"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Release.Name }}-jwks-creator-cr
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "1"
rules:
  - apiGroups:
      - "*"
    resources:
      - configmaps
      - deployments
    verbs:
      - get
      - list
      - update
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Release.Name }}-jwks-creator-crb
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "1"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ .Release.Name }}-jwks-creator-cr
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Name }}-jwks-creator-sa
    namespace: {{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-jwks-creator
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "2"
spec:
  backoffLimit: 0
  template:
    metadata:
      name: {{ .Release.Name }}-jwks-creator
    spec:
      serviceAccountName: {{ .Release.Name }}-jwks-creator-sa
      restartPolicy: Never
      securityContext:
        runAsUser: 0
      containers:
        - name: jwks-creator
          image: bitnami/kubectl:1.22.4
          env:
            - name: YQ_VERSION
              value: "v4.20.1"
            - name: JWKS_URL
              value: "{{ .Values.global.cockpit.auth.idpHost }}/oauth2/certs"
          command:
            - bash
            - -c
            - |
              set -e

              trap "echo '# KILLING PILOT-AGENT #'; curl -X POST http://127.0.0.1:15020/quitquitquit; sleep 3;" RETURN EXIT INT TERM

              wget https://github.com/mikefarah/yq/releases/download/$YQ_VERSION/yq_linux_amd64 -O /usr/bin/yq && chmod +x /usr/bin/yq
              export KCM="$(kubectl get configmap -n kyma-system ory-oathkeeper-config -o yaml)"
              export CONFIG_FILE="new-config.yaml"
              export CM_FILE="new-cm.yaml"

              echo "$KCM" | yq '.data."config.yaml"' | \
              yq ".authenticators.jwt.config.jwks_urls = [\"$JWKS_URL\"]" > $CONFIG_FILE

              if echo "$KCM" | grep -q "$JWKS_URL"; then
              echo "The jwks url has already been added"
              exit 0
              fi

              export YQ_CMD=".data.\"config.yaml\" = \"$(cat $CONFIG_FILE)\""

              echo "$KCM" | yq "$YQ_CMD" > $CM_FILE

              kubectl apply -f $CM_FILE
              kubectl rollout restart deployment -n kyma-system ory-oathkeeper