apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.deployment.minReplicas }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
  strategy:
    {{- toYaml .Values.deployment.strategy | nindent 4 }}
  template:
    metadata:
      annotations:
        restartOnNewInstallationMarker: {{ randAlphaNum 5 | quote }} # Restarts the deployment on a new Helm installation. (https://helm.sh/docs/howto/charts_tips_and_tricks/#automatically-roll-deployments)
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        {{- if .Values.deployment.resourcesIstioProxy.requests.cpu }}
        sidecar.istio.io/proxyCPU: {{ .Values.deployment.resourcesIstioProxy.requests.cpu }}
        {{- end }}
        {{- if .Values.deployment.resourcesIstioProxy.requests.memory }}
        sidecar.istio.io/proxyMemory: {{ .Values.deployment.resourcesIstioProxy.requests.memory }}
        {{- end }}
        {{- if .Values.deployment.resourcesIstioProxy.limits.cpu }}
        sidecar.istio.io/proxyCPULimit: {{ .Values.deployment.resourcesIstioProxy.limits.cpu }}
        {{- end }}
        {{- if .Values.deployment.resourcesIstioProxy.limits.memory }}
        sidecar.istio.io/proxyMemoryLimit: {{ .Values.deployment.resourcesIstioProxy.limits.memory }}
        {{- end }}
      labels:
        app: {{ .Chart.Name }}
        reqlimit: {{ .Values.global.istio.ingressgateway.requestPayloadSizeLimit2MBLabel }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ template "fullname" . }}
      nodeSelector:
        {{- toYaml .Values.deployment.nodeSelector | nindent 8 }}
    {{ if eq .Values.global.portieris.isEnabled true }}
      imagePullSecrets:
      - name: {{ .Values.global.portieris.imagePullSecretName }}
    {{ end }}
      volumes:
      - name: credentials-secret
        secret:
          secretName: {{ .Values.global.tenantFetcher.k8sSecret.name }}
      - name: dependencies-config
        secret:
          secretName: {{ .Values.global.destinationRegionSecret.secretName }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ $.Values.global.images.containerRegistry.path }}/{{ $.Values.global.images.director.dir }}compass-director:{{ $.Values.global.images.director.version }}
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          command:
            - "/bin/sh"
          args:
              - "-c"
              - "./tenantfetcher-svc; exit_code=$?; echo '# KILLING PILOT-AGENT #'; pkill -INT cloud_sql_proxy; curl -XPOST http://127.0.0.1:15020/quitquitquit; sleep 5; exit $exit_code;"
          ports:
            - name: http
              containerPort: {{ .Values.deployment.args.containerPort }}
              protocol: TCP
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          {{- with .Values.deployment.securityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
          {{- end }}
          env:
            - name: APP_TENANT_PROVIDER_TENANT_ID_PROPERTY
              value: {{ .Values.global.tenantFetcher.tenantProvider.tenantIdProperty }}
            - name: APP_TENANT_PROVIDER_CUSTOMER_ID_PROPERTY
              value: {{ .Values.global.tenantFetcher.tenantProvider.customerIdProperty }}
            - name: APP_TENANT_PROVIDER_COST_OBJECT_ID_PROPERTY
              value: {{ .Values.global.tenantFetcher.tenantProvider.costObjectIdProperty }}
            - name: APP_TENANT_PROVIDER_SUBACCOUNT_TENANT_ID_PROPERTY
              value: {{ .Values.global.tenantFetcher.tenantProvider.subaccountTenantIdProperty }}
            - name: APP_TENANT_PROVIDER_SUBDOMAIN_PROPERTY
              value: {{ .Values.global.tenantFetcher.tenantProvider.subdomainProperty }}
            - name: APP_TENANT_PROVIDER_LICENSE_TYPE_PROPERTY
              value: {{ .Values.global.tenantFetcher.tenantProvider.licenseTypeProperty }}
            - name: APP_TENANT_PROVIDER
              value: {{ .Values.global.tenantFetcher.tenantProvider.name }}
            - name: APP_TENANT_PROVIDER_SUBSCRIPTION_PROVIDER_ID_PROPERTY
              value: {{ .Values.global.tenantFetcher.tenantProvider.subscriptionProviderIdProperty }}
            - name: APP_TENANT_PROVIDER_PROVIDER_SUBACCOUNT_ID_PROPERTY #The property which states the provider subaccount used in the tenant provider
              value: {{.Values.global.tenantFetcher.tenantProvider.providerSubaccountIdProperty }}
            - name: APP_TENANT_PROVIDER_CONSUMER_TENANT_ID_PROPERTY
              value: {{.Values.global.tenantFetcher.tenantProvider.consumerTenantIdProperty }}
            - name: APP_TENANT_PROVIDER_SUBSCRIPTION_PROVIDER_APP_NAME_PROPERTY
              value: {{.Values.global.tenantFetcher.tenantProvider.subscriptionProviderAppNameProperty }}
            - name: APP_LOG_FORMAT
              value: {{.Values.global.log.format | quote }}
            - name: APP_ADDRESS
              value: "0.0.0.0:{{ .Values.deployment.args.containerPort }}"
            - name: APP_ROOT_API
              value: "{{ .Values.global.tenantFetcher.prefix }}"
            - name: APP_TENANT_WITH_PARENT_ON_DEMAND_HANDLER_ENDPOINT
              value: "{{ .Values.global.tenantFetcher.server.fetchTenantWithParentEndpoint }}"
            - name: APP_TENANT_WITHOUT_PARENT_ON_DEMAND_HANDLER_ENDPOINT
              value: "{{ .Values.global.tenantFetcher.server.fetchTenantWithoutParentEndpoint }}"
            - name: APP_REGIONAL_HANDLER_ENDPOINT
              value: "{{ .Values.global.tenantFetcher.server.regionalHandlerEndpoint }}"
            - name: APP_REGIONAL_DEPENDENCIES_ENDPOINT
              value: "{{ .Values.global.tenantFetcher.server.dependenciesEndpoint }}"
            - name: APP_TENANT_REGION_DEPENDENCIES_CONFIG_PATH
              value: "{{ .Values.global.tenantFetcher.dependenciesConfig.path }}/{{ .Values.global.destinationRegionSecret.fileName }}"
            - name: APP_TENANT_PATH_PARAM
              value: "{{ .Values.global.tenantFetcher.server.tenantPathParam }}"
            - name: APP_REGION_PATH_PARAM
              value: "{{ .Values.global.tenantFetcher.server.regionPathParam }}"
            - name: APP_JWKS_ENDPOINT
              value: "{{ .Values.global.tenantFetcher.authentication.jwksEndpoint }}"
            - name: APP_SUBSCRIPTION_CALLBACK_SCOPE
              value: {{ .Values.global.tenantFetcher.requiredAuthScope | quote }}
            - name: APP_FETCH_TENANT_ON_DEMAND_SCOPE
              value: {{ .Values.global.tenantFetcher.fetchTenantAuthScope | quote }}
            - name: APP_DIRECTOR_GRAPHQL_ENDPOINT
              value: "https://{{ $.Values.global.gateway.tls.secure.internal.host }}.{{ $.Values.global.ingress.domainName }}{{ $.Values.global.director.prefix }}/graphql"
            - name: APP_SELF_REGISTER_DISTINGUISH_LABEL_KEY
              value: {{ .Values.global.director.subscription.subscriptionProviderLabelKey }}
            - name: APP_HTTP_CLIENT_SKIP_SSL_VALIDATION
              value: {{ $.Values.global.http.client.skipSSLValidation | quote }}
            - name: APP_DB_USER
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-username
            - name: APP_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-password
            - name: APP_DB_HOST
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-serviceName
            - name: APP_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-servicePort
            - name: APP_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-db-name
            - name: APP_DB_SSL
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-sslMode
            - name: APP_DB_MAX_OPEN_CONNECTIONS
              value: {{ .Values.database.dbPool.maxOpenConnections | quote }}
            - name: APP_DB_MAX_IDLE_CONNECTIONS
              value: {{ .Values.database.dbPool.maxIdleConnections | quote }}
            - name: APP_TENANT_FETCHER_XSAPPNAME_PATH
              value: {{ .Values.global.tenantFetcher.xsappNamePath | quote }}
            - name: APP_TENANT_FETCHER_OMIT_PARAM_NAME
              value: {{ .Values.global.tenantFetcher.omitDependenciesParamName | quote }}
            - name: APP_TENANT_FETCHER_OMIT_PARAM_VALUE
              value: {{ .Values.global.tenantFetcher.omitDependenciesParamValue | quote }}
            - name: APP_SYSTEM_FIELD_DISCOVERY_WEBHOOK_PARTIAL_PROCESSING
              value: "{{ .Values.global.tenantFetcher.systemFieldDiscoveryWebhookPartialProcessing }}"
            - name: APP_SYSTEM_FIELD_DISCOVERY_WEBHOOK_PARTIAL_PROCESS_MAX_DAYS
              value: "{{ .Values.global.tenantFetcher.systemFieldDiscoveryWebhookPartialProcessMaxDays }}"
            - name: APP_WEBHOOK_PROCESSOR_JOB_INTERVAL
              value: "{{ .Values.global.tenantFetcher.webhookProcessorJobInterval }}"
            - name: APP_ELECTION_LEASE_LOCK_NAME
              value: {{ .Values.global.tenantFetcher.lease.lockname | quote }}
            - name: APP_ELECTION_LEASE_LOCK_NAMESPACE
              value: {{ .Release.Namespace }}
            {{- if and ($.Values.global.metrics.enabled) ($.Values.global.metrics.pushEndpoint) }}
            - name: APP_METRICS_PUSH_ENDPOINT
              value: {{ $.Values.global.metrics.pushEndpoint }}
            {{- end }}
            # Tenant fetchers job configurations
            {{- range $tenantFetcher, $config := .Values.global.tenantFetchers }}
            {{- $tenantFetcherJobName := $tenantFetcher | upper }}
            {{- if eq $config.enabled true }}
            - name: APP_{{ $tenantFetcherJobName }}_JOB_NAME
              value: {{ $tenantFetcherJobName | quote }}
            - name: APP_{{ $tenantFetcherJobName }}_REGION_PREFIX
              value: {{ $config.api.regionPrefix | quote }}
            # Database config
            - name: APP_{{ $tenantFetcherJobName }}_DB_MAX_OPEN_CONNECTIONS
              value: {{ $config.dbPool.maxOpenConnections | quote }}
            - name: APP_{{ $tenantFetcherJobName }}_DB_MAX_IDLE_CONNECTIONS
              value: {{ $config.dbPool.maxIdleConnections | quote }}
            # Provider config
            - name: APP_{{ $tenantFetcherJobName }}_TENANT_PROVIDER
              value: {{ $config.providerName }}
            - name: APP_{{ $tenantFetcherJobName }}_TENANT_TYPE
              value: {{ $config.tenantType }}
            # Auth config
            - name: APP_{{ $tenantFetcherJobName }}_SECRET_CLIENT_ID_PATH
              value: {{ $config.authConfig.clientIDPath }}
            - name: APP_{{ $tenantFetcherJobName }}_SECRET_CLIENT_SECRET_PATH
              value: {{ $config.authConfig.clientSecretPath }}
            - name: APP_{{ $tenantFetcherJobName }}_SECRET_CERT_PATH
              value: {{ $config.authConfig.clientCertPath }}
            - name: APP_{{ $tenantFetcherJobName }}_SECRET_CERT_KEY_PATH
              value: {{ $config.authConfig.clientKeyPath }}
            - name: APP_{{ $tenantFetcherJobName }}_SECRET_TOKEN_ENDPOINT_PATH
              value: {{ $config.authConfig.tokenEndpointPath }}
            - name: APP_{{ $tenantFetcherJobName }}_SECRET_TOKEN_PATH
              value: {{ $config.authConfig.tokenURLPath }}
            - name: APP_{{ $tenantFetcherJobName }}_SECRET_OAUTH_SKIP_SSL_VALIDATION
              value: {{ default "false" $config.authConfig.skipSSLValidation | quote }}
            - name: APP_{{ $tenantFetcherJobName }}_API_REGION_NAME
              value:  {{ $config.api.regionName }}
            - name: APP_{{ $tenantFetcherJobName }}_API_AUTH_MODE
              value: {{ $config.authConfig.oauthMode }}
            # API Config
            - name: APP_{{ $tenantFetcherJobName }}_API_AUTH_CONFIG_SECRET_KEY
              value: {{ $config.api.authConfigSecretKey }}
            # API Config: field mapping
            - name: APP_{{ $tenantFetcherJobName }}_API_MAPPING_FIELD_ID
              value: {{ $config.api.fieldMapping.idField }}
            - name: APP_{{ $tenantFetcherJobName }}_API_MAPPING_FIELD_NAME
              value: {{ $config.api.fieldMapping.nameField }}
            - name: APP_{{ $tenantFetcherJobName }}_API_MAPPING_FIELD_CUSTOMER_ID
              value: {{ $config.api.fieldMapping.customerIdField }}
            - name: APP_{{ $tenantFetcherJobName }}_API_MAPPING_FIELD_COST_OBJECT_ID
              value: {{ $config.api.fieldMapping.costObjectIDField }}
            - name: APP_{{ $tenantFetcherJobName }}_API_MAPPING_FIELD_SUBACCOUNT_COST_OBJECT_ID
              value: {{ $config.api.fieldMapping.subaccountCostObjectIDField }}
            - name: APP_{{ $tenantFetcherJobName }}_API_MAPPING_FIELD_SUBACCOUNT_COST_OBJECT_TYPE
              value: {{ $config.api.fieldMapping.subaccountCostObjectTypeField }}
            - name: APP_{{ $tenantFetcherJobName }}_API_MAPPING_FIELD_SUBDOMAIN
              value: {{ default "subdomain" $config.api.fieldMapping.subdomainField }}
            - name: APP_{{ $tenantFetcherJobName }}_API_MAPPING_FIELD_REGION
              value: {{ $config.api.fieldMapping.regionField }}
            - name: APP_{{ $tenantFetcherJobName }}_API_MAPPING_FIELD_ENTITY_TYPE
              value: {{ $config.api.fieldMapping.entityTypeField }}
            - name: APP_{{ $tenantFetcherJobName }}_API_MAPPING_FIELD_LICENSE_TYPE
              value: {{ default "licenseType" $config.api.fieldMapping.licenseTypeField }}
            - name: APP_{{ $tenantFetcherJobName }}_API_MAPPING_FIELD_DISCRIMINATOR
              value: {{ $config.api.fieldMapping.discriminatorField }}
            - name: APP_{{ $tenantFetcherJobName }}_API_MAPPING_VALUE_DISCRIMINATOR
              value: {{ $config.api.fieldMapping.discriminatorValue }}
            - name: APP_{{ $tenantFetcherJobName }}_API_MAPPING_FIELD_DETAILS
              value: {{ $config.api.fieldMapping.detailsField }}
            - name: APP_{{ $tenantFetcherJobName }}_API_MAPPING_FIELD_LABELS
              value: {{ $config.api.fieldMapping.labelsField }}
            - name: APP_{{ $tenantFetcherJobName }}_API_GLOBAL_ACCOUNT_KEY
              value: {{ default "gaID" $config.api.fieldMapping.globalAccountID }}
            - name: APP_{{ $tenantFetcherJobName }}_TENANT_TOTAL_PAGES_FIELD
              value: {{ $config.api.fieldMapping.totalPagesField }}
            - name: APP_{{ $tenantFetcherJobName }}_TENANT_TOTAL_RESULTS_FIELD
              value: {{ $config.api.fieldMapping.totalResultsField }}
            - name: APP_{{ $tenantFetcherJobName }}_API_TENANT_EVENTS_FIELD
              value: {{ $config.api.fieldMapping.tenantEventsField }}
            # API Config: Moved subaccount field mapping
            - name: APP_{{ $tenantFetcherJobName }}_API_MOVED_SUBACCOUNT_SOURCE_TENANT_FIELD
              value: {{ default "sourceGlobalAccountGUID" $config.api.fieldMapping.movedSubaccountSourceField }}
            - name: APP_{{ $tenantFetcherJobName }}_API_MOVED_SUBACCOUNT_TARGET_TENANT_FIELD
              value: {{ default "targetGlobalAccountGUID" $config.api.fieldMapping.movedSubaccountTargetField }}
            # API Config: endpoints config
            - name: APP_{{ $tenantFetcherJobName }}_API_ENDPOINT_TENANT_CREATED
              value: {{ default "127.0.0.1/events?type=account-created" $config.api.endpoints.accountCreated }}
            - name: APP_{{ $tenantFetcherJobName }}_API_ENDPOINT_TENANT_DELETED
              value: {{ default "127.0.0.1/events?type=account-deleted" $config.api.endpoints.accountDeleted }}
            - name: APP_{{ $tenantFetcherJobName }}_API_ENDPOINT_TENANT_UPDATED
              value: {{ default "127.0.0.1/events?type=account-updated" $config.api.endpoints.accountUpdated }}
            - name: APP_{{ $tenantFetcherJobName }}_API_ENDPOINT_SUBACCOUNT_CREATED
              value: {{ default "127.0.0.1/events?type=subaccount-created" $config.api.endpoints.subaccountCreated }}
            - name: APP_{{ $tenantFetcherJobName }}_API_ENDPOINT_SUBACCOUNT_DELETED
              value: {{ default "127.0.0.1/events?type=subaccount-deleted" $config.api.endpoints.subaccountDeleted }}
            - name: APP_{{ $tenantFetcherJobName }}_API_ENDPOINT_SUBACCOUNT_UPDATED
              value: {{ default "127.0.0.1/events?type=subaccount-updated" $config.api.endpoints.subaccountUpdated }}
            - name: APP_{{ $tenantFetcherJobName }}_API_ENDPOINT_SUBACCOUNT_MOVED
              value: {{ default "127.0.0.1/events?type=subaccount-moved" $config.api.endpoints.subaccountMoved }}
            # Regional APIs config
            {{- if $config.regionalConfig }}
            {{- range $region, $regionCfg := $config.regionalConfig.regions }}
            {{- $regionNameEnv := $region | upper }}
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_AUTH_CONFIG_SECRET_KEY
              value: {{ $regionCfg.api.authConfigSecretKey }}
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_REGION_NAME
              value: {{ $region }}
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_AUTH_MODE
              value: {{ $regionCfg.api.oauthMode }}
            # Regional API Config: field mapping
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_MAPPING_FIELD_NAME
              value: {{ $config.regionalConfig.fieldMapping.nameField }}
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_MAPPING_FIELD_ID
              value: {{ $config.regionalConfig.fieldMapping.idField }}
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_MAPPING_FIELD_CUSTOMER_ID
              value: {{ $config.regionalConfig.fieldMapping.customerIdField }}
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_MAPPING_FIELD_SUBACCOUNT_COST_OBJECT_ID
              value: {{ $config.api.fieldMapping.subaccountCostObjectIDField }}
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_MAPPING_FIELD_SUBACCOUNT_COST_OBJECT_TYPE
              value: {{ $config.api.fieldMapping.subaccountCostObjectTypeField }}
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_MAPPING_FIELD_COST_OBJECT_ID
              value: {{ default "costObject" $config.regionalConfig.fieldMapping.costObjectIDField }}
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_MAPPING_FIELD_SUBDOMAIN
              value: {{ default "subdomain" $config.regionalConfig.fieldMapping.subdomainField }}
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_MAPPING_FIELD_REGION
              value: {{ default "region"  $config.regionalConfig.fieldMapping.regionField }}
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_MAPPING_FIELD_ENTITY_TYPE
              value: {{ $config.regionalConfig.fieldMapping.entityTypeField }}
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_MAPPING_FIELD_LICENSE_TYPE
              value: {{ default "licenseType" $config.regionalConfig.fieldMapping.licenseTypeField }}
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_MAPPING_FIELD_DISCRIMINATOR
              value: {{ $config.regionalConfig.fieldMapping.discriminatorField }}
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_MAPPING_VALUE_DISCRIMINATOR
              value: {{ $config.regionalConfig.fieldMapping.discriminatorValue }}
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_MAPPING_FIELD_DETAILS
              value: {{ $config.regionalConfig.fieldMapping.detailsField }}
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_MAPPING_FIELD_LABELS
              value: {{ $config.regionalConfig.fieldMapping.labelsField }}
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_GLOBAL_ACCOUNT_KEY
              value: {{ default "gaID" $config.regionalConfig.fieldMapping.globalAccountID }}
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_TENANT_TOTAL_PAGES_FIELD
              value: {{ $config.regionalConfig.fieldMapping.totalPagesField }}
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_TENANT_TOTAL_RESULTS_FIELD
              value: {{ $config.regionalConfig.fieldMapping.totalResultsField }}
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_TENANT_EVENTS_FIELD
              value: {{ $config.regionalConfig.fieldMapping.tenantEventsField }}
            # API Config: Moved subaccount field mapping
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_MOVED_SUBACCOUNT_SOURCE_TENANT_FIELD
              value: {{ default "sourceGlobalAccountGUID" $config.regionalConfig.fieldMapping.movedSubaccountSourceField }}
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_MOVED_SUBACCOUNT_TARGET_TENANT_FIELD
              value: {{ default "targetGlobalAccountGUID" $config.regionalConfig.fieldMapping.movedSubaccountTargetField }}
            # API Config: endpoints config
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_ENDPOINT_TENANT_CREATED
              value: {{ $regionCfg.api.endpoints.accountCreated }}
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_ENDPOINT_TENANT_DELETED
              value: {{ $regionCfg.api.endpoints.accountDeleted }}
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_ENDPOINT_TENANT_UPDATED
              value: {{ $regionCfg.api.endpoints.accountUpdated }}
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_ENDPOINT_SUBACCOUNT_CREATED
              value: {{ $regionCfg.api.endpoints.subaccountCreated }}
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_ENDPOINT_SUBACCOUNT_DELETED
              value: {{ $regionCfg.api.endpoints.subaccountDeleted }}
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_ENDPOINT_SUBACCOUNT_UPDATED
              value: {{ $regionCfg.api.endpoints.subaccountUpdated }}
            - name: APP_{{ $tenantFetcherJobName }}_REGIONAL_CONFIG_{{ $regionNameEnv }}_ENDPOINT_SUBACCOUNT_MOVED
              value: {{ $regionCfg.api.endpoints.subaccountMoved }}
            {{- end }}
            {{- end }}
            # Kubernetes config
            - name: APP_{{ $tenantFetcherJobName }}_USE_KUBERNETES
              value: "true"
            - name: APP_{{ $tenantFetcherJobName }}_CONFIGMAP_NAMESPACE
              value: {{ $config.kubernetes.configMapNamespace }}
              {{ $configmapName := printf "%s-%s-config" $.Chart.Name $tenantFetcherJobName }}
            - name: APP_{{ $tenantFetcherJobName }}_LAST_EXECUTION_TIME_CONFIG_MAP_NAME
              value: {{ $configmapName | lower }}
            - name: APP_{{ $tenantFetcherJobName }}_CONFIGMAP_TIMESTAMP_FIELD
              value: "lastConsumedTenantTimestamp"
            - name: APP_{{ $tenantFetcherJobName }}_CONFIGMAP_RESYNC_TIMESTAMP_FIELD
              value: "lastFullResyncTimestamp"
            # Kubernetes client config
            - name: APP_{{ $tenantFetcherJobName }}_KUBERNETES_POLL_INTERVAL
              value: {{ $config.kubernetes.pollInterval }}
            - name: APP_{{ $tenantFetcherJobName }}_KUBERNETES_POLL_TIMEOUT
              value: {{ $config.kubernetes.pollTimeout }}
            - name: APP_{{ $tenantFetcherJobName }}_KUBERNETES_TIMEOUT
              value: {{ $config.kubernetes.timeout }}
            # Query config
            - name: APP_{{ $tenantFetcherJobName }}_QUERY_PAGE_NUM_FIELD
              value: {{ $config.queryMapping.pageNumField }}
            - name: APP_{{ $tenantFetcherJobName }}_QUERY_PAGE_SIZE_FIELD
              value: {{ $config.queryMapping.pageSizeField }}
            - name: APP_{{ $tenantFetcherJobName }}_QUERY_REGION_FIELD
              value: {{ default "region" $config.queryMapping.regionField }}
            - name: APP_{{ $tenantFetcherJobName }}_QUERY_TIMESTAMP_FIELD
              value: {{ $config.queryMapping.timestampField }}
            - name: APP_{{ $tenantFetcherJobName }}_QUERY_PAGE_START
              value: "{{ $config.query.startPage}}"
            - name: APP_{{ $tenantFetcherJobName }}_QUERY_PAGE_SIZE
              value: "{{ $config.query.pageSize}}"
            # Sync tenants config
            - name: APP_{{ $tenantFetcherJobName }}_TENANT_FETCHER_JOB_INTERVAL
              value: {{ default "1m" $config.job.interval}}
            - name: APP_{{ $tenantFetcherJobName }}_PAGE_WORKERS
              value: {{ default "2" $config.pageWorkers | quote }}
            - name: APP_{{ $tenantFetcherJobName }}_TENANT_INSERT_CHUNK_SIZE
              value: {{ default "500" $config.tenantInsertChunkSize | quote }}
            # API Regional config
          {{- end }}
          {{- end }}
          livenessProbe:
            httpGet:
              port: {{.Values.deployment.args.containerPort }}
              path: "{{ .Values.global.tenantFetcher.prefix }}/healthz"
            initialDelaySeconds: {{ .Values.global.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.global.livenessProbe.timeoutSeconds }}
            periodSeconds: {{.Values.global.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              port: {{.Values.deployment.args.containerPort }}
              path: "{{ .Values.global.tenantFetcher.prefix }}/readyz"
            initialDelaySeconds: {{ .Values.global.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.global.readinessProbe.timeoutSeconds }}
            periodSeconds: {{.Values.global.readinessProbe.periodSeconds }}
          volumeMounts:
            - name: dependencies-config
              mountPath: "{{ .Values.global.tenantFetcher.dependenciesConfig.path }}"
              readOnly: true
            - name: credentials-secret
              mountPath: {{ .Values.global.tenantFetcher.k8sSecret.path }}
              readOnly: true
        {{- if eq .Values.global.database.embedded.enabled false }}
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.23.0-alpine
          command: ["/cloud_sql_proxy",
                    "-instances={{ .Values.global.database.managedGCP.instanceConnectionName }}=tcp:5432",
                    "-term_timeout=2s"]
          resources:
          {{- toYaml .Values.deployment.resourcesCloudsqlProxy | nindent 12 }}
          {{- with .Values.deployment.securityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
          {{- end }}
        {{- end }}
---
{{ $outerScope := . }}
{{- range $tenantFetcherName, $config := .Values.global.tenantFetchers -}}
{{ if eq $config.enabled true }}
{{ $configmapName := printf "%s-%s-config" $.Chart.Name $tenantFetcherName }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $configmapName }}
  namespace: "{{ $config.kubernetes.configMapNamespace }}"
  labels:
    app: {{ $.Chart.Name }}
    release: {{ $.Release.Name }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "name" $outerScope }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
{{ $configmap := (lookup "v1" "ConfigMap" $config.kubernetes.configMapNamespace $configmapName) }}
{{ if empty $configmap }}
data:
  lastConsumedTenantTimestamp: "1"
  lastFullResyncTimestamp: "1"
{{ else }}
data:
{{ toYaml $configmap.data | indent 2}}
{{ end }}
{{ end }}
{{- end -}}
