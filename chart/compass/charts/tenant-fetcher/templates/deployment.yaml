apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.deployment.minReplicas }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
  strategy:
    {{- toYaml .Values.deployment.strategy | nindent 4 }}
  template:
    metadata:
      annotations:
        {{ if .Values.deployment.resourcesIstioProxy.requests.cpu }}
        sidecar.istio.io/proxyCPU: {{ .Values.deployment.resourcesIstioProxy.requests.cpu }}
        {{ end }}
        {{ if .Values.deployment.resourcesIstioProxy.requests.memory }}
        sidecar.istio.io/proxyMemory: {{ .Values.deployment.resourcesIstioProxy.requests.memory }}
        {{ end }}
        {{ if .Values.deployment.resourcesIstioProxy.limits.cpu }}
        sidecar.istio.io/proxyCPULimit: {{ .Values.deployment.resourcesIstioProxy.limits.cpu }}
        {{ end }}
        {{ if .Values.deployment.resourcesIstioProxy.limits.memory }}
        sidecar.istio.io/proxyMemoryLimit: {{ .Values.deployment.resourcesIstioProxy.limits.memory }}
        {{ end }}
      labels:
        app: {{ .Chart.Name }}
        reqlimit: {{ .Values.global.istio.ingressgateway.requestPayloadSizeLimit2MBLabel }}
        release: {{ .Release.Name }}
    spec:
      {{ if $.Values.global.isLocalEnv }}
      # HostAliases are used by Pod to resolve kyma.local domain
      hostAliases:
        - ip: {{ $.Values.global.minikubeIP }}
          hostnames:
            # Used for calls to Director
            - "{{ $.Values.global.gateway.tls.secure.internal.host }}.{{ $.Values.global.ingress.domainName }}"
      {{ end }}
      serviceAccountName: {{ template "fullname" . }}
      nodeSelector:
        {{- toYaml .Values.deployment.nodeSelector | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ $.Values.global.images.containerRegistry.path }}/{{ $.Values.global.images.director.dir }}compass-director:{{ $.Values.global.images.director.version }}
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          command:
            - "/bin/sh"
          args:
              - "-c"
              - "./tenantfetcher-svc; exit_code=$?; echo '# KILLING PILOT-AGENT #'; pkill -INT cloud_sql_proxy; curl -XPOST http://127.0.0.1:15020/quitquitquit; sleep 5; exit $exit_code;"
          ports:
            - name: http
              containerPort: {{ .Values.deployment.args.containerPort }}
              protocol: TCP
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          {{- with .Values.deployment.securityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
          {{- end }}
          env:
            - name: APP_TENANT_PROVIDER_TENANT_ID_PROPERTY
              value: {{ .Values.global.tenantFetcher.tenantProvider.tenantIdProperty }}
            - name: APP_TENANT_PROVIDER_CUSTOMER_ID_PROPERTY
              value: {{ .Values.global.tenantFetcher.tenantProvider.customerIdProperty }}
            - name: APP_TENANT_PROVIDER_SUBACCOUNT_TENANT_ID_PROPERTY
              value: {{ .Values.global.tenantFetcher.tenantProvider.subaccountTenantIdProperty }}
            - name: APP_TENANT_PROVIDER_SUBDOMAIN_PROPERTY
              value: {{ .Values.global.tenantFetcher.tenantProvider.subdomainProperty }}
            - name: APP_TENANT_PROVIDER
              value: {{ .Values.global.tenantFetcher.tenantProvider.name }}
            - name: APP_TENANT_PROVIDER_SUBSCRIPTION_PROVIDER_ID_PROPERTY
              value: {{ .Values.global.tenantFetcher.tenantProvider.subscriptionProviderIdProperty }}
            - name: APP_DEFAULT_SCENARIO_ENABLED
              value: {{ .Values.global.enableCompassDefaultScenarioAssignment | quote }}
            - name: APP_LOG_FORMAT
              value: {{.Values.global.log.format | quote }}
            - name: APP_ADDRESS
              value: "0.0.0.0:{{ .Values.deployment.args.containerPort }}"
            - name: APP_ROOT_API
              value: "{{ .Values.global.tenantFetcher.prefix }}"
            - name: APP_TENANT_ON_DEMAND_HANDLER_ENDPOINT
              value: "{{ .Values.global.tenantFetcher.server.fetchTenantEndpoint }}"
            - name: APP_REGIONAL_HANDLER_ENDPOINT
              value: "{{ .Values.global.tenantFetcher.server.regionalHandlerEndpoint }}"
            - name: APP_DEPENDENCIES_ENDPOINT
              value: "{{ .Values.global.tenantFetcher.server.dependenciesEndpoint }}"
            - name: APP_TENANT_PATH_PARAM
              value: "{{ .Values.global.tenantFetcher.server.tenantPathParam }}"
            - name: APP_REGION_PATH_PARAM
              value: "{{ .Values.global.tenantFetcher.server.regionPathParam }}"
            - name: APP_JWKS_ENDPOINT
              value: "{{ .Values.global.tenantFetcher.authentication.jwksEndpoint }}"
            - name: APP_SUBSCRIPTION_CALLBACK_SCOPE
              value: {{ .Values.global.tenantFetcher.requiredAuthScope | quote }}
            - name: APP_FETCH_TENANT_ON_DEMAND_SCOPE
              value: {{ .Values.global.tenantFetcher.fetchTenantAuthScope | quote }}
            - name: APP_DIRECTOR_GRAPHQL_ENDPOINT
              value: "https://{{ $.Values.global.gateway.tls.secure.internal.host }}.{{ $.Values.global.ingress.domainName }}{{ $.Values.global.director.prefix }}/graphql"
            - name: APP_HTTP_CLIENT_SKIP_SSL_VALIDATION
              value: {{ $.Values.global.http.client.skipSSLValidation | quote }}
            - name: APP_DB_USER
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-username
            - name: APP_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-password
            - name: APP_DB_HOST
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-serviceName
            - name: APP_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-servicePort
            - name: APP_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-db-name
            - name: APP_DB_SSL
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-sslMode
            - name: APP_DB_MAX_OPEN_CONNECTIONS
              value: {{ .Values.database.dbPool.maxOpenConnections | quote }}
            - name: APP_DB_MAX_IDLE_CONNECTIONS
              value: {{ .Values.database.dbPool.maxIdleConnections | quote }}
            - name: APP_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.tenantFetcher.secret.name }}
                  key: {{ .Values.global.tenantFetcher.secret.clientIdKey }}
            - name: APP_OAUTH_AUTH_MODE
              value: {{ .Values.global.tenantFetcher.secret.oauthMode }}
            - name: APP_OAUTH_TOKEN_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.tenantFetcher.secret.name }}
                  key: {{ .Values.global.tenantFetcher.secret.oauthUrlKey }}
            - name: APP_OAUTH_TOKEN_PATH
              value: {{  .Values.global.tenantFetcher.oauth.tokenPath }}
            - name: APP_OAUTH_SKIP_SSL_VALIDATION
              value: {{ .Values.global.tenantFetcher.secret.skipSSLValidation | quote }}
            - name: APP_OAUTH_X509_CERT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.tenantFetcher.secret.name }}
                  key: {{ .Values.global.tenantFetcher.secret.clientCertKey }}
            - name: APP_OAUTH_X509_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.tenantFetcher.secret.name }}
                  key: {{ .Values.global.tenantFetcher.secret.clientKeyKey }}
            - name: APP_ENDPOINT_SUBACCOUNT_CREATED
              value: {{ default "127.0.0.1/events?type=subaccount-created" .Values.global.tenantFetcher.endpoints.subaccountCreated }}
            - name: APP_TENANT_TOTAL_PAGES_FIELD
              value: {{ .Values.global.tenantFetcher.fieldMapping.totalPagesField }}
            - name: APP_TENANT_TOTAL_RESULTS_FIELD
              value: {{ .Values.global.tenantFetcher.fieldMapping.totalResultsField }}
            - name: APP_TENANT_EVENTS_FIELD
              value: {{ .Values.global.tenantFetcher.fieldMapping.tenantEventsField }}
            - name: APP_MAPPING_FIELD_ID
              value: {{ .Values.global.tenantFetcher.fieldMapping.idField }}
            - name: APP_MAPPING_FIELD_NAME
              value: {{ .Values.global.tenantFetcher.fieldMapping.nameField }}
            - name: APP_MAPPING_FIELD_CUSTOMER_ID
              value: {{ .Values.global.tenantFetcher.fieldMapping.customerIdField }}
            - name: APP_MAPPING_FIELD_SUBDOMAIN
              value: {{ .Values.global.tenantFetcher.fieldMapping.subdomainField }}
            - name: APP_MAPPING_FIELD_DETAILS
              value: {{ .Values.global.tenantFetcher.fieldMapping.detailsField }}
            - name: APP_MAPPING_FIELD_DISCRIMINATOR
              value: {{ .Values.global.tenantFetcher.fieldMapping.discriminatorField }}
            - name: APP_MAPPING_VALUE_DISCRIMINATOR
              value: {{ .Values.global.tenantFetcher.fieldMapping.discriminatorValue }}
            - name: APP_MAPPING_FIELD_REGION
              value: {{  default "region" .Values.global.tenantFetcher.fieldMapping.regionField }}
            - name: APP_MAPPING_FIELD_ENTITY_TYPE
              value: {{ .Values.global.tenantFetcher.fieldMapping.entityTypeField }}
            - name: APP_GLOBAL_ACCOUNT_KEY
              value: {{ default "gaID" .Values.global.tenantFetcher.fieldMapping.globalAccountID }}
          livenessProbe:
            httpGet:
              port: {{.Values.deployment.args.containerPort }}
              path: "{{ .Values.global.tenantFetcher.prefix }}/healthz"
            initialDelaySeconds: {{ .Values.global.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.global.livenessProbe.timeoutSeconds }}
            periodSeconds: {{.Values.global.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              port: {{.Values.deployment.args.containerPort }}
              path: "{{ .Values.global.tenantFetcher.prefix }}/readyz"
            initialDelaySeconds: {{ .Values.global.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.global.readinessProbe.timeoutSeconds }}
            periodSeconds: {{.Values.global.readinessProbe.periodSeconds }}
        {{if eq .Values.global.database.embedded.enabled false}}
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.23.0-alpine
          command: ["/cloud_sql_proxy",
                    "-instances={{ .Values.global.database.managedGCP.instanceConnectionName }}=tcp:5432",
                    "-term_timeout=2s"]
          resources:
          {{- toYaml .Values.deployment.resourcesCloudsqlProxy | nindent 12 }}
          {{- with .Values.deployment.securityContext }}
          securityContext:
          {{ toYaml . | indent 12 }}
          {{- end }}
        {{end}}