apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
   "helm.sh/hook": pre-install,pre-rollback,pre-upgrade
   "helm.sh/hook-weight": "-5"
   "helm.sh/hook-delete-policy": before-hook-creation
  name: update-expected-schema-version
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    "helm.sh/hook": pre-install,pre-rollback,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
  name: update-expected-schema-version
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: update-expected-schema-version
subjects:
  - kind: ServiceAccount
    name: update-expected-schema-version
    namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    "helm.sh/hook": pre-install,pre-rollback,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
  name: update-expected-schema-version
  namespace: {{ .Release.Namespace }}
rules:
  - apiGroups: ["*"]
    resources: ["configmaps"]
    verbs: ["create", "get", "patch"]
---
apiVersion: batch/v1
kind: Job
metadata:
  name: update-expected-schema-version
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Release.Name }}
  annotations:
    "helm.sh/hook": pre-install,pre-rollback,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      serviceAccountName: update-expected-schema-version
      restartPolicy: Never
      shareProcessNamespace: true
      containers:
      - name: editor
        image: k3d-kyma-registry:5001/compass-schema-migrator:dump
        imagePullPolicy: IfNotPresent
        command:
        - "/bin/bash"
        args:
        - "-c"
        - " chmod +x ./update-expected-schema-version.sh; ./update-expected-schema-version.sh --component director --cm-name {{ .Values.global.expectedSchemaVersionUpdateJob.cm.name }}; exit_code=$?; echo '# KILLING PILOT-AGENT #'; pkill -INT cloud_sql_proxy; curl -XPOST http://127.0.0.1:15020/quitquitquit; sleep 5; exit $exit_code;"
