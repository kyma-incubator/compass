{{- range $tenantFetcherName, $config := .Values.global.tenantFetchers -}}
{{- if and (eq $config.enabled true) (eq $config.manageSecrets true) }}
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{ $config.secret.name }}
  namespace: {{ $.Release.Namespace }}
data:
  {{ $config.secret.clientIdKey }}: {{ $config.oauth.client | b64enc | quote }}
  {{ $config.secret.clientSecretKey }}: {{ $config.oauth.secret | b64enc | quote }}
  {{ $config.secret.oauthUrlKey }}: {{ tpl $config.oauth.tokenURL $ | b64enc | quote }}
  {{ if eq $config.secret.oauthMode "oauth-mtls" }} # Oauth mode can be 'standard'(in productive charts too). In this case, clientCertKey and clientKeyKey don't exist and we shouldn't try to access them.
  {{ $config.secret.clientCertKey }}: {{ $.Values.global.connector.caCertificate | b64enc | quote }}
  {{ $config.secret.clientKeyKey }}: {{ $.Values.global.connector.caKey | b64enc | quote }}
  {{ end }}
{{- end -}}
{{ end }}
---
{{- if eq $.Values.global.tenantFetcher.manageSecrets true }}
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{ $.Values.global.tenantFetcher.secret.name }}
  namespace: {{ $.Release.Namespace }}
data:
  {{ $.Values.global.tenantFetcher.secret.clientIdKey }}: {{ $.Values.global.tenantFetcher.oauth.client | b64enc | quote }}
  {{ $.Values.global.tenantFetcher.secret.oauthUrlKey }}: {{ tpl $.Values.global.tenantFetcher.oauth.tokenURL $ | b64enc | quote }}
  {{ $.Values.global.tenantFetcher.secret.clientCertKey }}: {{ $.Values.global.connector.caCertificate | b64enc | quote }}
  {{ $.Values.global.tenantFetcher.secret.clientKeyKey }}: {{ $.Values.global.connector.caKey | b64enc | quote }}
{{- end -}}