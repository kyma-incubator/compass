{{- range $tenantFetcherName, $config := .Values.global.tenantFetchers -}}
{{- if and (eq $config.enabled true) (eq $config.manageSecrets true) }}
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{ $config.authConfig.secret.name }}-{{ $tenantFetcherName }}
  namespace: {{ $.Release.Namespace }}
data:
  {{- $key := $config.authConfig.secret.key }}
  {{- $apiKey := $config.api.authConfigSecretKey }}
  {{- $tokenURL := printf "https://%s.%s:443" $.Values.global.externalServicesMock.certSecuredHost $.Values.global.ingress.domainName }}
  {{- with $config.authConfig }}
  {{ $key }}: {{ printf `{"%s":{"%s":"client_id","%s":"client_secret","%s":"%s","%s":"%s","%s":"%s"}}` $apiKey .clientIDPath .clientSecretPath .clientCertPath $.Values.global.connector.caCertificate .clientKeyPath $.Values.global.connector.caKey .tokenURLPath $tokenURL | b64enc | quote }}
  {{- end }}
  {{- end }}
{{- end -}}
