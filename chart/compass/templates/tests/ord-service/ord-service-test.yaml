{{ if .Values.global.isForTesting }}
apiVersion: "testing.kyma-project.io/v1alpha1"
kind: TestDefinition
metadata:
  name: {{ .Chart.Name }}-e2e-ord-service
  labels:
    app: {{ .Chart.Name }}-ord-service-tests-app
    release: {{ .Release.Name }}
    app.kubernetes.io/name: {{ .Chart.Name }}-ord-service-tests
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  namespace: {{ .Values.global.tests.namespace }}
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: {{ .Chart.Name }}-ord-service-tests-app
    spec:
      {{ if .Values.global.isLocalEnv }}
      hostAliases:
        - ip: {{ .Values.global.minikubeIP }}
          hostnames:
            - "{{ .Values.global.gateway.tls.host }}.{{ .Values.global.ingress.domainName }}"
            - "{{ .Values.global.gateway.mtls.external.host }}.{{ .Values.global.ingress.domainName }}"
            - "oauth2.{{ .Values.global.ingress.domainName }}"
      {{ end }}
      serviceAccountName: {{ .Chart.Name }}-e2e-ord-service
      containers:
        - name: ord-service-tests
          image: {{ .Values.global.images.containerRegistry.path }}/{{ .Values.global.images.e2e_tests.dir }}compass-tests:{{ .Values.global.images.e2e_tests.version }}
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh"]
          args: ["-c", "./ord-service.test -test.v; exit_code=$?; curl -XPOST http://127.0.0.1:15020/quitquitquit; sleep 4; exit $exit_code;"]
          env:
            - name: EXTERNAL_SERVICES_MOCK_BASE_URL
              value: "{{ .Values.global.tests.externalServicesMockFQDN }}:8080"
            - name: ORD_SERVICE_URL
              value: "https://{{ .Values.global.gateway.tls.host }}.{{ .Values.global.ingress.domainName }}{{ .Values.global.ordService.prefix }}"
            - name: ORD_EXTERNAL_CERT_SECURED_SERVICE_URL
              value: "https://{{ .Values.global.gateway.mtls.external.host }}.{{ .Values.global.ingress.domainName }}{{ .Values.global.ordService.prefix }}"
            - name: ORD_SERVICE_STATIC_PREFIX
              value: "{{ .Values.global.ordService.staticPrefix }}"
            - name: ORD_SERVICE_DEFAULT_RESPONSE_TYPE
              value: {{ .Values.global.ordService.defaultResponseType }}
            - name: DIRECTOR_EXTERNAL_CERT_SECURED_URL
              value: "https://{{ .Values.global.gateway.mtls.external.host }}.{{ .Values.global.ingress.domainName }}{{ .Values.global.director.prefix }}/graphql"
            - name: SKIP_SSL_VALIDATION
              value: "{{ .Values.global.tests.http.client.skipSSLValidation }}"
            - name: CONSUMER_TOKEN_URL
              value: {{ .Values.global.tests.ordService.consumerTokenURL }}
            - name: TOKEN_PATH
              value: {{ .Values.global.externalServicesMock.oauthSecret.oauthTokenPath }}
            - name: PROVIDER_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.externalServicesMock.oauthSecret.name }}
                  key: {{ .Values.global.externalServicesMock.oauthSecret.clientIdKey }}
            - name: PROVIDER_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.externalServicesMock.oauthSecret.name }}
                  key: {{ .Values.global.externalServicesMock.oauthSecret.clientSecretKey }}
            - name: SUBSCRIPTION_CONFIG_URL
              value: {{ .Values.global.tests.subscriptionURL }}
            - name: SUBSCRIPTION_CONFIG_TOKEN_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.tests.ordService.subscriptionOauthSecret.name }}
                  key: {{ .Values.global.tests.ordService.subscriptionOauthSecret.oauthUrlKey }}
            - name: SUBSCRIPTION_CONFIG_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.tests.ordService.subscriptionOauthSecret.name }}
                  key: {{ .Values.global.tests.ordService.subscriptionOauthSecret.clientIdKey }}
            - name: SUBSCRIPTION_CONFIG_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.tests.ordService.subscriptionOauthSecret.name }}
                  key: {{ .Values.global.tests.ordService.subscriptionOauthSecret.clientSecretKey }}
            - name: SUBSCRIPTION_CONFIG_PROVIDER_LABEL_KEY
              value: {{ .Values.global.director.subscription.subscriptionProviderLabelKey }}
            - name: SUBSCRIPTION_CONFIG_PROVIDER_ID
              value: "{{ .Values.global.tests.subscriptionProviderIdValue }}"
            - name: TENANT_CONFIG_TENANT_FETCHER_URL
              value: "https://{{ .Values.global.gateway.tls.host }}.{{ .Values.global.ingress.domainName }}"
            - name: TENANT_CONFIG_ROOT_API
              value: "{{ .Values.global.tenantFetcher.prefix }}"
            - name: TENANT_CONFIG_REGIONAL_HANDLER_ENDPOINT
              value: "{{ .Values.global.tenantFetcher.server.regionalHandlerEndpoint }}"
            - name: TENANT_CONFIG_TENANT_PATH_PARAM
              value: "{{ .Values.global.tenantFetcher.server.tenantPathParam }}"
            - name: TENANT_CONFIG_REGION_PATH_PARAM
              value: "{{ .Values.global.tenantFetcher.server.regionPathParam }}"
            - name: TENANT_CONFIG_REGION
              value: {{ .Values.global.tests.selfRegistration.region }}
            - name: APP_DB_USER
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-username
            - name: APP_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-password
            - name: APP_DB_HOST
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-serviceName
            - name: APP_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-servicePort
            - name: APP_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-db-name
            - name: APP_DB_SSL
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-sslMode
            - name: APP_DEFAULT_SCENARIO_ENABLED
              value: {{ .Values.global.enableCompassDefaultScenarioAssignment | quote }}
            - name: SUBSCRIPTION_CONFIG_SELF_REGISTER_LABEL_KEY
              value: {{ .Values.global.director.selfRegister.label }}
            - name: SUBSCRIPTION_CONFIG_SELF_REGISTER_LABEL_VALUE_PREFIX
              value: {{ .Values.global.director.selfRegister.labelValuePrefix }}
            - name: SUBSCRIPTION_CONFIG_PROPAGATED_PROVIDER_SUBACCOUNT_HEADER
              value: {{ .Values.global.tests.ordService.propagatedProviderSubaccountHeader }}
            - name: TEST_EXTERNAL_CERT_SUBJECT
              value: {{ printf .Values.global.externalCertConfiguration.subjectPattern .Values.global.tests.ordService.providerSubaccountID .Values.global.externalCertConfiguration.locality .Values.global.externalCertConfiguration.commonName }}
            - name: EXTERNAL_CLIENT_CERT_TEST_SECRET_NAME
              value: {{ .Values.global.tests.ordService.externalClientCertTestSecretName }}
            - name: EXTERNAL_CLIENT_CERT_TEST_SECRET_NAMESPACE
              value: {{ .Values.global.tests.ordService.externalClientCertTestSecretNamespace }}
            - name: EXTERNAL_CERT_TEST_JOB_NAME
              value: {{ .Values.global.tests.ordService.externalCertTestJobName }}
            - name: CERT_SVC_INSTANCE_TEST_SECRET_NAME
              value: {{ .Values.global.tests.ordService.certSvcInstanceTestSecretName }}
            - name: EXTERNAL_CERT_CRONJOB_CONTAINER_NAME
              value: {{ .Values.global.externalCertConfiguration.rotationCronjob.containerName }}
            - name: BASIC_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.tests.basicCredentials.secretName }}
                  key: username
            - name: BASIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.tests.basicCredentials.secretName }}
                  key: password
            - name: ACCOUNT_TENANT_ID
              value: {{ .Values.global.tests.ordService.accountTenantID }}
            - name: SUBACCOUNT_TENANT_ID
              value: {{ .Values.global.externalCertConfiguration.ouCertSubaccountID }}
            - name: APP_EXTERNAL_CLIENT_CERT_SECRET
              value: "{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.namespace }}/{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.name }}"
            - name: APP_EXTERNAL_CLIENT_CERT_KEY
              value: "{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.certKey }}"
            - name: APP_EXTERNAL_CLIENT_KEY_KEY
              value: "{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.keyKey }}"
            - name: TEST_CONSUMER_ACCOUNT_ID
              value: {{ .Values.global.tests.ordService.consumerAccountID }}
            - name: TEST_PROVIDER_SUBACCOUNT_ID
              value: {{ .Values.global.tests.ordService.providerSubaccountID }}
            - name: TEST_CONSUMER_SUBACCOUNT_ID
              value: {{ .Values.global.tests.ordService.consumerSubaccountID }}
            - name: TEST_CONSUMER_TENANT_ID
              value: {{ .Values.global.tests.ordService.consumerTenantID }}
            - name: SKIP_TESTS_REGEX
              value: {{ .Values.global.tests.ordService.skipPattern }}
            - name: SELF_REG_DISTINGUISH_LABEL_KEY
              value: {{ .Values.global.tenantFetcher.server.subscriptionProviderLabelKey }}
            - name: SELF_REG_DISTINGUISH_LABEL_VALUE
              value: {{ .Values.global.tests.subscriptionProviderIdValue | quote }}
            - name: SELF_REG_REGION
              value: {{ .Values.global.tests.selfRegistration.region }}
        {{if eq .Values.global.database.embedded.enabled false}}
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.23.0-alpine
          command:
            - /bin/sh
          args:
            - -c
            - "trap 'exit 0' SIGINT SIGTERM; echo 'Waiting for istio-proxy to start...' && sleep 15; /cloud_sql_proxy -instances={{ .Values.global.database.managedGCP.instanceConnectionName }}=tcp:5432 -term_timeout=2s"
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "killall cloud_sql_proxy"]
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz/ready
              port: 15021
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          {{- with .Values.global.tests.securityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
          {{- end }}
          {{end}}
      restartPolicy: Never
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Chart.Name }}-e2e-ord-service
  namespace: {{ .Values.global.tests.namespace }}
  {{- if eq .Values.global.database.embedded.enabled false }}
  annotations:
    iam.gke.io/gcp-service-account: {{ $.Values.global.database.sqlProxyServiceAccount | quote }}
  {{- end }}
  labels:
    release: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Chart.Name }}-e2e-ord-service
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
rules:
- apiGroups: ["*"]
  resources: ["secrets"]
  resourceNames: ["{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.name }}"]
  verbs: ["get"]
- apiGroups: ["*"]
  resources: ["secrets"]
  resourceNames: ["{{ .Values.global.tests.ordService.externalClientCertTestSecretName }}"]
  verbs: ["get", "delete"]
- apiGroups: ["*"]
  resources: ["jobs"]
  resourceNames: [{{ .Values.global.tests.ordService.externalCertTestJobName }}]
  verbs: ["get", "delete"]
- apiGroups: ["*"]
  resources: ["jobs"]
  resourceNames: []
  verbs: ["create"]
- apiGroups: ["*"]
  resources: ["cronjobs"]
  resourceNames: ["director-external-certificate-rotation-job"]
  verbs: ["get"]
- apiGroups: ["*"]
  resources: ["pods", "pods/log"]
  verbs: ["get", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Chart.Name }}-e2e-ord-service
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
subjects:
- kind: ServiceAccount
  name: {{ .Chart.Name }}-e2e-ord-service
  namespace: {{ .Values.global.tests.namespace }}
roleRef:
  kind: Role
  name: {{ .Chart.Name }}-e2e-ord-service
  apiGroup: rbac.authorization.k8s.io
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Chart.Name }}-e2e-ord-service-client-cert
  namespace: {{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.namespace }}
  labels:
    app: {{ $.Chart.Name }}
    release: {{ $.Release.Name }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "name" . }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
subjects:
  - kind: ServiceAccount
    name: {{ .Chart.Name }}-e2e-ord-service
    namespace: {{ .Values.global.tests.namespace }}
roleRef:
  kind: Role
  name: director-{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.name }}
  apiGroup: rbac.authorization.k8s.io
{{ end }}