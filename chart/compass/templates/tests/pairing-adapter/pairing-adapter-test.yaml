{{ if .Values.global.isForTesting }}
apiVersion: "testing.kyma-project.io/v1alpha1"
kind: TestDefinition
metadata:
  name: {{ .Chart.Name }}-e2e-pairing-adapter
  labels:
    app: {{ .Chart.Name }}-pairing-adapter-tests-app
    release: {{ .Release.Name }}
    app.kubernetes.io/name: {{ .Chart.Name }}-pairing-adapter-tests
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  namespace: {{ .Values.global.tests.namespace }}
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: {{ .Chart.Name }}-pairing-adapter-tests-app
    spec:
      containers:
        - name: pairing-adapter-tests
          image: {{ .Values.global.images.containerRegistry.path }}/{{ .Values.global.images.e2e_tests.dir }}compass-tests:{{ .Values.global.images.e2e_tests.version }}
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh"]
          args: ["-c", "./pairing-adapter.test -test.v; exit_code=$?; echo code is $exit_code; echo 'killing pilot-agent...'; curl -XPOST http://127.0.0.1:15020/quitquitquit; sleep 4; exit $exit_code;"]
          env:
{{ $shouldAdd := true }}
{{- range $adapterName, $config := (index .Values "pairing-adapter").deployment.adapters -}}
{{if and (eq $config.enabled true) (eq $config.auth.type "mtls") $shouldAdd }}
            - name: APP_MTLS_PAIRING_ADAPTER_URL
              value: "http://compass-pairing-adapter.{{ $.Release.Namespace }}.svc.cluster.local/{{ $adapterName }}"
            - name: APP_TEST_TENANT
              value: "{{ $.Values.global.pairingAdapter.e2e.tenant }}"
            - name: APP_TEST_CLIENT_USER
              value: "{{ $.Values.global.pairingAdapter.e2e.clientUser }}"
            - name: APP_TEST_APPLICATION_ID
              value: "{{ $.Values.global.pairingAdapter.e2e.appID }}"
            - name: APP_TEST_APPLICATION_NAME
              value: "{{ $.Values.global.pairingAdapter.e2e.appName }}"
            - name: APP_DIRECTOR_EXTERNAL_CERT_SECURED_URL
              value: "https://{{ .Values.global.gateway.mtls.external.host }}.{{ .Values.global.ingress.domainName }}{{ .Values.global.director.prefix }}/graphql"
            - name: APP_SKIP_SSL_VALIDATION
              value: "{{ .Values.global.tests.http.client.skipSSLValidation }}"
            - name: APP_EXTERNAL_CLIENT_CERT_SECRET
              value: "{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.namespace }}/{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.name }}"
            - name: APP_EXTERNAL_CLIENT_CERT_KEY
              value: "{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.certKey }}"
            - name: APP_EXTERNAL_CLIENT_KEY_KEY
              value: "{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.keyKey }}"
{{ $shouldAdd = false }}
{{ end }}
{{- end -}}
      restartPolicy: Never
{{ end }}
