{{ if .Values.global.isForTesting }}
apiVersion: "testing.kyma-project.io/v1alpha1"
kind: TestDefinition
metadata:
  name: {{ .Chart.Name }}-e2e-pairing-adapter
  labels:
    app: {{ .Chart.Name }}-pairing-adapter-tests-app
    release: {{ .Release.Name }}
    app.kubernetes.io/name: {{ .Chart.Name }}-pairing-adapter-tests
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  namespace: {{ .Values.global.tests.namespace }}
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: {{ .Chart.Name }}-pairing-adapter-tests-app
    spec:
      serviceAccountName: {{ $.Chart.Name }}-e2e-pairing-adapter
    {{ if eq .Values.global.portieris.isEnabled true }}
      imagePullSecrets:
      - name: {{ .Values.global.portieris.imagePullSecretName }}
    {{ end }}
      containers:
        {{if eq .Values.global.database.embedded.enabled false}}
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.23.0-alpine
          command:
            - /bin/sh
          args:
            - -c
            - "trap 'exit 0' SIGINT SIGTERM; echo 'Waiting for istio-proxy to start...' && sleep 15; /cloud_sql_proxy -instances={{ .Values.global.database.managedGCP.instanceConnectionName }}=tcp:5432 -term_timeout=2s"
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "killall cloud_sql_proxy"]
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz/ready
              port: 15021
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          {{- with .Values.global.tests.securityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
          {{- end }}
          {{end}}
        - name: pairing-adapter-tests
          image: {{ .Values.global.images.containerRegistry.path }}/{{ .Values.global.images.e2e_tests.dir }}compass-e2e-tests:{{ .Values.global.images.e2e_tests.version }}
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh"]
          args: ["-c", "./pairing-adapter.test -test.v; exit_code=$?; echo code is $exit_code; echo 'killing pilot-agent...'; curl -XPOST http://127.0.0.1:15020/quitquitquit; sleep 4; exit $exit_code;"]
          env:
{{ $shouldAdd := true }}
{{- range $adapterName, $config := (index .Values "pairing-adapter").deployment.adapters -}}
{{if and (eq $config.enabled true) (eq $config.auth.type "mtls") $shouldAdd }}
            - name: APP_FQDN_PAIRING_ADAPTER_URL
              value: "http://compass-pairing-adapter.{{ $.Release.Namespace }}.svc.cluster.local/{{ $adapterName }}"
            - name: APP_TEST_TENANT
              value: "{{ $.Values.global.pairingAdapter.e2e.tenant }}"
            - name: APP_TEST_CLIENT_USER
              value: "{{ $.Values.global.pairingAdapter.e2e.clientUser }}"
            - name: APP_TEST_APPLICATION_ID
              value: "{{ $.Values.global.pairingAdapter.e2e.appID }}"
            - name: APP_TEST_APPLICATION_NAME
              value: "{{ $.Values.global.pairingAdapter.e2e.appName }}"
            - name: APP_DIRECTOR_EXTERNAL_CERT_SECURED_URL
              value: "https://{{ $.Values.global.gateway.mtls.external.host }}.{{ $.Values.global.ingress.domainName }}{{ $.Values.global.director.prefix }}/graphql"
            - name: APP_SKIP_SSL_VALIDATION
              value: "{{ $.Values.global.tests.http.client.skipSSLValidation }}"
            - name: APP_EXTERNAL_CLIENT_CERT_SECRET
              value: "{{ $.Values.global.externalCertConfiguration.secrets.externalClientCertSecret.namespace }}/{{ $.Values.global.externalCertConfiguration.secrets.externalClientCertSecret.name }}"
            - name: APP_EXTERNAL_CLIENT_CERT_KEY
              value: "{{ $.Values.global.externalCertConfiguration.secrets.externalClientCertSecret.certKey }}"
            - name: APP_EXTERNAL_CLIENT_KEY_KEY
              value: "{{ $.Values.global.externalCertConfiguration.secrets.externalClientCertSecret.keyKey }}"
            - name: APP_EXT_SVC_CLIENT_CERT_SECRET
              value: "{{ .Values.global.extSvcCertConfiguration.secrets.extSvcClientCertSecret.namespace }}/{{ .Values.global.extSvcCertConfiguration.secrets.extSvcClientCertSecret.name }}"
            - name: APP_EXT_SVC_CLIENT_CERT_KEY
              value: "{{ .Values.global.extSvcCertConfiguration.secrets.extSvcClientCertSecret.certKey }}"
            - name: APP_EXT_SVC_CLIENT_KEY_KEY
              value: "{{ .Values.global.extSvcCertConfiguration.secrets.extSvcClientCertSecret.keyKey }}"
            - name: APP_IS_LOCAL_ENV
              value: {{ $.Values.global.isLocalEnv | quote }}
            - name: APP_TEMPLATE_NAME
              value: "{{ $.Values.global.pairingAdapter.templateName }}"
            - name: APP_CLIENT_ID_HTTP_HEADER
              value: {{ $.Values.global.director.clientIDHeaderKey }}
            - name: APP_SELF_REG_DISTINGUISH_LABEL_KEY
              value: {{ $.Values.global.director.subscription.subscriptionProviderLabelKey }}
            - name: APP_SELF_REG_DISTINGUISH_LABEL_VALUE
              value: {{ $.Values.global.tests.subscription.subscriptionProviderIdValue | quote }}
            - name: APP_SELF_REG_REGION
              value: {{ $.Values.global.tests.selfRegistration.region }}
            - name: APP_SELF_REG_LABEL_KEY
              value: {{ $.Values.global.director.selfRegister.label }}
            {{ if $.Values.global.isLocalEnv }}
            - name: APP_CONFIG_MAP_NAME
              value: "{{ $.Values.global.pairingAdapter.configMap.name }}"
            - name: APP_CONFIG_MAP_NAMESPACE
              value: "{{ $.Values.global.pairingAdapter.configMap.namespace }}"
            - name: APP_CONFIG_MAP_KEY
              value: "{{ $.Values.global.pairingAdapter.configMap.key }}"
            - name: APP_INTEGRATION_SYSTEM_ID
              value: "{{ $.Values.global.pairingAdapter.configMap.integrationSystemID }}"
            - name: APP_LOCAL_ADAPTER_FQDN
              value: "{{ $.Values.global.pairingAdapter.configMap.localAdapterFQDN }}"
            {{ end }}
            - name: APP_DB_USER
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-username
            - name: APP_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-password
            - name: APP_DB_HOST
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-serviceName
            - name: APP_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-servicePort
            - name: APP_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-db-name
            - name: APP_DB_SSL
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-sslMode
{{ $shouldAdd = false }}
{{ end }}
{{- end -}}
      restartPolicy: Never
{{ end }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $.Chart.Name }}-e2e-pairing-adapter
  namespace: {{ .Values.global.tests.namespace }}
  {{- if eq .Values.global.database.embedded.enabled false }}
  annotations:
    iam.gke.io/gcp-service-account: {{ $.Values.global.database.sqlProxyServiceAccount | quote }}
  {{- end }}
  labels:
    app: {{ $.Chart.Name }}
    release: {{ $.Release.Name }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "name" . }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ $.Chart.Name }}-e2e-pairing-adapter
  namespace: {{ $.Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
rules:
  - apiGroups: ["*"]
    resources: ["configmaps"]
    resourceNames: ["{{ .Values.global.pairingAdapter.configMap.name }}"]
    verbs: ["get", "update", "patch"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ $.Chart.Name }}-e2e-pairing-adapter-client-cert
  namespace: {{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.namespace }}
  labels:
    app: {{ $.Chart.Name }}
    release: {{ $.Release.Name }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "name" . }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
subjects:
  - kind: ServiceAccount
    name: {{ $.Chart.Name }}-e2e-pairing-adapter
    namespace: {{ .Values.global.tests.namespace }}
roleRef:
  kind: Role
  name: director-{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.name }}
  apiGroup: rbac.authorization.k8s.io
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ $.Chart.Name }}-e2e-pairing-adapter-configmap
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ $.Chart.Name }}
    release: {{ $.Release.Name }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "name" . }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
subjects:
  - kind: ServiceAccount
    name: {{ $.Chart.Name }}-e2e-pairing-adapter
    namespace: {{ .Values.global.tests.namespace }}
roleRef:
  kind: Role
  name: {{ $.Chart.Name }}-e2e-pairing-adapter
  apiGroup: rbac.authorization.k8s.io
