{{if and (eq .Values.global.externalServicesMock.enabled true) (eq .Values.gateway.gateway.auditlog.enabled true) }}
apiVersion: "testing.kyma-project.io/v1alpha1"
kind: TestDefinition
metadata:
  name: {{ .Chart.Name }}-e2e-external-services-mock
  labels:
    app: {{ .Chart.Name }}-external-services-mock-tests-app
    release: {{ .Release.Name }}
    app.kubernetes.io/name: {{ .Chart.Name }}-external-services-mock-tests
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  namespace: {{ .Values.global.tests.namespace }}
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: {{ .Chart.Name }}-external-services-mock-tests-app
    spec:
      {{ if .Values.global.isLocalEnv }}
      hostAliases:
        - ip: {{ .Values.global.minikubeIP }}
          hostnames:
            - "{{ .Values.global.gateway.tls.host }}.{{ .Values.global.ingress.domainName }}"
            - "oauth2.{{ .Values.global.ingress.domainName }}"
            - "{{ .Values.global.gateway.tls.secure.oauth.host }}.{{ .Values.global.ingress.domainName }}"
            - "{{ .Values.global.gateway.mtls.host }}.{{ .Values.global.ingress.domainName }}"
            - "{{ .Values.global.gateway.mtls.external.host }}.{{ .Values.global.ingress.domainName }}"
            - "compass-external-services-mock.compass-system.svc.cluster.local"
            - "{{ .Values.global.externalServicesMock.certSecuredHost }}.{{.Values.global.ingress.domainName}}"
      {{ end }}
      containers:
        - name: external-services-mock-tests
          image: {{ .Values.global.images.containerRegistry.path }}/{{ .Values.global.images.e2e_tests.dir }}compass-tests:{{ .Values.global.images.e2e_tests.version }}
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh"]
          args: ["-c", "/external-services-mock.test -test.v; exit_code=$?; echo code is $exit_code; echo 'killing pilot-agent...'; curl -XPOST http://127.0.0.1:15020/quitquitquit; sleep 4; exit $exit_code;"]
          env:
            - name: DIRECTOR_EXTERNAL_CERT_SECURED_URL
              value: "https://{{ .Values.global.gateway.mtls.external.host }}.{{ .Values.global.ingress.domainName }}{{ .Values.global.director.prefix }}/graphql"
            - name: APP_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.externalServicesMock.oauthSecret.name }}
                  key: {{ .Values.global.externalServicesMock.oauthSecret.clientIdKey }}
            - name: APP_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.externalServicesMock.oauthSecret.name }}
                  key: {{ .Values.global.externalServicesMock.oauthSecret.clientSecretKey }}
            - name: BASIC_CREDENTIALS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.tests.basicCredentials.secretName }}
                  key: username
            - name: BASIC_CREDENTIALS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.tests.basicCredentials.secretName }}
                  key: password
            - name: DEFAULT_TEST_TENANT
              value: "{{ (index .Values.global.tenants 9).id }}"
            - name: EXTERNAL_SERVICES_MOCK_BASE_URL
              value: "{{ .Values.global.tests.externalServicesMockFQDN }}:8080/"
            - name: EXTERNAL_SERVICES_MOCK_MTLS_SECURED_URL
              value: "https://{{ .Values.global.externalServicesMock.certSecuredHost }}.{{.Values.global.ingress.domainName}}:443/"
            - name: SKIP_TESTS_REGEX
              value: {{ .Values.global.tests.externalServicesMock.skipPattern }}
            - name: AUDITLOG_MANAGEMENT_API_PATH
              value: "{{ .Values.global.externalServicesMock.auditlog.managementApiPath }}"
            - name: AUDITLOG_MANAGEMENT_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.externalServicesMock.auditlog.secret.name }}
                  key: {{ .Values.global.externalServicesMock.auditlog.secret.urlKey }}
            - name: AUDITLOG_TOKEN_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.externalServicesMock.auditlog.secret.name }}
                  key: {{ .Values.global.externalServicesMock.auditlog.secret.tokenUrlKey }}
            - name: AUDITLOG_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.externalServicesMock.auditlog.secret.name }}
                  key: {{ .Values.global.externalServicesMock.auditlog.secret.clientIdKey }}
            - name: AUDITLOG_X509_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.externalServicesMock.auditlog.secret.name }}
                  key: {{ .Values.global.externalServicesMock.auditlog.secret.clientKeyKey }}
            - name: AUDITLOG_X509_CERT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.externalServicesMock.auditlog.secret.name }}
                  key: {{ .Values.global.externalServicesMock.auditlog.secret.clientCertKey }}
            - name: AUDITLOG_SKIP_SSL_VALIDATION
              value: "{{ .Values.global.auditlog.skipSSLValidation }}"
            - name: APP_EXTERNAL_CLIENT_CERT_SECRET
              value: "{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.namespace }}/{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.name }}"
            - name: APP_EXTERNAL_CLIENT_CERT_KEY
              value: "{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.certKey }}"
            - name: APP_EXTERNAL_CLIENT_KEY_KEY
              value: "{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.keyKey }}"
            - name: CONSUMER_ID 
              value: "{{ .Values.global.externalCertConfiguration.ouCertSubaccountID }}"
            - name: SKIP_SSL_VALIDATION
              value: "{{ .Values.global.tests.http.client.skipSSLValidation.director }}"
      restartPolicy: Never
      serviceAccountName: {{ .Chart.Name }}-operations-tests-service-account
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Chart.Name }}-operations-tests-service-account
  namespace: {{ .Values.global.tests.namespace }}
  labels:
    app: {{ $.Chart.Name }}
    release: {{ $.Release.Name }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "name" . }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Chart.Name }}-operations-tests-operations-role
  namespace: compass-system
rules:
  - apiGroups:
      - operations.compass
    resources:
      - operations
    verbs:
      - get
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Chart.Name }}-operations-tests-operations-role-binding
  namespace: compass-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ .Chart.Name }}-operations-tests-operations-role
subjects:
  - kind: ServiceAccount
    name: {{ .Chart.Name }}-operations-tests-service-account
    namespace: kyma-system
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Chart.Name }}-operations-tests-service-account-client-cert
  namespace: {{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.namespace }}
  labels:
    app: {{ $.Chart.Name }}
    release: {{ $.Release.Name }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "name" . }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
subjects:
  - kind: ServiceAccount
    name: {{ .Chart.Name }}-operations-tests-service-account
    namespace: {{ .Values.global.tests.namespace }}
roleRef:
  kind: Role
  name: director-{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.name }}
  apiGroup: rbac.authorization.k8s.io

{{end}}
