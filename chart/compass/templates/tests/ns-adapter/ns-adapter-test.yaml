apiVersion: "testing.kyma-project.io/v1alpha1"
kind: TestDefinition
metadata:
  name: {{ .Chart.Name }}-e2e-ns-adapter
  labels:
    app: {{ .Chart.Name }}-ns-adapter-tests-app
    release: {{ .Release.Name }}
    app.kubernetes.io/name: {{ .Chart.Name }}-ns-adapter-tests
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  namespace: {{ .Values.global.tests.namespace }}
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: {{ .Chart.Name }}-ns-adapter-tests-app
    spec:
      {{ if .Values.global.isLocalEnv }}
      hostAliases:
        - ip: {{ .Values.global.minikubeIP }}
          hostnames:
            - "{{ .Values.global.gateway.tls.host }}.{{ .Values.global.ingress.domainName }}"
            - "{{ .Values.global.nsAdapter.e2eTests.gatewayHost }}.{{ .Values.global.ingress.domainName }}"
            - "{{ .Values.global.gateway.mtls.external.host }}.{{ .Values.global.ingress.domainName }}"
      {{ end }}
      serviceAccountName: {{ .Chart.Name }}-e2e-ns-adapter
      containers:
        - name: ns-adapter-tests
          image: {{ .Values.global.images.containerRegistry.path }}/{{ .Values.global.images.e2e_tests.dir }}compass-tests:{{ .Values.global.images.e2e_tests.version }}
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh"]
          args: ["-c", "/ns-adapter.test -test.v; exit_code=$?; echo code is $exit_code; echo 'killing pilot-agent...'; curl -XPOST http://127.0.0.1:15020/quitquitquit; sleep 4; exit $exit_code;"]
          resources:
            limits:
              memory: "256Mi"
          env:
            - name: DIRECTOR_EXTERNAL_CERT_SECURED_URL
              value: "https://{{ .Values.global.gateway.mtls.external.host }}.{{ .Values.global.ingress.domainName }}{{ .Values.global.director.prefix }}/graphql"
            - name: APP_EXTERNAL_CLIENT_CERT_SECRET
              value: "{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.namespace }}/{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.name }}"
            - name: APP_EXTERNAL_CLIENT_CERT_KEY
              value: "{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.certKey }}"
            - name: APP_EXTERNAL_CLIENT_KEY_KEY
              value: "{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.keyKey }}"
            - name: SKIP_SSL_VALIDATION
              value: "{{ .Values.global.tests.http.client.skipSSLValidation }}"
            - name: ADAPTER_URL
              value: "https://{{ .Values.global.nsAdapter.e2eTests.gatewayHost }}.{{ .Values.global.ingress.domainName }}{{ .Values.global.nsAdapter.path }}"
            - name: APP_DB_USER
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-username
            - name: APP_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-password
            - name: APP_DB_HOST
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-serviceName
            - name: APP_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-servicePort
            - name: APP_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-db-name
            - name: APP_DB_SSL
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-sslMode
            - name: DEFAULT_TEST_TENANT
              value: "{{ .Values.global.defaultTenant}}"
            - name: EXTERNAL_SERVICES_MOCK_URL
              value: {{ .Values.global.tests.externalServicesMockFQDN }}:8080
            - name: CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.nsAdapter.authSecret.name }}
                  key: {{ .Values.global.nsAdapter.authSecret.clientIdKey }}
            - name: CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.nsAdapter.authSecret.name }}
                  key: {{ .Values.global.nsAdapter.authSecret.clientSecretKey }}
            - name: TOKEN_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.nsAdapter.authSecret.name }}
                  key: {{ .Values.global.nsAdapter.authSecret.tokenUrlKey }}
            - name: INSTANCE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.nsAdapter.authSecret.name }}
                  key: {{ .Values.global.nsAdapter.authSecret.instanceUrlKey}}
            - name: TOKEN_PATH
              value: {{ .Values.global.nsAdapter.tokenPath }}
            - name: REGISTER_PATH
              value: {{ .Values.global.nsAdapter.registerPath }}
            - name: NS_SUBACCOUNT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.nsAdapter.secret.name }}
                  key: {{ .Values.global.nsAdapter.secret.subaccountKey }}
            - name: CREATE_CLONE_PATTERN
              value: {{ .Values.global.nsAdapter.createClonePattern | quote }}
            - name: CREATE_BINDING_PATTERN
              value: {{ .Values.global.nsAdapter.createBindingPattern | quote }}
            - name: APP_OAUTH_X509_CERT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.nsAdapter.authSecret.name }}
                  key: {{ .Values.global.nsAdapter.authSecret.certKey }}
            - name: APP_OAUTH_X509_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.nsAdapter.authSecret.name }}
                  key: {{ .Values.global.nsAdapter.authSecret.keyKey }}
            - name: USE_CLONE
              value: {{ .Values.global.nsAdapter.useClone | quote }}
        {{if eq .Values.global.database.embedded.enabled false}}
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.23.0-alpine
          command:
            - /bin/sh
          args:
            - -c
            - "trap 'exit 0' SIGINT SIGTERM; echo 'Waiting for istio-proxy to start...' && sleep 15; /cloud_sql_proxy -instances={{ .Values.global.database.managedGCP.instanceConnectionName }}=tcp:5432 -term_timeout=2s"
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "killall cloud_sql_proxy"]
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz/ready
              port: 15021
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          {{- with .Values.global.tests.securityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
          {{- end }}
      {{end}}
      restartPolicy: Never
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Chart.Name }}-e2e-ns-adapter
  namespace: {{ .Values.global.tests.namespace }}
  {{- if eq .Values.global.database.embedded.enabled false }}
  annotations:
    iam.gke.io/gcp-service-account: {{ $.Values.global.database.sqlProxyServiceAccount | quote }}
  {{- end }}
  labels:
    app: {{ $.Chart.Name }}
    release: {{ $.Release.Name }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "name" . }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Chart.Name }}-e2e-ns-adapter-client-cert
  namespace: {{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.namespace }}
  labels:
    app: {{ $.Chart.Name }}
    release: {{ $.Release.Name }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "name" . }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
subjects:
  - kind: ServiceAccount
    name: {{ .Chart.Name }}-e2e-ns-adapter
    namespace: {{ .Values.global.tests.namespace }}
roleRef:
  kind: Role
  name: director-{{ .Values.global.externalCertConfiguration.secrets.externalClientCertSecret.name }}
  apiGroup: rbac.authorization.k8s.io
