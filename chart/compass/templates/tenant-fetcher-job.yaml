{{- range $tenantFetcherName, $config := .Values.global.tenantFetchers -}}
{{if eq $config.enabled true}}
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: "compass-tenant-fetcher-{{ $tenantFetcherName }}"
spec:
  schedule: "{{ $config.schedule }}"
  failedJobsHistoryLimit: 5
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 60 # Fix for https://github.com/kyma-incubator/compass/issues/1155
  jobTemplate:
    metadata:
      labels:
        cronjob: tenant-fetcher
    spec:
      template:
        metadata:
          labels:
            cronjob: tenant-fetcher
        spec:
          containers:
          - name: fetcher
            image: {{ $.Values.global.images.containerRegistry.path }}/{{ $.Values.global.images.director.dir }}compass-director:{{ $.Values.global.images.director.version }}
            imagePullPolicy: IfNotPresent
            env:
              - name: APP_DB_USER
                valueFrom:
                  secretKeyRef:
                    name: compass-postgresql
                    key: postgresql-director-username
              - name: APP_DB_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: compass-postgresql
                    key: postgresql-director-password
              - name: APP_DB_HOST
                valueFrom:
                  secretKeyRef:
                    name: compass-postgresql
                    key: postgresql-serviceName
              - name: APP_DB_PORT
                valueFrom:
                  secretKeyRef:
                    name: compass-postgresql
                    key: postgresql-servicePort
              - name: APP_DB_NAME
                valueFrom:
                  secretKeyRef:
                    name: compass-postgresql
                    key: postgresql-director-db-name
              - name: APP_DB_SSL
                valueFrom:
                  secretKeyRef:
                    name: compass-postgresql
                    key: postgresql-sslMode
              - name: APP_DB_MAX_OPEN_CONNECTIONS
                value: "{{ $config.dbPool.maxOpenConnections }}"
              - name: APP_DB_MAX_IDLE_CONNECTIONS
                value: "{{ $config.dbPool.maxIdleConnections }}"
              - name: APP_ENDPOINT_TENANT_CREATED
                value: {{ $config.endpoints.tenantCreated }}
              - name: APP_ENDPOINT_TENANT_DELETED
                value: {{ $config.endpoints.tenantDeleted }}
              - name: APP_ENDPOINT_TENANT_UPDATED
                value: {{ $config.endpoints.tenantUpdated }}
              - name: APP_TENANT_PROVIDER
                value: {{ $config.providerName }}
              - name: APP_CLIENT_ID
                valueFrom:
                  secretKeyRef:
                    name: compass-tenant-fetcher-secret-{{ $tenantFetcherName }}
                    key: oauth-client
              - name: APP_CLIENT_SECRET
                valueFrom:
                  secretKeyRef:
                    name: compass-tenant-fetcher-secret-{{ $tenantFetcherName }}
                    key: oauth-secret
              - name: APP_OAUTH_TOKEN_ENDPOINT
                valueFrom:
                  secretKeyRef:
                    name: compass-tenant-fetcher-secret-{{ $tenantFetcherName }}
                    key: oauth-token-endpoint
              - name: APP_MAPPING_FIELD_ID
                value: {{ $config.fieldMapping.idField }}
              - name: APP_MAPPING_FIELD_NAME
                value: {{ $config.fieldMapping.nameField }}
              - name: APP_MAPPING_FIELD_DISCRIMINATOR
                value: {{ $config.fieldMapping.discriminatorField }}
              - name: APP_MAPPING_VALUE_DISCRIMINATOR
                value: {{ $config.fieldMapping.discriminatorValue }}
              - name: APP_MAPPING_FIELD_DETAILS
                value: {{ $config.fieldMapping.detailsField}}
              - name: APP_TENANT_TOTAL_PAGES_FIELD
                value: {{ $config.fieldMapping.totalPagesField}}
              - name: APP_TENANT_TOTAL_RESULTS_FIELD
                value: {{ $config.fieldMapping.totalResultsField}}
              - name: APP_TENANT_EVENTS_FIELD
                value: {{ $config.fieldMapping.tenantEventsField}}
              - name: APP_QUERY_PAGE_NUM_FIELD
                value: {{ $config.queryMapping.pageNumField}}
              - name: APP_QUERY_PAGE_SIZE_FIELD
                value: {{ $config.queryMapping.pageSizeField}}
              - name: APP_QUERY_TIMESTAMP_FIELD
                value: {{ $config.queryMapping.timestampField}}
              - name: APP_QUERY_PAGE_START
                value: "{{ $config.query.startPage}}"
              - name: APP_QUERY_PAGE_SIZE
                value: "{{ $config.query.pageSize}}"
            {{ if and ($.Values.global.metrics.enabled) ($.Values.global.metrics.pushEndpoint) }}
              - name: APP_METRICS_PUSH_ENDPOINT
                value: {{ $.Values.global.metrics.pushEndpoint}}
            {{ end }}
            command:
              - "/bin/sh"
            args:
              - "-c"
              - "./tenantfetcher; exit_code=$?; echo '# KILLING PILOT-AGENT #'; pkill -INT cloud_sql_proxy; curl -XPOST http://127.0.0.1:15020/quitquitquit; sleep 5; exit $exit_code;"
          {{if eq $.Values.global.database.embedded.enabled false}}
          - name: cloudsql-proxy
            image: gcr.io/cloudsql-docker/gce-proxy:1.14
            command:
              - /bin/sh
            args:
              - -c
              - "trap 'exit 0' SIGINT; /cloud_sql_proxy -instances={{ .Values.global.database.managedGCP.instanceConnectionName }}=tcp:5432 -credential_file=/secrets/cloudsql-instance-credentials/credentials.json"
            volumeMounts:
              - name: cloudsql-instance-credentials
                mountPath: /secrets/cloudsql-instance-credentials
                readOnly: true
          {{end}}
          restartPolicy: Never
          shareProcessNamespace: true
          {{if eq $.Values.global.database.embedded.enabled false}}
          volumes:
          - name: cloudsql-instance-credentials
            secret:
              secretName: cloudsql-instance-credentials
          {{end}}
{{ end }}
{{- end -}}