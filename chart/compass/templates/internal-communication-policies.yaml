apiVersion: security.istio.io/v1beta1
kind: RequestAuthentication
metadata:
  name: {{ .Chart.Name }}-internal-authn
  namespace: {{ .Release.Namespace }}
spec:
  jwtRules:
    - issuer: kubernetes/serviceaccount
      jwksUri: {{ .Values.global.kubernetes.serviceAccountTokenJWKS }}
      forwardOriginalToken: true
      fromHeaders:
        - name: X-Authorization
          prefix: "Bearer "
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: {{ .Chart.Name }}-internal-authz
  namespace: {{ .Release.Namespace }}
spec:
  action: ALLOW # allow only
  rules:
    - to: # non-sensitive paths
        - operation:
            methods:
              - GET
            paths:
              - /healthz*
        - operation:
            methods:
              - GET
            paths:
              - /readyz*
        - operation:
            methods:
              - GET
            paths:
              - /livez*
        - operation:
            methods:
              - GET
            paths:
              - /metrics*
        - operation:
            methods:
              - GET
            paths:
              - /open-resource-discovery-docs*
        - operation:
            methods:
              - GET
            paths:
              - {{ .Values.global.director.info.path }}
    - to: # db communication
        - operation:
            ports:
              - "5432"
    - to: # frontend
        - operation:
            hosts:
              - compass.{{ .Values.global.ingress.domainName }}
              - compass-mf.{{ .Values.global.ingress.domainName }}
            {{- if eq .Values.global.externalServicesMock.enabled true }}
              - "compass-external-services-mock.*"
              - "{{ .Values.global.externalServicesMock.certSecuredHost }}.*"
            {{end}}
    - from: # or anything other only if the request is authenticated via RequestAuthentication
        - source:
            requestPrincipals: ["*"]
    - from:
        - source:
            principals: ["cluster.local/ns/kyma-system/sa/monitoring-prometheus"]
---
apiVersion: security.istio.io/v1beta1
kind: RequestAuthentication
metadata:
  name: kyma-internal-authn
  namespace: kyma-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: hydra
  jwtRules:
    - issuer: kubernetes/serviceaccount
      jwksUri: {{ .Values.global.kubernetes.serviceAccountTokenJWKS }}
      forwardOriginalToken: true
      fromHeaders:
        - name: X-Authorization
          prefix: "Bearer "
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: kyma-internal-authz
  namespace: kyma-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: hydra
  action: ALLOW # allow only
  rules:
    - to: # token endpoint
        - operation:
            hosts:
              - oauth2.{{ .Values.global.ingress.domainName }}
              - oauth2.{{ .Values.global.ingress.domainName }}:443
            paths:
              - /oauth2/token*
    - from: # or anything other only if the request is authenticated via RequestAuthentication
        - source:
            requestPrincipals: ['*']
