apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: {{ .Chart.Name }}-correlation-headers-rewrite
  namespace: {{ .Values.global.istio.namespace }}
spec:
  workloadSelector:
    labels:
      app: {{ .Values.global.istio.ingressgateway.workloadLabel }}
  configPatches:
    - applyTo: HTTP_FILTER
      match:
        context: GATEWAY
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.http_connection_manager
      patch:
        operation: INSERT_BEFORE
        value:
          name: envoy.lua
          typed_config:
            "@type": "type.googleapis.com/envoy.config.filter.http.lua.v2.Lua"
            inlineCode: |
              function expectedCorrelationHeaders()
                local headers = {}
                {{ range .Values.global.istio.ingressgateway.correlationHeaderRewriteFilter.expectedHeaders }}headers['{{ . }}']=true
                {{ end }}
                return headers
              end
              function envoy_on_request(request_handle)
                local expectedHeaders = expectedCorrelationHeaders()
                local reqHeaders = request_handle:headers()
                local newRequestIDHeaderValue=''
                for key, value in pairs(reqHeaders) do
                  if (expectedHeaders[key] and newRequestIDHeaderValue=='')then -- empty value check is needed because we cannot break the loop: https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/lua_filter#pairs
                    newRequestIDHeaderValue = value
                  end
                end

                if newRequestIDHeaderValue~='' then
                  request_handle:headers():replace("x-request-id", newRequestIDHeaderValue)
                end
              end
