apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: {{ .Chart.Name }}-oathkeeper-sa-token
  namespace: {{ .Values.global.oathkeeperFilters.namespace }}
spec:
  workloadSelector:
    labels:
      app.kubernetes.io/name: {{ .Values.global.oathkeeperFilters.workloadLabel }}
  configPatches:
    - applyTo: HTTP_FILTER
      match:
        context: SIDECAR_OUTBOUND
        listener:
          filterChain:
            filter:
              name: envoy.filters.network.http_connection_manager
              subFilter:
                name: "envoy.filters.http.router"
      patch:
        operation: INSERT_BEFORE
        value:
          name: envoy.lua
          typed_config:
            "@type": "type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua"
            inlineCode: |
              local function read_file(path)
                local file = io.open(path, "rb")
                if not file then return nil end
                local content = file:read "*a"
                file:close()
                return content
              end

              function envoy_on_request(request_handle)
                request_handle:logInfo("Add Service Account token filter")

                local token = read_file("/var/run/secrets/kubernetes.io/serviceaccount/token");

                if token~='' then
                  request_handle:headers():replace("X-Authorization", "Bearer "..token)
                else
                  request_handle:logError("Could not find SA token on the filesystem!")
                end
              end